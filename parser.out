Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AS
    BOOLEAN
    BY
    BYTE
    CATCH
    CHAR
    COMMENTLINEA
    COMMENTMULTI
    COMPANION
    CONST
    CROSSINLINE
    DATA
    DELEGATE
    DIVASIGN
    DOLAR
    DOUBLE
    ENUM
    FIELD
    FINAL
    FINALLY
    GENERIC_TYPE
    IMPORT
    INFIX
    INIT
    INLINE
    INT
    INTERFACE
    INTERNAL
    INTERPOLACION
    IS
    LATEINIT
    LCOR
    LONG
    METHOD
    MODASIGN
    MULTASIGN
    NOINLINE
    NULL
    NULLABLE_TYPE
    OBJECT
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PRINTLN
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    PUYCO
    RCOR
    REIFIED
    RESTASIGN
    SEALED
    SHORT
    SUMASIGN
    SUPER
    SUSPEND
    TAILREC
    THROW
    TRAILREC
    TRY
    TYPEALIAS
    TYPEOF
    WHEN
    WHERE
    YIELD

Grammar

Rule 0     S' -> programa
Rule 1     programa -> sentencias
Rule 2     sentencias -> sentencia
Rule 3     sentencias -> sentencias sentencia
Rule 4     empty -> <empty>
Rule 5     sentencia -> asignacion
Rule 6     sentencia -> impresion
Rule 7     sentencia -> impresion_vacia
Rule 8     sentencia -> expresion
Rule 9     sentencia -> condicion
Rule 10    sentencia -> estructura
Rule 11    sentencia -> declaracion_variable
Rule 12    sentencia -> funcion
Rule 13    sentencia -> empty
Rule 14    sentencia -> retorno
Rule 15    sentencia -> clase
Rule 16    sentencia -> constructorPri
Rule 17    sentencia -> CONTINUE
Rule 18    sentencia -> BREAK
Rule 19    declaracion_variable -> VAL VARIABLE ASIGN valor
Rule 20    declaracion_variable -> VAR VARIABLE ASIGN valor
Rule 21    declaracion_variable -> VAL VARIABLE ASIGN estructura
Rule 22    declaracion_variable -> VAR VARIABLE ASIGN estructura
Rule 23    declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto
Rule 24    declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto
Rule 25    asignacion -> VARIABLE ASIGN VARIABLE
Rule 26    asignacion -> VARIABLE ASIGN expresion
Rule 27    asignacion -> VARIABLE ASIGN condicion
Rule 28    asignacion -> VARIABLE ASIGN estructura
Rule 29    asignacion -> VARIABLE ASIGN creacionObjeto
Rule 30    impresion_vacia -> PRINT LPAREN RPAREN
Rule 31    impresion -> PRINT LPAREN repiteValores RPAREN
Rule 32    valor -> NUMBER
Rule 33    valor -> FLOAT
Rule 34    valor -> VARIABLE
Rule 35    valor -> STRING
Rule 36    valor -> TRUE
Rule 37    valor -> FALSE
Rule 38    repiteValores -> valor COMMA repiteValores
Rule 39    repiteValores -> valor
Rule 40    solicitud -> INPUT LPAREN DOUBLE_QUOTA DOUBLE_QUOTA RPAREN
Rule 41    expresion -> expresion PLUS expresion
Rule 42    expresion -> expresion MINUS expresion
Rule 43    expresion -> expresion TIMES expresion
Rule 44    expresion -> expresion DIVIDE expresion
Rule 45    expresion -> expresion MOD expresion
Rule 46    expresion -> LPAREN expresion RPAREN
Rule 47    expresion -> NUMBER
Rule 48    expresion -> FLOAT
Rule 49    expresion -> TRUE
Rule 50    expresion -> FALSE
Rule 51    expresion -> condicion
Rule 52    expresion -> VARIABLE
Rule 53    condicion -> expresion GREATER expresion
Rule 54    condicion -> expresion LESS expresion
Rule 55    condicion -> expresion GREATER_EQUALS expresion
Rule 56    condicion -> expresion LESS_EQUALS expresion
Rule 57    condicion -> expresion EQUALS expresion
Rule 58    condicion -> expresion NOT_EQUALS expresion
Rule 59    condicion -> condicion AND condicion
Rule 60    condicion -> condicion OR condicion
Rule 61    condicion -> NOT condicion
Rule 62    condicion -> NOT expresion
Rule 63    condicion -> TRUE
Rule 64    condicion -> FALSE
Rule 65    condicion -> LPAREN condicion RPAREN
Rule 66    estructura -> LISTOF LPAREN repiteValores RPAREN
Rule 67    estructura -> LISTOF LPAREN RPAREN
Rule 68    estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN
Rule 69    estructura -> MUTABLELISTOF LPAREN RPAREN
Rule 70    estructura -> MAPOF LPAREN pareskv_mapa RPAREN
Rule 71    estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
Rule 72    pareskv_mapa -> valor TO_FROM_KV valor COMMA pareskv_mapa
Rule 73    pareskv_mapa -> valor TO_FROM_KV valor
Rule 74    estructura -> SETOF LPAREN repiteValores RPAREN
Rule 75    estructura -> SETOF LPAREN RPAREN
Rule 76    estructura -> MUTABLESETOF LPAREN repiteValores RPAREN
Rule 77    estructura -> MUTABLESETOF LPAREN RPAREN
Rule 78    retorno -> RETURN objetoRetorno
Rule 79    objetoRetorno -> valor
Rule 80    objetoRetorno -> condicion
Rule 81    objetoRetorno -> expresion
Rule 82    objetoRetorno -> TRUE
Rule 83    objetoRetorno -> FALSE
Rule 84    objetoRetorno -> estructura
Rule 85    objetoRetorno -> empty
Rule 86    estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
Rule 87    estructura -> WHILE condicion LLLAVE sentencias RLLAVE
Rule 88    estructura -> WHILE condicion LLLAVE RLLAVE
Rule 89    estructura -> IF condicion LLLAVE sentencias RLLAVE
Rule 90    estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
Rule 91    estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf
Rule 92    estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
Rule 93    repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE
Rule 94    repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf
Rule 95    estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion
Rule 96    estructura -> DO LLLAVE RLLAVE WHILE condicion
Rule 97    parametros -> VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
Rule 98    parametros -> VARIABLE COLON VARIABLE ASIGN valor
Rule 99    parametros -> VARIABLE COLON VARIABLE COMMA parametros
Rule 100   parametros -> VARIABLE COLON VARIABLE
Rule 101   parametros -> empty
Rule 102   funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
Rule 103   funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
Rule 104   funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
Rule 105   repetirThis -> THIS DOT VARIABLE ASIGN valor repetirThis
Rule 106   repetirThis -> THIS DOT VARIABLE ASIGN valor
Rule 107   formarThis -> THIS LPAREN repiteValores RPAREN
Rule 108   repetirDeclaracion -> declaracion_variable repetirDeclaracion
Rule 109   repetirDeclaracion -> declaracion_variable
Rule 110   creacionObjeto -> VARIABLE LPAREN RPAREN
Rule 111   creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN
Rule 112   clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE
Rule 113   clase -> CLASS VARIABLE LLLAVE RLLAVE
Rule 114   clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
Rule 115   clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE
Rule 116   clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
Rule 117   clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
Rule 118   constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
Rule 119   constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
Rule 120   constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE
Rule 121   constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE
Rule 122   constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN LLLAVE repetirThis RLLAVE
Rule 123   constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE RLLAVE
Rule 124   constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN LLLAVE RLLAVE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 59
AS                   : 
ASIGN                : 19 20 21 22 23 24 25 26 27 28 29 97 98 104 105 106
BOOLEAN              : 
BREAK                : 18
BY                   : 
BYTE                 : 
CATCH                : 
CHAR                 : 
CLASS                : 112 113 114 115 116 117 118 119 120
COLON                : 97 98 99 100 102 104 116 117 121 123
COMMA                : 38 72 97 99
COMMENTLINEA         : 
COMMENTMULTI         : 
COMPANION            : 
CONST                : 
CONSTRUCTOR          : 121 122 123 124
CONTINUE             : 17
CROSSINLINE          : 
DATA                 : 
DELEGATE             : 
DIVASIGN             : 
DIVIDE               : 44
DO                   : 95 96
DOLAR                : 
DOT                  : 105 106
DOUBLE               : 
DOUBLE_QUOTA         : 40 40
ELSE                 : 90 92 93 94
ENUM                 : 
EQUALS               : 57
FALSE                : 37 50 64 83
FIELD                : 
FINAL                : 
FINALLY              : 
FLOAT                : 33 48
FOR                  : 86
FUN                  : 102 103 104
GENERIC_TYPE         : 
GREATER              : 53
GREATER_EQUALS       : 55
IF                   : 89 90 91 92 93 94
IMPORT               : 
IN                   : 86
INFIX                : 
INIT                 : 
INLINE               : 
INPUT                : 40
INT                  : 
INTERFACE            : 
INTERNAL             : 
INTERPOLACION        : 
IS                   : 
LATEINIT             : 
LCOR                 : 
LESS                 : 54
LESS_EQUALS          : 56
LISTOF               : 66 67
LLLAVE               : 86 87 88 89 90 90 91 92 92 93 94 95 96 102 103 112 113 114 115 116 117 118 119 120 121 122 123 124
LONG                 : 
LPAREN               : 30 31 40 46 65 66 67 68 69 70 71 74 75 76 77 86 102 103 104 107 110 111 116 117 118 119 120 121 122 123 124
MAPOF                : 70
METHOD               : 
MINUS                : 42
MOD                  : 45
MODASIGN             : 
MULTASIGN            : 
MUTABLELISTOF        : 68 69
MUTABLEMAPOF         : 71
MUTABLESETOF         : 76 77
NOINLINE             : 
NOT                  : 61 62
NOT_EQUALS           : 58
NULL                 : 
NULLABLE_TYPE        : 
NUMBER               : 32 47
OBJECT               : 
OPEN                 : 114 115
OPERATOR             : 
OR                   : 60
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PLUS                 : 41
PRINT                : 30 31
PRINTLN              : 
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUYCO                : 
RANGE_TO             : 86
RCOR                 : 
REIFIED              : 
RESTASIGN            : 
RETURN               : 78
RLLAVE               : 86 87 88 89 90 90 91 92 92 93 94 95 96 102 103 112 113 114 115 116 117 118 119 120 121 122 123 124
RPAREN               : 30 31 40 46 65 66 67 68 69 70 71 74 75 76 77 86 102 103 104 107 110 111 116 117 118 119 120 121 122 123 124
SEALED               : 
SETOF                : 74 75
SHORT                : 
STRING               : 35
SUMASIGN             : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
THIS                 : 105 106 107
THROW                : 
TIMES                : 43
TO_FROM_KV           : 72 73
TRAILREC             : 
TRUE                 : 36 49 63 82
TRY                  : 
TYPEALIAS            : 
TYPEOF               : 
VAL                  : 19 21 23
VAR                  : 20 22 24
VARIABLE             : 19 20 21 22 23 24 25 25 26 27 28 29 34 52 86 97 97 98 98 99 99 100 100 102 102 103 104 104 105 106 110 111 112 113 114 115 116 116 117 117 118 119 120
WHEN                 : 
WHERE                : 
WHILE                : 87 88 95 96
YIELD                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 5
clase                : 15
condicion            : 9 27 51 59 59 60 60 61 65 80 87 88 89 90 91 92 93 94 95 96
constructorPri       : 16
constructorSec       : 120
creacionObjeto       : 23 24 29
declaracion_variable : 11 108 109
empty                : 13 85 101 103
estructura           : 10 21 22 28 84
expresion            : 8 26 41 41 42 42 43 43 44 44 45 45 46 53 53 54 54 55 55 56 56 57 57 58 58 62 81
formarThis           : 121 123
funcion              : 12
impresion            : 6
impresion_vacia      : 7
objetoRetorno        : 78
parametros           : 97 99 102 103 104 118 119 120 121 122 123 124
pareskv_mapa         : 70 71 72
programa             : 0
repetirDeclaracion   : 108 118 120
repetirElseIf        : 90 91 94
repetirThis          : 105 121 122
repiteValores        : 31 38 66 68 74 76 107 111
retorno              : 14
sentencia            : 2 3
sentencias           : 1 3 86 87 89 90 90 91 92 92 93 94 95 102 104 112 114 116
solicitud            : 
valor                : 19 20 38 39 72 72 73 73 79 86 86 97 98 105 106

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . sentencias
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    $end            reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    programa                       shift and go to state 1
    sentencias                     shift and go to state 2
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 1

    (0) S' -> programa .



state 2

    (1) programa -> sentencias .
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (programa -> sentencias .)
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    $end            reduce using rule 1 (programa -> sentencias .)
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]
  ! $end            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 3

    (2) sentencias -> sentencia .

    CONTINUE        reduce using rule 2 (sentencias -> sentencia .)
    BREAK           reduce using rule 2 (sentencias -> sentencia .)
    VARIABLE        reduce using rule 2 (sentencias -> sentencia .)
    PRINT           reduce using rule 2 (sentencias -> sentencia .)
    LPAREN          reduce using rule 2 (sentencias -> sentencia .)
    NUMBER          reduce using rule 2 (sentencias -> sentencia .)
    FLOAT           reduce using rule 2 (sentencias -> sentencia .)
    TRUE            reduce using rule 2 (sentencias -> sentencia .)
    FALSE           reduce using rule 2 (sentencias -> sentencia .)
    NOT             reduce using rule 2 (sentencias -> sentencia .)
    LISTOF          reduce using rule 2 (sentencias -> sentencia .)
    MUTABLELISTOF   reduce using rule 2 (sentencias -> sentencia .)
    MAPOF           reduce using rule 2 (sentencias -> sentencia .)
    MUTABLEMAPOF    reduce using rule 2 (sentencias -> sentencia .)
    SETOF           reduce using rule 2 (sentencias -> sentencia .)
    MUTABLESETOF    reduce using rule 2 (sentencias -> sentencia .)
    FOR             reduce using rule 2 (sentencias -> sentencia .)
    WHILE           reduce using rule 2 (sentencias -> sentencia .)
    IF              reduce using rule 2 (sentencias -> sentencia .)
    DO              reduce using rule 2 (sentencias -> sentencia .)
    VAL             reduce using rule 2 (sentencias -> sentencia .)
    VAR             reduce using rule 2 (sentencias -> sentencia .)
    FUN             reduce using rule 2 (sentencias -> sentencia .)
    RETURN          reduce using rule 2 (sentencias -> sentencia .)
    CLASS           reduce using rule 2 (sentencias -> sentencia .)
    OPEN            reduce using rule 2 (sentencias -> sentencia .)
    $end            reduce using rule 2 (sentencias -> sentencia .)
    RLLAVE          reduce using rule 2 (sentencias -> sentencia .)


state 4

    (5) sentencia -> asignacion .

    CONTINUE        reduce using rule 5 (sentencia -> asignacion .)
    BREAK           reduce using rule 5 (sentencia -> asignacion .)
    VARIABLE        reduce using rule 5 (sentencia -> asignacion .)
    PRINT           reduce using rule 5 (sentencia -> asignacion .)
    LPAREN          reduce using rule 5 (sentencia -> asignacion .)
    NUMBER          reduce using rule 5 (sentencia -> asignacion .)
    FLOAT           reduce using rule 5 (sentencia -> asignacion .)
    TRUE            reduce using rule 5 (sentencia -> asignacion .)
    FALSE           reduce using rule 5 (sentencia -> asignacion .)
    NOT             reduce using rule 5 (sentencia -> asignacion .)
    LISTOF          reduce using rule 5 (sentencia -> asignacion .)
    MUTABLELISTOF   reduce using rule 5 (sentencia -> asignacion .)
    MAPOF           reduce using rule 5 (sentencia -> asignacion .)
    MUTABLEMAPOF    reduce using rule 5 (sentencia -> asignacion .)
    SETOF           reduce using rule 5 (sentencia -> asignacion .)
    MUTABLESETOF    reduce using rule 5 (sentencia -> asignacion .)
    FOR             reduce using rule 5 (sentencia -> asignacion .)
    WHILE           reduce using rule 5 (sentencia -> asignacion .)
    IF              reduce using rule 5 (sentencia -> asignacion .)
    DO              reduce using rule 5 (sentencia -> asignacion .)
    VAL             reduce using rule 5 (sentencia -> asignacion .)
    VAR             reduce using rule 5 (sentencia -> asignacion .)
    FUN             reduce using rule 5 (sentencia -> asignacion .)
    RETURN          reduce using rule 5 (sentencia -> asignacion .)
    CLASS           reduce using rule 5 (sentencia -> asignacion .)
    OPEN            reduce using rule 5 (sentencia -> asignacion .)
    $end            reduce using rule 5 (sentencia -> asignacion .)
    RLLAVE          reduce using rule 5 (sentencia -> asignacion .)


state 5

    (6) sentencia -> impresion .

    CONTINUE        reduce using rule 6 (sentencia -> impresion .)
    BREAK           reduce using rule 6 (sentencia -> impresion .)
    VARIABLE        reduce using rule 6 (sentencia -> impresion .)
    PRINT           reduce using rule 6 (sentencia -> impresion .)
    LPAREN          reduce using rule 6 (sentencia -> impresion .)
    NUMBER          reduce using rule 6 (sentencia -> impresion .)
    FLOAT           reduce using rule 6 (sentencia -> impresion .)
    TRUE            reduce using rule 6 (sentencia -> impresion .)
    FALSE           reduce using rule 6 (sentencia -> impresion .)
    NOT             reduce using rule 6 (sentencia -> impresion .)
    LISTOF          reduce using rule 6 (sentencia -> impresion .)
    MUTABLELISTOF   reduce using rule 6 (sentencia -> impresion .)
    MAPOF           reduce using rule 6 (sentencia -> impresion .)
    MUTABLEMAPOF    reduce using rule 6 (sentencia -> impresion .)
    SETOF           reduce using rule 6 (sentencia -> impresion .)
    MUTABLESETOF    reduce using rule 6 (sentencia -> impresion .)
    FOR             reduce using rule 6 (sentencia -> impresion .)
    WHILE           reduce using rule 6 (sentencia -> impresion .)
    IF              reduce using rule 6 (sentencia -> impresion .)
    DO              reduce using rule 6 (sentencia -> impresion .)
    VAL             reduce using rule 6 (sentencia -> impresion .)
    VAR             reduce using rule 6 (sentencia -> impresion .)
    FUN             reduce using rule 6 (sentencia -> impresion .)
    RETURN          reduce using rule 6 (sentencia -> impresion .)
    CLASS           reduce using rule 6 (sentencia -> impresion .)
    OPEN            reduce using rule 6 (sentencia -> impresion .)
    $end            reduce using rule 6 (sentencia -> impresion .)
    RLLAVE          reduce using rule 6 (sentencia -> impresion .)


state 6

    (7) sentencia -> impresion_vacia .

    CONTINUE        reduce using rule 7 (sentencia -> impresion_vacia .)
    BREAK           reduce using rule 7 (sentencia -> impresion_vacia .)
    VARIABLE        reduce using rule 7 (sentencia -> impresion_vacia .)
    PRINT           reduce using rule 7 (sentencia -> impresion_vacia .)
    LPAREN          reduce using rule 7 (sentencia -> impresion_vacia .)
    NUMBER          reduce using rule 7 (sentencia -> impresion_vacia .)
    FLOAT           reduce using rule 7 (sentencia -> impresion_vacia .)
    TRUE            reduce using rule 7 (sentencia -> impresion_vacia .)
    FALSE           reduce using rule 7 (sentencia -> impresion_vacia .)
    NOT             reduce using rule 7 (sentencia -> impresion_vacia .)
    LISTOF          reduce using rule 7 (sentencia -> impresion_vacia .)
    MUTABLELISTOF   reduce using rule 7 (sentencia -> impresion_vacia .)
    MAPOF           reduce using rule 7 (sentencia -> impresion_vacia .)
    MUTABLEMAPOF    reduce using rule 7 (sentencia -> impresion_vacia .)
    SETOF           reduce using rule 7 (sentencia -> impresion_vacia .)
    MUTABLESETOF    reduce using rule 7 (sentencia -> impresion_vacia .)
    FOR             reduce using rule 7 (sentencia -> impresion_vacia .)
    WHILE           reduce using rule 7 (sentencia -> impresion_vacia .)
    IF              reduce using rule 7 (sentencia -> impresion_vacia .)
    DO              reduce using rule 7 (sentencia -> impresion_vacia .)
    VAL             reduce using rule 7 (sentencia -> impresion_vacia .)
    VAR             reduce using rule 7 (sentencia -> impresion_vacia .)
    FUN             reduce using rule 7 (sentencia -> impresion_vacia .)
    RETURN          reduce using rule 7 (sentencia -> impresion_vacia .)
    CLASS           reduce using rule 7 (sentencia -> impresion_vacia .)
    OPEN            reduce using rule 7 (sentencia -> impresion_vacia .)
    $end            reduce using rule 7 (sentencia -> impresion_vacia .)
    RLLAVE          reduce using rule 7 (sentencia -> impresion_vacia .)


state 7

    (8) sentencia -> expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

    CONTINUE        reduce using rule 8 (sentencia -> expresion .)
    BREAK           reduce using rule 8 (sentencia -> expresion .)
    VARIABLE        reduce using rule 8 (sentencia -> expresion .)
    PRINT           reduce using rule 8 (sentencia -> expresion .)
    LPAREN          reduce using rule 8 (sentencia -> expresion .)
    NUMBER          reduce using rule 8 (sentencia -> expresion .)
    FLOAT           reduce using rule 8 (sentencia -> expresion .)
    TRUE            reduce using rule 8 (sentencia -> expresion .)
    FALSE           reduce using rule 8 (sentencia -> expresion .)
    NOT             reduce using rule 8 (sentencia -> expresion .)
    LISTOF          reduce using rule 8 (sentencia -> expresion .)
    MUTABLELISTOF   reduce using rule 8 (sentencia -> expresion .)
    MAPOF           reduce using rule 8 (sentencia -> expresion .)
    MUTABLEMAPOF    reduce using rule 8 (sentencia -> expresion .)
    SETOF           reduce using rule 8 (sentencia -> expresion .)
    MUTABLESETOF    reduce using rule 8 (sentencia -> expresion .)
    FOR             reduce using rule 8 (sentencia -> expresion .)
    WHILE           reduce using rule 8 (sentencia -> expresion .)
    IF              reduce using rule 8 (sentencia -> expresion .)
    DO              reduce using rule 8 (sentencia -> expresion .)
    VAL             reduce using rule 8 (sentencia -> expresion .)
    VAR             reduce using rule 8 (sentencia -> expresion .)
    FUN             reduce using rule 8 (sentencia -> expresion .)
    RETURN          reduce using rule 8 (sentencia -> expresion .)
    CLASS           reduce using rule 8 (sentencia -> expresion .)
    OPEN            reduce using rule 8 (sentencia -> expresion .)
    $end            reduce using rule 8 (sentencia -> expresion .)
    RLLAVE          reduce using rule 8 (sentencia -> expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53


state 8

    (9) sentencia -> condicion .
    (51) expresion -> condicion .
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion

  ! reduce/reduce conflict for CONTINUE resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for BREAK resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for NOT resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for LISTOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for MAPOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for SETOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for IF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for DO resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for VAL resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for VAR resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for FUN resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for CLASS resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for OPEN resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for $end resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 9 (sentencia -> condicion .)
    CONTINUE        reduce using rule 9 (sentencia -> condicion .)
    BREAK           reduce using rule 9 (sentencia -> condicion .)
    VARIABLE        reduce using rule 9 (sentencia -> condicion .)
    PRINT           reduce using rule 9 (sentencia -> condicion .)
    LPAREN          reduce using rule 9 (sentencia -> condicion .)
    NUMBER          reduce using rule 9 (sentencia -> condicion .)
    FLOAT           reduce using rule 9 (sentencia -> condicion .)
    TRUE            reduce using rule 9 (sentencia -> condicion .)
    FALSE           reduce using rule 9 (sentencia -> condicion .)
    NOT             reduce using rule 9 (sentencia -> condicion .)
    LISTOF          reduce using rule 9 (sentencia -> condicion .)
    MUTABLELISTOF   reduce using rule 9 (sentencia -> condicion .)
    MAPOF           reduce using rule 9 (sentencia -> condicion .)
    MUTABLEMAPOF    reduce using rule 9 (sentencia -> condicion .)
    SETOF           reduce using rule 9 (sentencia -> condicion .)
    MUTABLESETOF    reduce using rule 9 (sentencia -> condicion .)
    FOR             reduce using rule 9 (sentencia -> condicion .)
    WHILE           reduce using rule 9 (sentencia -> condicion .)
    IF              reduce using rule 9 (sentencia -> condicion .)
    DO              reduce using rule 9 (sentencia -> condicion .)
    VAL             reduce using rule 9 (sentencia -> condicion .)
    VAR             reduce using rule 9 (sentencia -> condicion .)
    FUN             reduce using rule 9 (sentencia -> condicion .)
    RETURN          reduce using rule 9 (sentencia -> condicion .)
    CLASS           reduce using rule 9 (sentencia -> condicion .)
    OPEN            reduce using rule 9 (sentencia -> condicion .)
    $end            reduce using rule 9 (sentencia -> condicion .)
    RLLAVE          reduce using rule 9 (sentencia -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    AND             shift and go to state 54
    OR              shift and go to state 55

  ! CONTINUE        [ reduce using rule 51 (expresion -> condicion .) ]
  ! BREAK           [ reduce using rule 51 (expresion -> condicion .) ]
  ! VARIABLE        [ reduce using rule 51 (expresion -> condicion .) ]
  ! PRINT           [ reduce using rule 51 (expresion -> condicion .) ]
  ! LPAREN          [ reduce using rule 51 (expresion -> condicion .) ]
  ! NUMBER          [ reduce using rule 51 (expresion -> condicion .) ]
  ! FLOAT           [ reduce using rule 51 (expresion -> condicion .) ]
  ! TRUE            [ reduce using rule 51 (expresion -> condicion .) ]
  ! FALSE           [ reduce using rule 51 (expresion -> condicion .) ]
  ! NOT             [ reduce using rule 51 (expresion -> condicion .) ]
  ! LISTOF          [ reduce using rule 51 (expresion -> condicion .) ]
  ! MUTABLELISTOF   [ reduce using rule 51 (expresion -> condicion .) ]
  ! MAPOF           [ reduce using rule 51 (expresion -> condicion .) ]
  ! MUTABLEMAPOF    [ reduce using rule 51 (expresion -> condicion .) ]
  ! SETOF           [ reduce using rule 51 (expresion -> condicion .) ]
  ! MUTABLESETOF    [ reduce using rule 51 (expresion -> condicion .) ]
  ! FOR             [ reduce using rule 51 (expresion -> condicion .) ]
  ! WHILE           [ reduce using rule 51 (expresion -> condicion .) ]
  ! IF              [ reduce using rule 51 (expresion -> condicion .) ]
  ! DO              [ reduce using rule 51 (expresion -> condicion .) ]
  ! VAL             [ reduce using rule 51 (expresion -> condicion .) ]
  ! VAR             [ reduce using rule 51 (expresion -> condicion .) ]
  ! FUN             [ reduce using rule 51 (expresion -> condicion .) ]
  ! RETURN          [ reduce using rule 51 (expresion -> condicion .) ]
  ! CLASS           [ reduce using rule 51 (expresion -> condicion .) ]
  ! OPEN            [ reduce using rule 51 (expresion -> condicion .) ]
  ! $end            [ reduce using rule 51 (expresion -> condicion .) ]
  ! RLLAVE          [ reduce using rule 51 (expresion -> condicion .) ]


state 9

    (10) sentencia -> estructura .

    CONTINUE        reduce using rule 10 (sentencia -> estructura .)
    BREAK           reduce using rule 10 (sentencia -> estructura .)
    VARIABLE        reduce using rule 10 (sentencia -> estructura .)
    PRINT           reduce using rule 10 (sentencia -> estructura .)
    LPAREN          reduce using rule 10 (sentencia -> estructura .)
    NUMBER          reduce using rule 10 (sentencia -> estructura .)
    FLOAT           reduce using rule 10 (sentencia -> estructura .)
    TRUE            reduce using rule 10 (sentencia -> estructura .)
    FALSE           reduce using rule 10 (sentencia -> estructura .)
    NOT             reduce using rule 10 (sentencia -> estructura .)
    LISTOF          reduce using rule 10 (sentencia -> estructura .)
    MUTABLELISTOF   reduce using rule 10 (sentencia -> estructura .)
    MAPOF           reduce using rule 10 (sentencia -> estructura .)
    MUTABLEMAPOF    reduce using rule 10 (sentencia -> estructura .)
    SETOF           reduce using rule 10 (sentencia -> estructura .)
    MUTABLESETOF    reduce using rule 10 (sentencia -> estructura .)
    FOR             reduce using rule 10 (sentencia -> estructura .)
    WHILE           reduce using rule 10 (sentencia -> estructura .)
    IF              reduce using rule 10 (sentencia -> estructura .)
    DO              reduce using rule 10 (sentencia -> estructura .)
    VAL             reduce using rule 10 (sentencia -> estructura .)
    VAR             reduce using rule 10 (sentencia -> estructura .)
    FUN             reduce using rule 10 (sentencia -> estructura .)
    RETURN          reduce using rule 10 (sentencia -> estructura .)
    CLASS           reduce using rule 10 (sentencia -> estructura .)
    OPEN            reduce using rule 10 (sentencia -> estructura .)
    $end            reduce using rule 10 (sentencia -> estructura .)
    RLLAVE          reduce using rule 10 (sentencia -> estructura .)


state 10

    (11) sentencia -> declaracion_variable .

    CONTINUE        reduce using rule 11 (sentencia -> declaracion_variable .)
    BREAK           reduce using rule 11 (sentencia -> declaracion_variable .)
    VARIABLE        reduce using rule 11 (sentencia -> declaracion_variable .)
    PRINT           reduce using rule 11 (sentencia -> declaracion_variable .)
    LPAREN          reduce using rule 11 (sentencia -> declaracion_variable .)
    NUMBER          reduce using rule 11 (sentencia -> declaracion_variable .)
    FLOAT           reduce using rule 11 (sentencia -> declaracion_variable .)
    TRUE            reduce using rule 11 (sentencia -> declaracion_variable .)
    FALSE           reduce using rule 11 (sentencia -> declaracion_variable .)
    NOT             reduce using rule 11 (sentencia -> declaracion_variable .)
    LISTOF          reduce using rule 11 (sentencia -> declaracion_variable .)
    MUTABLELISTOF   reduce using rule 11 (sentencia -> declaracion_variable .)
    MAPOF           reduce using rule 11 (sentencia -> declaracion_variable .)
    MUTABLEMAPOF    reduce using rule 11 (sentencia -> declaracion_variable .)
    SETOF           reduce using rule 11 (sentencia -> declaracion_variable .)
    MUTABLESETOF    reduce using rule 11 (sentencia -> declaracion_variable .)
    FOR             reduce using rule 11 (sentencia -> declaracion_variable .)
    WHILE           reduce using rule 11 (sentencia -> declaracion_variable .)
    IF              reduce using rule 11 (sentencia -> declaracion_variable .)
    DO              reduce using rule 11 (sentencia -> declaracion_variable .)
    VAL             reduce using rule 11 (sentencia -> declaracion_variable .)
    VAR             reduce using rule 11 (sentencia -> declaracion_variable .)
    FUN             reduce using rule 11 (sentencia -> declaracion_variable .)
    RETURN          reduce using rule 11 (sentencia -> declaracion_variable .)
    CLASS           reduce using rule 11 (sentencia -> declaracion_variable .)
    OPEN            reduce using rule 11 (sentencia -> declaracion_variable .)
    $end            reduce using rule 11 (sentencia -> declaracion_variable .)
    RLLAVE          reduce using rule 11 (sentencia -> declaracion_variable .)


state 11

    (12) sentencia -> funcion .

    CONTINUE        reduce using rule 12 (sentencia -> funcion .)
    BREAK           reduce using rule 12 (sentencia -> funcion .)
    VARIABLE        reduce using rule 12 (sentencia -> funcion .)
    PRINT           reduce using rule 12 (sentencia -> funcion .)
    LPAREN          reduce using rule 12 (sentencia -> funcion .)
    NUMBER          reduce using rule 12 (sentencia -> funcion .)
    FLOAT           reduce using rule 12 (sentencia -> funcion .)
    TRUE            reduce using rule 12 (sentencia -> funcion .)
    FALSE           reduce using rule 12 (sentencia -> funcion .)
    NOT             reduce using rule 12 (sentencia -> funcion .)
    LISTOF          reduce using rule 12 (sentencia -> funcion .)
    MUTABLELISTOF   reduce using rule 12 (sentencia -> funcion .)
    MAPOF           reduce using rule 12 (sentencia -> funcion .)
    MUTABLEMAPOF    reduce using rule 12 (sentencia -> funcion .)
    SETOF           reduce using rule 12 (sentencia -> funcion .)
    MUTABLESETOF    reduce using rule 12 (sentencia -> funcion .)
    FOR             reduce using rule 12 (sentencia -> funcion .)
    WHILE           reduce using rule 12 (sentencia -> funcion .)
    IF              reduce using rule 12 (sentencia -> funcion .)
    DO              reduce using rule 12 (sentencia -> funcion .)
    VAL             reduce using rule 12 (sentencia -> funcion .)
    VAR             reduce using rule 12 (sentencia -> funcion .)
    FUN             reduce using rule 12 (sentencia -> funcion .)
    RETURN          reduce using rule 12 (sentencia -> funcion .)
    CLASS           reduce using rule 12 (sentencia -> funcion .)
    OPEN            reduce using rule 12 (sentencia -> funcion .)
    $end            reduce using rule 12 (sentencia -> funcion .)
    RLLAVE          reduce using rule 12 (sentencia -> funcion .)


state 12

    (13) sentencia -> empty .

    CONTINUE        reduce using rule 13 (sentencia -> empty .)
    BREAK           reduce using rule 13 (sentencia -> empty .)
    VARIABLE        reduce using rule 13 (sentencia -> empty .)
    PRINT           reduce using rule 13 (sentencia -> empty .)
    LPAREN          reduce using rule 13 (sentencia -> empty .)
    NUMBER          reduce using rule 13 (sentencia -> empty .)
    FLOAT           reduce using rule 13 (sentencia -> empty .)
    TRUE            reduce using rule 13 (sentencia -> empty .)
    FALSE           reduce using rule 13 (sentencia -> empty .)
    NOT             reduce using rule 13 (sentencia -> empty .)
    LISTOF          reduce using rule 13 (sentencia -> empty .)
    MUTABLELISTOF   reduce using rule 13 (sentencia -> empty .)
    MAPOF           reduce using rule 13 (sentencia -> empty .)
    MUTABLEMAPOF    reduce using rule 13 (sentencia -> empty .)
    SETOF           reduce using rule 13 (sentencia -> empty .)
    MUTABLESETOF    reduce using rule 13 (sentencia -> empty .)
    FOR             reduce using rule 13 (sentencia -> empty .)
    WHILE           reduce using rule 13 (sentencia -> empty .)
    IF              reduce using rule 13 (sentencia -> empty .)
    DO              reduce using rule 13 (sentencia -> empty .)
    VAL             reduce using rule 13 (sentencia -> empty .)
    VAR             reduce using rule 13 (sentencia -> empty .)
    FUN             reduce using rule 13 (sentencia -> empty .)
    RETURN          reduce using rule 13 (sentencia -> empty .)
    CLASS           reduce using rule 13 (sentencia -> empty .)
    OPEN            reduce using rule 13 (sentencia -> empty .)
    $end            reduce using rule 13 (sentencia -> empty .)
    RLLAVE          reduce using rule 13 (sentencia -> empty .)


state 13

    (14) sentencia -> retorno .

    CONTINUE        reduce using rule 14 (sentencia -> retorno .)
    BREAK           reduce using rule 14 (sentencia -> retorno .)
    VARIABLE        reduce using rule 14 (sentencia -> retorno .)
    PRINT           reduce using rule 14 (sentencia -> retorno .)
    LPAREN          reduce using rule 14 (sentencia -> retorno .)
    NUMBER          reduce using rule 14 (sentencia -> retorno .)
    FLOAT           reduce using rule 14 (sentencia -> retorno .)
    TRUE            reduce using rule 14 (sentencia -> retorno .)
    FALSE           reduce using rule 14 (sentencia -> retorno .)
    NOT             reduce using rule 14 (sentencia -> retorno .)
    LISTOF          reduce using rule 14 (sentencia -> retorno .)
    MUTABLELISTOF   reduce using rule 14 (sentencia -> retorno .)
    MAPOF           reduce using rule 14 (sentencia -> retorno .)
    MUTABLEMAPOF    reduce using rule 14 (sentencia -> retorno .)
    SETOF           reduce using rule 14 (sentencia -> retorno .)
    MUTABLESETOF    reduce using rule 14 (sentencia -> retorno .)
    FOR             reduce using rule 14 (sentencia -> retorno .)
    WHILE           reduce using rule 14 (sentencia -> retorno .)
    IF              reduce using rule 14 (sentencia -> retorno .)
    DO              reduce using rule 14 (sentencia -> retorno .)
    VAL             reduce using rule 14 (sentencia -> retorno .)
    VAR             reduce using rule 14 (sentencia -> retorno .)
    FUN             reduce using rule 14 (sentencia -> retorno .)
    RETURN          reduce using rule 14 (sentencia -> retorno .)
    CLASS           reduce using rule 14 (sentencia -> retorno .)
    OPEN            reduce using rule 14 (sentencia -> retorno .)
    $end            reduce using rule 14 (sentencia -> retorno .)
    RLLAVE          reduce using rule 14 (sentencia -> retorno .)


state 14

    (15) sentencia -> clase .

    CONTINUE        reduce using rule 15 (sentencia -> clase .)
    BREAK           reduce using rule 15 (sentencia -> clase .)
    VARIABLE        reduce using rule 15 (sentencia -> clase .)
    PRINT           reduce using rule 15 (sentencia -> clase .)
    LPAREN          reduce using rule 15 (sentencia -> clase .)
    NUMBER          reduce using rule 15 (sentencia -> clase .)
    FLOAT           reduce using rule 15 (sentencia -> clase .)
    TRUE            reduce using rule 15 (sentencia -> clase .)
    FALSE           reduce using rule 15 (sentencia -> clase .)
    NOT             reduce using rule 15 (sentencia -> clase .)
    LISTOF          reduce using rule 15 (sentencia -> clase .)
    MUTABLELISTOF   reduce using rule 15 (sentencia -> clase .)
    MAPOF           reduce using rule 15 (sentencia -> clase .)
    MUTABLEMAPOF    reduce using rule 15 (sentencia -> clase .)
    SETOF           reduce using rule 15 (sentencia -> clase .)
    MUTABLESETOF    reduce using rule 15 (sentencia -> clase .)
    FOR             reduce using rule 15 (sentencia -> clase .)
    WHILE           reduce using rule 15 (sentencia -> clase .)
    IF              reduce using rule 15 (sentencia -> clase .)
    DO              reduce using rule 15 (sentencia -> clase .)
    VAL             reduce using rule 15 (sentencia -> clase .)
    VAR             reduce using rule 15 (sentencia -> clase .)
    FUN             reduce using rule 15 (sentencia -> clase .)
    RETURN          reduce using rule 15 (sentencia -> clase .)
    CLASS           reduce using rule 15 (sentencia -> clase .)
    OPEN            reduce using rule 15 (sentencia -> clase .)
    $end            reduce using rule 15 (sentencia -> clase .)
    RLLAVE          reduce using rule 15 (sentencia -> clase .)


state 15

    (16) sentencia -> constructorPri .

    CONTINUE        reduce using rule 16 (sentencia -> constructorPri .)
    BREAK           reduce using rule 16 (sentencia -> constructorPri .)
    VARIABLE        reduce using rule 16 (sentencia -> constructorPri .)
    PRINT           reduce using rule 16 (sentencia -> constructorPri .)
    LPAREN          reduce using rule 16 (sentencia -> constructorPri .)
    NUMBER          reduce using rule 16 (sentencia -> constructorPri .)
    FLOAT           reduce using rule 16 (sentencia -> constructorPri .)
    TRUE            reduce using rule 16 (sentencia -> constructorPri .)
    FALSE           reduce using rule 16 (sentencia -> constructorPri .)
    NOT             reduce using rule 16 (sentencia -> constructorPri .)
    LISTOF          reduce using rule 16 (sentencia -> constructorPri .)
    MUTABLELISTOF   reduce using rule 16 (sentencia -> constructorPri .)
    MAPOF           reduce using rule 16 (sentencia -> constructorPri .)
    MUTABLEMAPOF    reduce using rule 16 (sentencia -> constructorPri .)
    SETOF           reduce using rule 16 (sentencia -> constructorPri .)
    MUTABLESETOF    reduce using rule 16 (sentencia -> constructorPri .)
    FOR             reduce using rule 16 (sentencia -> constructorPri .)
    WHILE           reduce using rule 16 (sentencia -> constructorPri .)
    IF              reduce using rule 16 (sentencia -> constructorPri .)
    DO              reduce using rule 16 (sentencia -> constructorPri .)
    VAL             reduce using rule 16 (sentencia -> constructorPri .)
    VAR             reduce using rule 16 (sentencia -> constructorPri .)
    FUN             reduce using rule 16 (sentencia -> constructorPri .)
    RETURN          reduce using rule 16 (sentencia -> constructorPri .)
    CLASS           reduce using rule 16 (sentencia -> constructorPri .)
    OPEN            reduce using rule 16 (sentencia -> constructorPri .)
    $end            reduce using rule 16 (sentencia -> constructorPri .)
    RLLAVE          reduce using rule 16 (sentencia -> constructorPri .)


state 16

    (17) sentencia -> CONTINUE .

    CONTINUE        reduce using rule 17 (sentencia -> CONTINUE .)
    BREAK           reduce using rule 17 (sentencia -> CONTINUE .)
    VARIABLE        reduce using rule 17 (sentencia -> CONTINUE .)
    PRINT           reduce using rule 17 (sentencia -> CONTINUE .)
    LPAREN          reduce using rule 17 (sentencia -> CONTINUE .)
    NUMBER          reduce using rule 17 (sentencia -> CONTINUE .)
    FLOAT           reduce using rule 17 (sentencia -> CONTINUE .)
    TRUE            reduce using rule 17 (sentencia -> CONTINUE .)
    FALSE           reduce using rule 17 (sentencia -> CONTINUE .)
    NOT             reduce using rule 17 (sentencia -> CONTINUE .)
    LISTOF          reduce using rule 17 (sentencia -> CONTINUE .)
    MUTABLELISTOF   reduce using rule 17 (sentencia -> CONTINUE .)
    MAPOF           reduce using rule 17 (sentencia -> CONTINUE .)
    MUTABLEMAPOF    reduce using rule 17 (sentencia -> CONTINUE .)
    SETOF           reduce using rule 17 (sentencia -> CONTINUE .)
    MUTABLESETOF    reduce using rule 17 (sentencia -> CONTINUE .)
    FOR             reduce using rule 17 (sentencia -> CONTINUE .)
    WHILE           reduce using rule 17 (sentencia -> CONTINUE .)
    IF              reduce using rule 17 (sentencia -> CONTINUE .)
    DO              reduce using rule 17 (sentencia -> CONTINUE .)
    VAL             reduce using rule 17 (sentencia -> CONTINUE .)
    VAR             reduce using rule 17 (sentencia -> CONTINUE .)
    FUN             reduce using rule 17 (sentencia -> CONTINUE .)
    RETURN          reduce using rule 17 (sentencia -> CONTINUE .)
    CLASS           reduce using rule 17 (sentencia -> CONTINUE .)
    OPEN            reduce using rule 17 (sentencia -> CONTINUE .)
    $end            reduce using rule 17 (sentencia -> CONTINUE .)
    RLLAVE          reduce using rule 17 (sentencia -> CONTINUE .)


state 17

    (18) sentencia -> BREAK .

    CONTINUE        reduce using rule 18 (sentencia -> BREAK .)
    BREAK           reduce using rule 18 (sentencia -> BREAK .)
    VARIABLE        reduce using rule 18 (sentencia -> BREAK .)
    PRINT           reduce using rule 18 (sentencia -> BREAK .)
    LPAREN          reduce using rule 18 (sentencia -> BREAK .)
    NUMBER          reduce using rule 18 (sentencia -> BREAK .)
    FLOAT           reduce using rule 18 (sentencia -> BREAK .)
    TRUE            reduce using rule 18 (sentencia -> BREAK .)
    FALSE           reduce using rule 18 (sentencia -> BREAK .)
    NOT             reduce using rule 18 (sentencia -> BREAK .)
    LISTOF          reduce using rule 18 (sentencia -> BREAK .)
    MUTABLELISTOF   reduce using rule 18 (sentencia -> BREAK .)
    MAPOF           reduce using rule 18 (sentencia -> BREAK .)
    MUTABLEMAPOF    reduce using rule 18 (sentencia -> BREAK .)
    SETOF           reduce using rule 18 (sentencia -> BREAK .)
    MUTABLESETOF    reduce using rule 18 (sentencia -> BREAK .)
    FOR             reduce using rule 18 (sentencia -> BREAK .)
    WHILE           reduce using rule 18 (sentencia -> BREAK .)
    IF              reduce using rule 18 (sentencia -> BREAK .)
    DO              reduce using rule 18 (sentencia -> BREAK .)
    VAL             reduce using rule 18 (sentencia -> BREAK .)
    VAR             reduce using rule 18 (sentencia -> BREAK .)
    FUN             reduce using rule 18 (sentencia -> BREAK .)
    RETURN          reduce using rule 18 (sentencia -> BREAK .)
    CLASS           reduce using rule 18 (sentencia -> BREAK .)
    OPEN            reduce using rule 18 (sentencia -> BREAK .)
    $end            reduce using rule 18 (sentencia -> BREAK .)
    RLLAVE          reduce using rule 18 (sentencia -> BREAK .)


state 18

    (25) asignacion -> VARIABLE . ASIGN VARIABLE
    (26) asignacion -> VARIABLE . ASIGN expresion
    (27) asignacion -> VARIABLE . ASIGN condicion
    (28) asignacion -> VARIABLE . ASIGN estructura
    (29) asignacion -> VARIABLE . ASIGN creacionObjeto
    (52) expresion -> VARIABLE .

    ASIGN           shift and go to state 56
    PLUS            reduce using rule 52 (expresion -> VARIABLE .)
    MINUS           reduce using rule 52 (expresion -> VARIABLE .)
    TIMES           reduce using rule 52 (expresion -> VARIABLE .)
    DIVIDE          reduce using rule 52 (expresion -> VARIABLE .)
    MOD             reduce using rule 52 (expresion -> VARIABLE .)
    GREATER         reduce using rule 52 (expresion -> VARIABLE .)
    LESS            reduce using rule 52 (expresion -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 52 (expresion -> VARIABLE .)
    LESS_EQUALS     reduce using rule 52 (expresion -> VARIABLE .)
    EQUALS          reduce using rule 52 (expresion -> VARIABLE .)
    NOT_EQUALS      reduce using rule 52 (expresion -> VARIABLE .)
    CONTINUE        reduce using rule 52 (expresion -> VARIABLE .)
    BREAK           reduce using rule 52 (expresion -> VARIABLE .)
    VARIABLE        reduce using rule 52 (expresion -> VARIABLE .)
    PRINT           reduce using rule 52 (expresion -> VARIABLE .)
    LPAREN          reduce using rule 52 (expresion -> VARIABLE .)
    NUMBER          reduce using rule 52 (expresion -> VARIABLE .)
    FLOAT           reduce using rule 52 (expresion -> VARIABLE .)
    TRUE            reduce using rule 52 (expresion -> VARIABLE .)
    FALSE           reduce using rule 52 (expresion -> VARIABLE .)
    NOT             reduce using rule 52 (expresion -> VARIABLE .)
    LISTOF          reduce using rule 52 (expresion -> VARIABLE .)
    MUTABLELISTOF   reduce using rule 52 (expresion -> VARIABLE .)
    MAPOF           reduce using rule 52 (expresion -> VARIABLE .)
    MUTABLEMAPOF    reduce using rule 52 (expresion -> VARIABLE .)
    SETOF           reduce using rule 52 (expresion -> VARIABLE .)
    MUTABLESETOF    reduce using rule 52 (expresion -> VARIABLE .)
    FOR             reduce using rule 52 (expresion -> VARIABLE .)
    WHILE           reduce using rule 52 (expresion -> VARIABLE .)
    IF              reduce using rule 52 (expresion -> VARIABLE .)
    DO              reduce using rule 52 (expresion -> VARIABLE .)
    VAL             reduce using rule 52 (expresion -> VARIABLE .)
    VAR             reduce using rule 52 (expresion -> VARIABLE .)
    FUN             reduce using rule 52 (expresion -> VARIABLE .)
    RETURN          reduce using rule 52 (expresion -> VARIABLE .)
    CLASS           reduce using rule 52 (expresion -> VARIABLE .)
    OPEN            reduce using rule 52 (expresion -> VARIABLE .)
    $end            reduce using rule 52 (expresion -> VARIABLE .)
    RLLAVE          reduce using rule 52 (expresion -> VARIABLE .)


state 19

    (31) impresion -> PRINT . LPAREN repiteValores RPAREN
    (30) impresion_vacia -> PRINT . LPAREN RPAREN

    LPAREN          shift and go to state 57


state 20

    (46) expresion -> LPAREN . expresion RPAREN
    (65) condicion -> LPAREN . condicion RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 58
    condicion                      shift and go to state 59

state 21

    (47) expresion -> NUMBER .

    PLUS            reduce using rule 47 (expresion -> NUMBER .)
    MINUS           reduce using rule 47 (expresion -> NUMBER .)
    TIMES           reduce using rule 47 (expresion -> NUMBER .)
    DIVIDE          reduce using rule 47 (expresion -> NUMBER .)
    MOD             reduce using rule 47 (expresion -> NUMBER .)
    GREATER         reduce using rule 47 (expresion -> NUMBER .)
    LESS            reduce using rule 47 (expresion -> NUMBER .)
    GREATER_EQUALS  reduce using rule 47 (expresion -> NUMBER .)
    LESS_EQUALS     reduce using rule 47 (expresion -> NUMBER .)
    EQUALS          reduce using rule 47 (expresion -> NUMBER .)
    NOT_EQUALS      reduce using rule 47 (expresion -> NUMBER .)
    CONTINUE        reduce using rule 47 (expresion -> NUMBER .)
    BREAK           reduce using rule 47 (expresion -> NUMBER .)
    VARIABLE        reduce using rule 47 (expresion -> NUMBER .)
    PRINT           reduce using rule 47 (expresion -> NUMBER .)
    LPAREN          reduce using rule 47 (expresion -> NUMBER .)
    NUMBER          reduce using rule 47 (expresion -> NUMBER .)
    FLOAT           reduce using rule 47 (expresion -> NUMBER .)
    TRUE            reduce using rule 47 (expresion -> NUMBER .)
    FALSE           reduce using rule 47 (expresion -> NUMBER .)
    NOT             reduce using rule 47 (expresion -> NUMBER .)
    LISTOF          reduce using rule 47 (expresion -> NUMBER .)
    MUTABLELISTOF   reduce using rule 47 (expresion -> NUMBER .)
    MAPOF           reduce using rule 47 (expresion -> NUMBER .)
    MUTABLEMAPOF    reduce using rule 47 (expresion -> NUMBER .)
    SETOF           reduce using rule 47 (expresion -> NUMBER .)
    MUTABLESETOF    reduce using rule 47 (expresion -> NUMBER .)
    FOR             reduce using rule 47 (expresion -> NUMBER .)
    WHILE           reduce using rule 47 (expresion -> NUMBER .)
    IF              reduce using rule 47 (expresion -> NUMBER .)
    DO              reduce using rule 47 (expresion -> NUMBER .)
    VAL             reduce using rule 47 (expresion -> NUMBER .)
    VAR             reduce using rule 47 (expresion -> NUMBER .)
    FUN             reduce using rule 47 (expresion -> NUMBER .)
    RETURN          reduce using rule 47 (expresion -> NUMBER .)
    CLASS           reduce using rule 47 (expresion -> NUMBER .)
    OPEN            reduce using rule 47 (expresion -> NUMBER .)
    $end            reduce using rule 47 (expresion -> NUMBER .)
    RPAREN          reduce using rule 47 (expresion -> NUMBER .)
    AND             reduce using rule 47 (expresion -> NUMBER .)
    OR              reduce using rule 47 (expresion -> NUMBER .)
    LLLAVE          reduce using rule 47 (expresion -> NUMBER .)
    RLLAVE          reduce using rule 47 (expresion -> NUMBER .)
    CONSTRUCTOR     reduce using rule 47 (expresion -> NUMBER .)


state 22

    (48) expresion -> FLOAT .

    PLUS            reduce using rule 48 (expresion -> FLOAT .)
    MINUS           reduce using rule 48 (expresion -> FLOAT .)
    TIMES           reduce using rule 48 (expresion -> FLOAT .)
    DIVIDE          reduce using rule 48 (expresion -> FLOAT .)
    MOD             reduce using rule 48 (expresion -> FLOAT .)
    GREATER         reduce using rule 48 (expresion -> FLOAT .)
    LESS            reduce using rule 48 (expresion -> FLOAT .)
    GREATER_EQUALS  reduce using rule 48 (expresion -> FLOAT .)
    LESS_EQUALS     reduce using rule 48 (expresion -> FLOAT .)
    EQUALS          reduce using rule 48 (expresion -> FLOAT .)
    NOT_EQUALS      reduce using rule 48 (expresion -> FLOAT .)
    CONTINUE        reduce using rule 48 (expresion -> FLOAT .)
    BREAK           reduce using rule 48 (expresion -> FLOAT .)
    VARIABLE        reduce using rule 48 (expresion -> FLOAT .)
    PRINT           reduce using rule 48 (expresion -> FLOAT .)
    LPAREN          reduce using rule 48 (expresion -> FLOAT .)
    NUMBER          reduce using rule 48 (expresion -> FLOAT .)
    FLOAT           reduce using rule 48 (expresion -> FLOAT .)
    TRUE            reduce using rule 48 (expresion -> FLOAT .)
    FALSE           reduce using rule 48 (expresion -> FLOAT .)
    NOT             reduce using rule 48 (expresion -> FLOAT .)
    LISTOF          reduce using rule 48 (expresion -> FLOAT .)
    MUTABLELISTOF   reduce using rule 48 (expresion -> FLOAT .)
    MAPOF           reduce using rule 48 (expresion -> FLOAT .)
    MUTABLEMAPOF    reduce using rule 48 (expresion -> FLOAT .)
    SETOF           reduce using rule 48 (expresion -> FLOAT .)
    MUTABLESETOF    reduce using rule 48 (expresion -> FLOAT .)
    FOR             reduce using rule 48 (expresion -> FLOAT .)
    WHILE           reduce using rule 48 (expresion -> FLOAT .)
    IF              reduce using rule 48 (expresion -> FLOAT .)
    DO              reduce using rule 48 (expresion -> FLOAT .)
    VAL             reduce using rule 48 (expresion -> FLOAT .)
    VAR             reduce using rule 48 (expresion -> FLOAT .)
    FUN             reduce using rule 48 (expresion -> FLOAT .)
    RETURN          reduce using rule 48 (expresion -> FLOAT .)
    CLASS           reduce using rule 48 (expresion -> FLOAT .)
    OPEN            reduce using rule 48 (expresion -> FLOAT .)
    $end            reduce using rule 48 (expresion -> FLOAT .)
    RPAREN          reduce using rule 48 (expresion -> FLOAT .)
    AND             reduce using rule 48 (expresion -> FLOAT .)
    OR              reduce using rule 48 (expresion -> FLOAT .)
    LLLAVE          reduce using rule 48 (expresion -> FLOAT .)
    RLLAVE          reduce using rule 48 (expresion -> FLOAT .)
    CONSTRUCTOR     reduce using rule 48 (expresion -> FLOAT .)


state 23

    (49) expresion -> TRUE .
    (63) condicion -> TRUE .

  ! reduce/reduce conflict for AND resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for OR resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for BREAK resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for PRINT resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for NOT resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for SETOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for WHILE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for DO resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for VAL resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for VAR resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for FUN resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for RETURN resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for CLASS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for OPEN resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for PLUS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for TIMES resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MOD resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for GREATER resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for CONSTRUCTOR resolved using rule 49 (expresion -> TRUE .)
    PLUS            reduce using rule 49 (expresion -> TRUE .)
    MINUS           reduce using rule 49 (expresion -> TRUE .)
    TIMES           reduce using rule 49 (expresion -> TRUE .)
    DIVIDE          reduce using rule 49 (expresion -> TRUE .)
    MOD             reduce using rule 49 (expresion -> TRUE .)
    GREATER         reduce using rule 49 (expresion -> TRUE .)
    LESS            reduce using rule 49 (expresion -> TRUE .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> TRUE .)
    LESS_EQUALS     reduce using rule 49 (expresion -> TRUE .)
    EQUALS          reduce using rule 49 (expresion -> TRUE .)
    NOT_EQUALS      reduce using rule 49 (expresion -> TRUE .)
    CONTINUE        reduce using rule 49 (expresion -> TRUE .)
    BREAK           reduce using rule 49 (expresion -> TRUE .)
    VARIABLE        reduce using rule 49 (expresion -> TRUE .)
    PRINT           reduce using rule 49 (expresion -> TRUE .)
    LPAREN          reduce using rule 49 (expresion -> TRUE .)
    NUMBER          reduce using rule 49 (expresion -> TRUE .)
    FLOAT           reduce using rule 49 (expresion -> TRUE .)
    TRUE            reduce using rule 49 (expresion -> TRUE .)
    FALSE           reduce using rule 49 (expresion -> TRUE .)
    NOT             reduce using rule 49 (expresion -> TRUE .)
    LISTOF          reduce using rule 49 (expresion -> TRUE .)
    MUTABLELISTOF   reduce using rule 49 (expresion -> TRUE .)
    MAPOF           reduce using rule 49 (expresion -> TRUE .)
    MUTABLEMAPOF    reduce using rule 49 (expresion -> TRUE .)
    SETOF           reduce using rule 49 (expresion -> TRUE .)
    MUTABLESETOF    reduce using rule 49 (expresion -> TRUE .)
    FOR             reduce using rule 49 (expresion -> TRUE .)
    WHILE           reduce using rule 49 (expresion -> TRUE .)
    IF              reduce using rule 49 (expresion -> TRUE .)
    DO              reduce using rule 49 (expresion -> TRUE .)
    VAL             reduce using rule 49 (expresion -> TRUE .)
    VAR             reduce using rule 49 (expresion -> TRUE .)
    FUN             reduce using rule 49 (expresion -> TRUE .)
    RETURN          reduce using rule 49 (expresion -> TRUE .)
    CLASS           reduce using rule 49 (expresion -> TRUE .)
    OPEN            reduce using rule 49 (expresion -> TRUE .)
    $end            reduce using rule 49 (expresion -> TRUE .)
    RPAREN          reduce using rule 49 (expresion -> TRUE .)
    AND             reduce using rule 49 (expresion -> TRUE .)
    OR              reduce using rule 49 (expresion -> TRUE .)
    LLLAVE          reduce using rule 49 (expresion -> TRUE .)
    RLLAVE          reduce using rule 49 (expresion -> TRUE .)
    CONSTRUCTOR     reduce using rule 49 (expresion -> TRUE .)

  ! AND             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! OR              [ reduce using rule 63 (condicion -> TRUE .) ]
  ! CONTINUE        [ reduce using rule 63 (condicion -> TRUE .) ]
  ! BREAK           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! VARIABLE        [ reduce using rule 63 (condicion -> TRUE .) ]
  ! PRINT           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LPAREN          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! NUMBER          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FLOAT           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! TRUE            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FALSE           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! NOT             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LISTOF          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MUTABLELISTOF   [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MAPOF           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 63 (condicion -> TRUE .) ]
  ! SETOF           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MUTABLESETOF    [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FOR             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! WHILE           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! IF              [ reduce using rule 63 (condicion -> TRUE .) ]
  ! DO              [ reduce using rule 63 (condicion -> TRUE .) ]
  ! VAL             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! VAR             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FUN             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! RETURN          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! CLASS           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! OPEN            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! $end            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! PLUS            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MINUS           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! TIMES           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! DIVIDE          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MOD             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! GREATER         [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LESS            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! GREATER_EQUALS  [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LESS_EQUALS     [ reduce using rule 63 (condicion -> TRUE .) ]
  ! EQUALS          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! NOT_EQUALS      [ reduce using rule 63 (condicion -> TRUE .) ]
  ! RPAREN          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LLLAVE          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! RLLAVE          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! CONSTRUCTOR     [ reduce using rule 63 (condicion -> TRUE .) ]


state 24

    (50) expresion -> FALSE .
    (64) condicion -> FALSE .

  ! reduce/reduce conflict for AND resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for OR resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for BREAK resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for PRINT resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for NOT resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for SETOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for WHILE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for DO resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for VAL resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for VAR resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for FUN resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for RETURN resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for CLASS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for OPEN resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for PLUS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MINUS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for TIMES resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MOD resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for GREATER resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for CONSTRUCTOR resolved using rule 50 (expresion -> FALSE .)
    PLUS            reduce using rule 50 (expresion -> FALSE .)
    MINUS           reduce using rule 50 (expresion -> FALSE .)
    TIMES           reduce using rule 50 (expresion -> FALSE .)
    DIVIDE          reduce using rule 50 (expresion -> FALSE .)
    MOD             reduce using rule 50 (expresion -> FALSE .)
    GREATER         reduce using rule 50 (expresion -> FALSE .)
    LESS            reduce using rule 50 (expresion -> FALSE .)
    GREATER_EQUALS  reduce using rule 50 (expresion -> FALSE .)
    LESS_EQUALS     reduce using rule 50 (expresion -> FALSE .)
    EQUALS          reduce using rule 50 (expresion -> FALSE .)
    NOT_EQUALS      reduce using rule 50 (expresion -> FALSE .)
    CONTINUE        reduce using rule 50 (expresion -> FALSE .)
    BREAK           reduce using rule 50 (expresion -> FALSE .)
    VARIABLE        reduce using rule 50 (expresion -> FALSE .)
    PRINT           reduce using rule 50 (expresion -> FALSE .)
    LPAREN          reduce using rule 50 (expresion -> FALSE .)
    NUMBER          reduce using rule 50 (expresion -> FALSE .)
    FLOAT           reduce using rule 50 (expresion -> FALSE .)
    TRUE            reduce using rule 50 (expresion -> FALSE .)
    FALSE           reduce using rule 50 (expresion -> FALSE .)
    NOT             reduce using rule 50 (expresion -> FALSE .)
    LISTOF          reduce using rule 50 (expresion -> FALSE .)
    MUTABLELISTOF   reduce using rule 50 (expresion -> FALSE .)
    MAPOF           reduce using rule 50 (expresion -> FALSE .)
    MUTABLEMAPOF    reduce using rule 50 (expresion -> FALSE .)
    SETOF           reduce using rule 50 (expresion -> FALSE .)
    MUTABLESETOF    reduce using rule 50 (expresion -> FALSE .)
    FOR             reduce using rule 50 (expresion -> FALSE .)
    WHILE           reduce using rule 50 (expresion -> FALSE .)
    IF              reduce using rule 50 (expresion -> FALSE .)
    DO              reduce using rule 50 (expresion -> FALSE .)
    VAL             reduce using rule 50 (expresion -> FALSE .)
    VAR             reduce using rule 50 (expresion -> FALSE .)
    FUN             reduce using rule 50 (expresion -> FALSE .)
    RETURN          reduce using rule 50 (expresion -> FALSE .)
    CLASS           reduce using rule 50 (expresion -> FALSE .)
    OPEN            reduce using rule 50 (expresion -> FALSE .)
    $end            reduce using rule 50 (expresion -> FALSE .)
    RPAREN          reduce using rule 50 (expresion -> FALSE .)
    AND             reduce using rule 50 (expresion -> FALSE .)
    OR              reduce using rule 50 (expresion -> FALSE .)
    LLLAVE          reduce using rule 50 (expresion -> FALSE .)
    RLLAVE          reduce using rule 50 (expresion -> FALSE .)
    CONSTRUCTOR     reduce using rule 50 (expresion -> FALSE .)

  ! AND             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! OR              [ reduce using rule 64 (condicion -> FALSE .) ]
  ! CONTINUE        [ reduce using rule 64 (condicion -> FALSE .) ]
  ! BREAK           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! VARIABLE        [ reduce using rule 64 (condicion -> FALSE .) ]
  ! PRINT           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LPAREN          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! NUMBER          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FLOAT           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! TRUE            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FALSE           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! NOT             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LISTOF          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MUTABLELISTOF   [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MAPOF           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 64 (condicion -> FALSE .) ]
  ! SETOF           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MUTABLESETOF    [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FOR             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! WHILE           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! IF              [ reduce using rule 64 (condicion -> FALSE .) ]
  ! DO              [ reduce using rule 64 (condicion -> FALSE .) ]
  ! VAL             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! VAR             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FUN             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! RETURN          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! CLASS           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! OPEN            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! $end            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! PLUS            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MINUS           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! TIMES           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! DIVIDE          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MOD             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! GREATER         [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LESS            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! GREATER_EQUALS  [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LESS_EQUALS     [ reduce using rule 64 (condicion -> FALSE .) ]
  ! EQUALS          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! NOT_EQUALS      [ reduce using rule 64 (condicion -> FALSE .) ]
  ! RPAREN          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LLLAVE          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! RLLAVE          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! CONSTRUCTOR     [ reduce using rule 64 (condicion -> FALSE .) ]


state 25

    (61) condicion -> NOT . condicion
    (62) condicion -> NOT . expresion
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE

    NOT             shift and go to state 25
    TRUE            shift and go to state 63
    FALSE           shift and go to state 64
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    VARIABLE        shift and go to state 60

    condicion                      shift and go to state 61
    expresion                      shift and go to state 62

state 26

    (66) estructura -> LISTOF . LPAREN repiteValores RPAREN
    (67) estructura -> LISTOF . LPAREN RPAREN

    LPAREN          shift and go to state 66


state 27

    (68) estructura -> MUTABLELISTOF . LPAREN repiteValores RPAREN
    (69) estructura -> MUTABLELISTOF . LPAREN RPAREN

    LPAREN          shift and go to state 67


state 28

    (70) estructura -> MAPOF . LPAREN pareskv_mapa RPAREN

    LPAREN          shift and go to state 68


state 29

    (71) estructura -> MUTABLEMAPOF . LPAREN pareskv_mapa RPAREN

    LPAREN          shift and go to state 69


state 30

    (74) estructura -> SETOF . LPAREN repiteValores RPAREN
    (75) estructura -> SETOF . LPAREN RPAREN

    LPAREN          shift and go to state 70


state 31

    (76) estructura -> MUTABLESETOF . LPAREN repiteValores RPAREN
    (77) estructura -> MUTABLESETOF . LPAREN RPAREN

    LPAREN          shift and go to state 71


state 32

    (86) estructura -> FOR . LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 72


state 33

    (87) estructura -> WHILE . condicion LLLAVE sentencias RLLAVE
    (88) estructura -> WHILE . condicion LLLAVE RLLAVE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE

    NOT             shift and go to state 25
    TRUE            shift and go to state 63
    FALSE           shift and go to state 64
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    VARIABLE        shift and go to state 60

    condicion                      shift and go to state 73
    expresion                      shift and go to state 74

state 34

    (89) estructura -> IF . condicion LLLAVE sentencias RLLAVE
    (90) estructura -> IF . condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> IF . condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> IF . condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE

    NOT             shift and go to state 25
    TRUE            shift and go to state 63
    FALSE           shift and go to state 64
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    VARIABLE        shift and go to state 60

    condicion                      shift and go to state 75
    expresion                      shift and go to state 74

state 35

    (95) estructura -> DO . LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> DO . LLLAVE RLLAVE WHILE condicion

    LLLAVE          shift and go to state 76


state 36

    (19) declaracion_variable -> VAL . VARIABLE ASIGN valor
    (21) declaracion_variable -> VAL . VARIABLE ASIGN estructura
    (23) declaracion_variable -> VAL . VARIABLE ASIGN creacionObjeto

    VARIABLE        shift and go to state 77


state 37

    (20) declaracion_variable -> VAR . VARIABLE ASIGN valor
    (22) declaracion_variable -> VAR . VARIABLE ASIGN estructura
    (24) declaracion_variable -> VAR . VARIABLE ASIGN creacionObjeto

    VARIABLE        shift and go to state 78


state 38

    (102) funcion -> FUN . VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> FUN . VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> FUN . VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias

    VARIABLE        shift and go to state 79


state 39

    (78) retorno -> RETURN . objetoRetorno
    (79) objetoRetorno -> . valor
    (80) objetoRetorno -> . condicion
    (81) objetoRetorno -> . expresion
    (82) objetoRetorno -> . TRUE
    (83) objetoRetorno -> . FALSE
    (84) objetoRetorno -> . estructura
    (85) objetoRetorno -> . empty
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (4) empty -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    TRUE            shift and go to state 84
    FALSE           shift and go to state 85
    NUMBER          shift and go to state 88
    FLOAT           shift and go to state 89
    VARIABLE        shift and go to state 90
    STRING          shift and go to state 91
    NOT             shift and go to state 25
    LPAREN          shift and go to state 65
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    CONTINUE        reduce using rule 4 (empty -> .)
    BREAK           reduce using rule 4 (empty -> .)
    PRINT           reduce using rule 4 (empty -> .)
    VAL             reduce using rule 4 (empty -> .)
    VAR             reduce using rule 4 (empty -> .)
    FUN             reduce using rule 4 (empty -> .)
    RETURN          reduce using rule 4 (empty -> .)
    CLASS           reduce using rule 4 (empty -> .)
    OPEN            reduce using rule 4 (empty -> .)
    $end            reduce using rule 4 (empty -> .)
    RLLAVE          reduce using rule 4 (empty -> .)

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]

    objetoRetorno                  shift and go to state 80
    valor                          shift and go to state 81
    condicion                      shift and go to state 82
    expresion                      shift and go to state 83
    estructura                     shift and go to state 86
    empty                          shift and go to state 87

state 40

    (112) clase -> CLASS . VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> CLASS . VARIABLE LLLAVE RLLAVE
    (116) clase -> CLASS . VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> CLASS . VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> CLASS . VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> CLASS . VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> CLASS . VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

    VARIABLE        shift and go to state 92


state 41

    (114) clase -> OPEN . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> OPEN . CLASS VARIABLE LLLAVE RLLAVE

    CLASS           shift and go to state 93


state 42

    (3) sentencias -> sentencias sentencia .

    CONTINUE        reduce using rule 3 (sentencias -> sentencias sentencia .)
    BREAK           reduce using rule 3 (sentencias -> sentencias sentencia .)
    VARIABLE        reduce using rule 3 (sentencias -> sentencias sentencia .)
    PRINT           reduce using rule 3 (sentencias -> sentencias sentencia .)
    LPAREN          reduce using rule 3 (sentencias -> sentencias sentencia .)
    NUMBER          reduce using rule 3 (sentencias -> sentencias sentencia .)
    FLOAT           reduce using rule 3 (sentencias -> sentencias sentencia .)
    TRUE            reduce using rule 3 (sentencias -> sentencias sentencia .)
    FALSE           reduce using rule 3 (sentencias -> sentencias sentencia .)
    NOT             reduce using rule 3 (sentencias -> sentencias sentencia .)
    LISTOF          reduce using rule 3 (sentencias -> sentencias sentencia .)
    MUTABLELISTOF   reduce using rule 3 (sentencias -> sentencias sentencia .)
    MAPOF           reduce using rule 3 (sentencias -> sentencias sentencia .)
    MUTABLEMAPOF    reduce using rule 3 (sentencias -> sentencias sentencia .)
    SETOF           reduce using rule 3 (sentencias -> sentencias sentencia .)
    MUTABLESETOF    reduce using rule 3 (sentencias -> sentencias sentencia .)
    FOR             reduce using rule 3 (sentencias -> sentencias sentencia .)
    WHILE           reduce using rule 3 (sentencias -> sentencias sentencia .)
    IF              reduce using rule 3 (sentencias -> sentencias sentencia .)
    DO              reduce using rule 3 (sentencias -> sentencias sentencia .)
    VAL             reduce using rule 3 (sentencias -> sentencias sentencia .)
    VAR             reduce using rule 3 (sentencias -> sentencias sentencia .)
    FUN             reduce using rule 3 (sentencias -> sentencias sentencia .)
    RETURN          reduce using rule 3 (sentencias -> sentencias sentencia .)
    CLASS           reduce using rule 3 (sentencias -> sentencias sentencia .)
    OPEN            reduce using rule 3 (sentencias -> sentencias sentencia .)
    $end            reduce using rule 3 (sentencias -> sentencias sentencia .)
    RLLAVE          reduce using rule 3 (sentencias -> sentencias sentencia .)


state 43

    (41) expresion -> expresion PLUS . expresion
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 94
    condicion                      shift and go to state 95

state 44

    (42) expresion -> expresion MINUS . expresion
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 96
    condicion                      shift and go to state 95

state 45

    (43) expresion -> expresion TIMES . expresion
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 97
    condicion                      shift and go to state 95

state 46

    (44) expresion -> expresion DIVIDE . expresion
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 98
    condicion                      shift and go to state 95

state 47

    (45) expresion -> expresion MOD . expresion
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 99
    condicion                      shift and go to state 95

state 48

    (53) condicion -> expresion GREATER . expresion
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 100
    condicion                      shift and go to state 95

state 49

    (54) condicion -> expresion LESS . expresion
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 101
    condicion                      shift and go to state 95

state 50

    (55) condicion -> expresion GREATER_EQUALS . expresion
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 102
    condicion                      shift and go to state 95

state 51

    (56) condicion -> expresion LESS_EQUALS . expresion
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 103
    condicion                      shift and go to state 95

state 52

    (57) condicion -> expresion EQUALS . expresion
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 104
    condicion                      shift and go to state 95

state 53

    (58) condicion -> expresion NOT_EQUALS . expresion
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    VARIABLE        shift and go to state 60
    NOT             shift and go to state 25

    expresion                      shift and go to state 105
    condicion                      shift and go to state 95

state 54

    (59) condicion -> condicion AND . condicion
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE

    NOT             shift and go to state 25
    TRUE            shift and go to state 63
    FALSE           shift and go to state 64
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    VARIABLE        shift and go to state 60

    condicion                      shift and go to state 106
    expresion                      shift and go to state 74

state 55

    (60) condicion -> condicion OR . condicion
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE

    NOT             shift and go to state 25
    TRUE            shift and go to state 63
    FALSE           shift and go to state 64
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    VARIABLE        shift and go to state 60

    condicion                      shift and go to state 107
    expresion                      shift and go to state 74

state 56

    (25) asignacion -> VARIABLE ASIGN . VARIABLE
    (26) asignacion -> VARIABLE ASIGN . expresion
    (27) asignacion -> VARIABLE ASIGN . condicion
    (28) asignacion -> VARIABLE ASIGN . estructura
    (29) asignacion -> VARIABLE ASIGN . creacionObjeto
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (110) creacionObjeto -> . VARIABLE LPAREN RPAREN
    (111) creacionObjeto -> . VARIABLE LPAREN repiteValores RPAREN

    VARIABLE        shift and go to state 108
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35

    expresion                      shift and go to state 109
    condicion                      shift and go to state 110
    estructura                     shift and go to state 111
    creacionObjeto                 shift and go to state 112

state 57

    (31) impresion -> PRINT LPAREN . repiteValores RPAREN
    (30) impresion_vacia -> PRINT LPAREN . RPAREN
    (38) repiteValores -> . valor COMMA repiteValores
    (39) repiteValores -> . valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    RPAREN          shift and go to state 114
    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    repiteValores                  shift and go to state 113
    valor                          shift and go to state 115

state 58

    (46) expresion -> LPAREN expresion . RPAREN
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

    RPAREN          shift and go to state 121
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53


state 59

    (65) condicion -> LPAREN condicion . RPAREN
    (51) expresion -> condicion .
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 122
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    AND             shift and go to state 54
    OR              shift and go to state 55

  ! RPAREN          [ reduce using rule 51 (expresion -> condicion .) ]


state 60

    (52) expresion -> VARIABLE .

    RPAREN          reduce using rule 52 (expresion -> VARIABLE .)
    PLUS            reduce using rule 52 (expresion -> VARIABLE .)
    MINUS           reduce using rule 52 (expresion -> VARIABLE .)
    TIMES           reduce using rule 52 (expresion -> VARIABLE .)
    DIVIDE          reduce using rule 52 (expresion -> VARIABLE .)
    MOD             reduce using rule 52 (expresion -> VARIABLE .)
    GREATER         reduce using rule 52 (expresion -> VARIABLE .)
    LESS            reduce using rule 52 (expresion -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 52 (expresion -> VARIABLE .)
    LESS_EQUALS     reduce using rule 52 (expresion -> VARIABLE .)
    EQUALS          reduce using rule 52 (expresion -> VARIABLE .)
    NOT_EQUALS      reduce using rule 52 (expresion -> VARIABLE .)
    AND             reduce using rule 52 (expresion -> VARIABLE .)
    OR              reduce using rule 52 (expresion -> VARIABLE .)
    CONTINUE        reduce using rule 52 (expresion -> VARIABLE .)
    BREAK           reduce using rule 52 (expresion -> VARIABLE .)
    VARIABLE        reduce using rule 52 (expresion -> VARIABLE .)
    PRINT           reduce using rule 52 (expresion -> VARIABLE .)
    LPAREN          reduce using rule 52 (expresion -> VARIABLE .)
    NUMBER          reduce using rule 52 (expresion -> VARIABLE .)
    FLOAT           reduce using rule 52 (expresion -> VARIABLE .)
    TRUE            reduce using rule 52 (expresion -> VARIABLE .)
    FALSE           reduce using rule 52 (expresion -> VARIABLE .)
    NOT             reduce using rule 52 (expresion -> VARIABLE .)
    LISTOF          reduce using rule 52 (expresion -> VARIABLE .)
    MUTABLELISTOF   reduce using rule 52 (expresion -> VARIABLE .)
    MAPOF           reduce using rule 52 (expresion -> VARIABLE .)
    MUTABLEMAPOF    reduce using rule 52 (expresion -> VARIABLE .)
    SETOF           reduce using rule 52 (expresion -> VARIABLE .)
    MUTABLESETOF    reduce using rule 52 (expresion -> VARIABLE .)
    FOR             reduce using rule 52 (expresion -> VARIABLE .)
    WHILE           reduce using rule 52 (expresion -> VARIABLE .)
    IF              reduce using rule 52 (expresion -> VARIABLE .)
    DO              reduce using rule 52 (expresion -> VARIABLE .)
    VAL             reduce using rule 52 (expresion -> VARIABLE .)
    VAR             reduce using rule 52 (expresion -> VARIABLE .)
    FUN             reduce using rule 52 (expresion -> VARIABLE .)
    RETURN          reduce using rule 52 (expresion -> VARIABLE .)
    CLASS           reduce using rule 52 (expresion -> VARIABLE .)
    OPEN            reduce using rule 52 (expresion -> VARIABLE .)
    $end            reduce using rule 52 (expresion -> VARIABLE .)
    LLLAVE          reduce using rule 52 (expresion -> VARIABLE .)
    RLLAVE          reduce using rule 52 (expresion -> VARIABLE .)
    CONSTRUCTOR     reduce using rule 52 (expresion -> VARIABLE .)


state 61

    (61) condicion -> NOT condicion .
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion
    (51) expresion -> condicion .

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! reduce/reduce conflict for CONTINUE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for BREAK resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for PRINT resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for LPAREN resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for NUMBER resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for TRUE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for FALSE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for NOT resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for LISTOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MAPOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for SETOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for FOR resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for WHILE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for IF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for DO resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for VAL resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for VAR resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for FUN resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for RETURN resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for CLASS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for OPEN resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for $end resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for PLUS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MINUS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for TIMES resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MOD resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for GREATER resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for RPAREN resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for CONSTRUCTOR resolved using rule 51 (expresion -> condicion .)
    AND             shift and go to state 54
    OR              shift and go to state 55
    CONTINUE        reduce using rule 51 (expresion -> condicion .)
    BREAK           reduce using rule 51 (expresion -> condicion .)
    VARIABLE        reduce using rule 51 (expresion -> condicion .)
    PRINT           reduce using rule 51 (expresion -> condicion .)
    LPAREN          reduce using rule 51 (expresion -> condicion .)
    NUMBER          reduce using rule 51 (expresion -> condicion .)
    FLOAT           reduce using rule 51 (expresion -> condicion .)
    TRUE            reduce using rule 51 (expresion -> condicion .)
    FALSE           reduce using rule 51 (expresion -> condicion .)
    NOT             reduce using rule 51 (expresion -> condicion .)
    LISTOF          reduce using rule 51 (expresion -> condicion .)
    MUTABLELISTOF   reduce using rule 51 (expresion -> condicion .)
    MAPOF           reduce using rule 51 (expresion -> condicion .)
    MUTABLEMAPOF    reduce using rule 51 (expresion -> condicion .)
    SETOF           reduce using rule 51 (expresion -> condicion .)
    MUTABLESETOF    reduce using rule 51 (expresion -> condicion .)
    FOR             reduce using rule 51 (expresion -> condicion .)
    WHILE           reduce using rule 51 (expresion -> condicion .)
    IF              reduce using rule 51 (expresion -> condicion .)
    DO              reduce using rule 51 (expresion -> condicion .)
    VAL             reduce using rule 51 (expresion -> condicion .)
    VAR             reduce using rule 51 (expresion -> condicion .)
    FUN             reduce using rule 51 (expresion -> condicion .)
    RETURN          reduce using rule 51 (expresion -> condicion .)
    CLASS           reduce using rule 51 (expresion -> condicion .)
    OPEN            reduce using rule 51 (expresion -> condicion .)
    $end            reduce using rule 51 (expresion -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    RPAREN          reduce using rule 51 (expresion -> condicion .)
    LLLAVE          reduce using rule 51 (expresion -> condicion .)
    RLLAVE          reduce using rule 51 (expresion -> condicion .)
    CONSTRUCTOR     reduce using rule 51 (expresion -> condicion .)

  ! AND             [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! OR              [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! CONTINUE        [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! BREAK           [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! VARIABLE        [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! PRINT           [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! LPAREN          [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! NUMBER          [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! FLOAT           [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! TRUE            [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! FALSE           [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! NOT             [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! LISTOF          [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! MUTABLELISTOF   [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! MAPOF           [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! MUTABLEMAPOF    [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! SETOF           [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! MUTABLESETOF    [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! FOR             [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! WHILE           [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! IF              [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! DO              [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! VAL             [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! VAR             [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! FUN             [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! RETURN          [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! CLASS           [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! OPEN            [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! $end            [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! PLUS            [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! MINUS           [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! TIMES           [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! DIVIDE          [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! MOD             [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! GREATER         [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! LESS            [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! GREATER_EQUALS  [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! LESS_EQUALS     [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! EQUALS          [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! NOT_EQUALS      [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! RPAREN          [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! LLLAVE          [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! RLLAVE          [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! CONSTRUCTOR     [ reduce using rule 61 (condicion -> NOT condicion .) ]
  ! AND             [ reduce using rule 51 (expresion -> condicion .) ]
  ! OR              [ reduce using rule 51 (expresion -> condicion .) ]


state 62

    (62) condicion -> NOT expresion .
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion

  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    AND             reduce using rule 62 (condicion -> NOT expresion .)
    OR              reduce using rule 62 (condicion -> NOT expresion .)
    CONTINUE        reduce using rule 62 (condicion -> NOT expresion .)
    BREAK           reduce using rule 62 (condicion -> NOT expresion .)
    VARIABLE        reduce using rule 62 (condicion -> NOT expresion .)
    PRINT           reduce using rule 62 (condicion -> NOT expresion .)
    LPAREN          reduce using rule 62 (condicion -> NOT expresion .)
    NUMBER          reduce using rule 62 (condicion -> NOT expresion .)
    FLOAT           reduce using rule 62 (condicion -> NOT expresion .)
    TRUE            reduce using rule 62 (condicion -> NOT expresion .)
    FALSE           reduce using rule 62 (condicion -> NOT expresion .)
    NOT             reduce using rule 62 (condicion -> NOT expresion .)
    LISTOF          reduce using rule 62 (condicion -> NOT expresion .)
    MUTABLELISTOF   reduce using rule 62 (condicion -> NOT expresion .)
    MAPOF           reduce using rule 62 (condicion -> NOT expresion .)
    MUTABLEMAPOF    reduce using rule 62 (condicion -> NOT expresion .)
    SETOF           reduce using rule 62 (condicion -> NOT expresion .)
    MUTABLESETOF    reduce using rule 62 (condicion -> NOT expresion .)
    FOR             reduce using rule 62 (condicion -> NOT expresion .)
    WHILE           reduce using rule 62 (condicion -> NOT expresion .)
    IF              reduce using rule 62 (condicion -> NOT expresion .)
    DO              reduce using rule 62 (condicion -> NOT expresion .)
    VAL             reduce using rule 62 (condicion -> NOT expresion .)
    VAR             reduce using rule 62 (condicion -> NOT expresion .)
    FUN             reduce using rule 62 (condicion -> NOT expresion .)
    RETURN          reduce using rule 62 (condicion -> NOT expresion .)
    CLASS           reduce using rule 62 (condicion -> NOT expresion .)
    OPEN            reduce using rule 62 (condicion -> NOT expresion .)
    $end            reduce using rule 62 (condicion -> NOT expresion .)
    RPAREN          reduce using rule 62 (condicion -> NOT expresion .)
    LLLAVE          reduce using rule 62 (condicion -> NOT expresion .)
    RLLAVE          reduce using rule 62 (condicion -> NOT expresion .)
    CONSTRUCTOR     reduce using rule 62 (condicion -> NOT expresion .)
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47

  ! PLUS            [ reduce using rule 62 (condicion -> NOT expresion .) ]
  ! MINUS           [ reduce using rule 62 (condicion -> NOT expresion .) ]
  ! TIMES           [ reduce using rule 62 (condicion -> NOT expresion .) ]
  ! DIVIDE          [ reduce using rule 62 (condicion -> NOT expresion .) ]
  ! MOD             [ reduce using rule 62 (condicion -> NOT expresion .) ]
  ! GREATER         [ reduce using rule 62 (condicion -> NOT expresion .) ]
  ! LESS            [ reduce using rule 62 (condicion -> NOT expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 62 (condicion -> NOT expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 62 (condicion -> NOT expresion .) ]
  ! EQUALS          [ reduce using rule 62 (condicion -> NOT expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 62 (condicion -> NOT expresion .) ]


state 63

    (63) condicion -> TRUE .
    (49) expresion -> TRUE .

  ! reduce/reduce conflict for AND resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for OR resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for BREAK resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for PRINT resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for NOT resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for SETOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for WHILE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for DO resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for VAL resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for VAR resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for FUN resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for RETURN resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for CLASS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for OPEN resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for PLUS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for TIMES resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MOD resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for GREATER resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for CONSTRUCTOR resolved using rule 49 (expresion -> TRUE .)
    AND             reduce using rule 49 (expresion -> TRUE .)
    OR              reduce using rule 49 (expresion -> TRUE .)
    CONTINUE        reduce using rule 49 (expresion -> TRUE .)
    BREAK           reduce using rule 49 (expresion -> TRUE .)
    VARIABLE        reduce using rule 49 (expresion -> TRUE .)
    PRINT           reduce using rule 49 (expresion -> TRUE .)
    LPAREN          reduce using rule 49 (expresion -> TRUE .)
    NUMBER          reduce using rule 49 (expresion -> TRUE .)
    FLOAT           reduce using rule 49 (expresion -> TRUE .)
    TRUE            reduce using rule 49 (expresion -> TRUE .)
    FALSE           reduce using rule 49 (expresion -> TRUE .)
    NOT             reduce using rule 49 (expresion -> TRUE .)
    LISTOF          reduce using rule 49 (expresion -> TRUE .)
    MUTABLELISTOF   reduce using rule 49 (expresion -> TRUE .)
    MAPOF           reduce using rule 49 (expresion -> TRUE .)
    MUTABLEMAPOF    reduce using rule 49 (expresion -> TRUE .)
    SETOF           reduce using rule 49 (expresion -> TRUE .)
    MUTABLESETOF    reduce using rule 49 (expresion -> TRUE .)
    FOR             reduce using rule 49 (expresion -> TRUE .)
    WHILE           reduce using rule 49 (expresion -> TRUE .)
    IF              reduce using rule 49 (expresion -> TRUE .)
    DO              reduce using rule 49 (expresion -> TRUE .)
    VAL             reduce using rule 49 (expresion -> TRUE .)
    VAR             reduce using rule 49 (expresion -> TRUE .)
    FUN             reduce using rule 49 (expresion -> TRUE .)
    RETURN          reduce using rule 49 (expresion -> TRUE .)
    CLASS           reduce using rule 49 (expresion -> TRUE .)
    OPEN            reduce using rule 49 (expresion -> TRUE .)
    $end            reduce using rule 49 (expresion -> TRUE .)
    PLUS            reduce using rule 49 (expresion -> TRUE .)
    MINUS           reduce using rule 49 (expresion -> TRUE .)
    TIMES           reduce using rule 49 (expresion -> TRUE .)
    DIVIDE          reduce using rule 49 (expresion -> TRUE .)
    MOD             reduce using rule 49 (expresion -> TRUE .)
    GREATER         reduce using rule 49 (expresion -> TRUE .)
    LESS            reduce using rule 49 (expresion -> TRUE .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> TRUE .)
    LESS_EQUALS     reduce using rule 49 (expresion -> TRUE .)
    EQUALS          reduce using rule 49 (expresion -> TRUE .)
    NOT_EQUALS      reduce using rule 49 (expresion -> TRUE .)
    RPAREN          reduce using rule 49 (expresion -> TRUE .)
    LLLAVE          reduce using rule 49 (expresion -> TRUE .)
    RLLAVE          reduce using rule 49 (expresion -> TRUE .)
    CONSTRUCTOR     reduce using rule 49 (expresion -> TRUE .)

  ! AND             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! OR              [ reduce using rule 63 (condicion -> TRUE .) ]
  ! CONTINUE        [ reduce using rule 63 (condicion -> TRUE .) ]
  ! BREAK           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! VARIABLE        [ reduce using rule 63 (condicion -> TRUE .) ]
  ! PRINT           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LPAREN          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! NUMBER          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FLOAT           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! TRUE            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FALSE           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! NOT             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LISTOF          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MUTABLELISTOF   [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MAPOF           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 63 (condicion -> TRUE .) ]
  ! SETOF           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MUTABLESETOF    [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FOR             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! WHILE           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! IF              [ reduce using rule 63 (condicion -> TRUE .) ]
  ! DO              [ reduce using rule 63 (condicion -> TRUE .) ]
  ! VAL             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! VAR             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FUN             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! RETURN          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! CLASS           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! OPEN            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! $end            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! PLUS            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MINUS           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! TIMES           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! DIVIDE          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MOD             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! GREATER         [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LESS            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! GREATER_EQUALS  [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LESS_EQUALS     [ reduce using rule 63 (condicion -> TRUE .) ]
  ! EQUALS          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! NOT_EQUALS      [ reduce using rule 63 (condicion -> TRUE .) ]
  ! RPAREN          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LLLAVE          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! RLLAVE          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! CONSTRUCTOR     [ reduce using rule 63 (condicion -> TRUE .) ]


state 64

    (64) condicion -> FALSE .
    (50) expresion -> FALSE .

  ! reduce/reduce conflict for AND resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for OR resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for BREAK resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for PRINT resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for NOT resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for SETOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for WHILE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for DO resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for VAL resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for VAR resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for FUN resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for RETURN resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for CLASS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for OPEN resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for PLUS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MINUS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for TIMES resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MOD resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for GREATER resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for CONSTRUCTOR resolved using rule 50 (expresion -> FALSE .)
    AND             reduce using rule 50 (expresion -> FALSE .)
    OR              reduce using rule 50 (expresion -> FALSE .)
    CONTINUE        reduce using rule 50 (expresion -> FALSE .)
    BREAK           reduce using rule 50 (expresion -> FALSE .)
    VARIABLE        reduce using rule 50 (expresion -> FALSE .)
    PRINT           reduce using rule 50 (expresion -> FALSE .)
    LPAREN          reduce using rule 50 (expresion -> FALSE .)
    NUMBER          reduce using rule 50 (expresion -> FALSE .)
    FLOAT           reduce using rule 50 (expresion -> FALSE .)
    TRUE            reduce using rule 50 (expresion -> FALSE .)
    FALSE           reduce using rule 50 (expresion -> FALSE .)
    NOT             reduce using rule 50 (expresion -> FALSE .)
    LISTOF          reduce using rule 50 (expresion -> FALSE .)
    MUTABLELISTOF   reduce using rule 50 (expresion -> FALSE .)
    MAPOF           reduce using rule 50 (expresion -> FALSE .)
    MUTABLEMAPOF    reduce using rule 50 (expresion -> FALSE .)
    SETOF           reduce using rule 50 (expresion -> FALSE .)
    MUTABLESETOF    reduce using rule 50 (expresion -> FALSE .)
    FOR             reduce using rule 50 (expresion -> FALSE .)
    WHILE           reduce using rule 50 (expresion -> FALSE .)
    IF              reduce using rule 50 (expresion -> FALSE .)
    DO              reduce using rule 50 (expresion -> FALSE .)
    VAL             reduce using rule 50 (expresion -> FALSE .)
    VAR             reduce using rule 50 (expresion -> FALSE .)
    FUN             reduce using rule 50 (expresion -> FALSE .)
    RETURN          reduce using rule 50 (expresion -> FALSE .)
    CLASS           reduce using rule 50 (expresion -> FALSE .)
    OPEN            reduce using rule 50 (expresion -> FALSE .)
    $end            reduce using rule 50 (expresion -> FALSE .)
    PLUS            reduce using rule 50 (expresion -> FALSE .)
    MINUS           reduce using rule 50 (expresion -> FALSE .)
    TIMES           reduce using rule 50 (expresion -> FALSE .)
    DIVIDE          reduce using rule 50 (expresion -> FALSE .)
    MOD             reduce using rule 50 (expresion -> FALSE .)
    GREATER         reduce using rule 50 (expresion -> FALSE .)
    LESS            reduce using rule 50 (expresion -> FALSE .)
    GREATER_EQUALS  reduce using rule 50 (expresion -> FALSE .)
    LESS_EQUALS     reduce using rule 50 (expresion -> FALSE .)
    EQUALS          reduce using rule 50 (expresion -> FALSE .)
    NOT_EQUALS      reduce using rule 50 (expresion -> FALSE .)
    RPAREN          reduce using rule 50 (expresion -> FALSE .)
    LLLAVE          reduce using rule 50 (expresion -> FALSE .)
    RLLAVE          reduce using rule 50 (expresion -> FALSE .)
    CONSTRUCTOR     reduce using rule 50 (expresion -> FALSE .)

  ! AND             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! OR              [ reduce using rule 64 (condicion -> FALSE .) ]
  ! CONTINUE        [ reduce using rule 64 (condicion -> FALSE .) ]
  ! BREAK           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! VARIABLE        [ reduce using rule 64 (condicion -> FALSE .) ]
  ! PRINT           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LPAREN          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! NUMBER          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FLOAT           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! TRUE            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FALSE           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! NOT             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LISTOF          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MUTABLELISTOF   [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MAPOF           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 64 (condicion -> FALSE .) ]
  ! SETOF           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MUTABLESETOF    [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FOR             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! WHILE           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! IF              [ reduce using rule 64 (condicion -> FALSE .) ]
  ! DO              [ reduce using rule 64 (condicion -> FALSE .) ]
  ! VAL             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! VAR             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FUN             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! RETURN          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! CLASS           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! OPEN            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! $end            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! PLUS            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MINUS           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! TIMES           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! DIVIDE          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MOD             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! GREATER         [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LESS            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! GREATER_EQUALS  [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LESS_EQUALS     [ reduce using rule 64 (condicion -> FALSE .) ]
  ! EQUALS          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! NOT_EQUALS      [ reduce using rule 64 (condicion -> FALSE .) ]
  ! RPAREN          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LLLAVE          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! RLLAVE          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! CONSTRUCTOR     [ reduce using rule 64 (condicion -> FALSE .) ]


state 65

    (65) condicion -> LPAREN . condicion RPAREN
    (46) expresion -> LPAREN . expresion RPAREN
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE

    NOT             shift and go to state 25
    TRUE            shift and go to state 63
    FALSE           shift and go to state 64
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    VARIABLE        shift and go to state 60

    condicion                      shift and go to state 123
    expresion                      shift and go to state 124

state 66

    (66) estructura -> LISTOF LPAREN . repiteValores RPAREN
    (67) estructura -> LISTOF LPAREN . RPAREN
    (38) repiteValores -> . valor COMMA repiteValores
    (39) repiteValores -> . valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    RPAREN          shift and go to state 126
    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    repiteValores                  shift and go to state 125
    valor                          shift and go to state 115

state 67

    (68) estructura -> MUTABLELISTOF LPAREN . repiteValores RPAREN
    (69) estructura -> MUTABLELISTOF LPAREN . RPAREN
    (38) repiteValores -> . valor COMMA repiteValores
    (39) repiteValores -> . valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    RPAREN          shift and go to state 128
    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    repiteValores                  shift and go to state 127
    valor                          shift and go to state 115

state 68

    (70) estructura -> MAPOF LPAREN . pareskv_mapa RPAREN
    (72) pareskv_mapa -> . valor TO_FROM_KV valor COMMA pareskv_mapa
    (73) pareskv_mapa -> . valor TO_FROM_KV valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    pareskv_mapa                   shift and go to state 129
    valor                          shift and go to state 130

state 69

    (71) estructura -> MUTABLEMAPOF LPAREN . pareskv_mapa RPAREN
    (72) pareskv_mapa -> . valor TO_FROM_KV valor COMMA pareskv_mapa
    (73) pareskv_mapa -> . valor TO_FROM_KV valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    pareskv_mapa                   shift and go to state 131
    valor                          shift and go to state 130

state 70

    (74) estructura -> SETOF LPAREN . repiteValores RPAREN
    (75) estructura -> SETOF LPAREN . RPAREN
    (38) repiteValores -> . valor COMMA repiteValores
    (39) repiteValores -> . valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    RPAREN          shift and go to state 133
    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    repiteValores                  shift and go to state 132
    valor                          shift and go to state 115

state 71

    (76) estructura -> MUTABLESETOF LPAREN . repiteValores RPAREN
    (77) estructura -> MUTABLESETOF LPAREN . RPAREN
    (38) repiteValores -> . valor COMMA repiteValores
    (39) repiteValores -> . valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    RPAREN          shift and go to state 135
    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    repiteValores                  shift and go to state 134
    valor                          shift and go to state 115

state 72

    (86) estructura -> FOR LPAREN . VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE

    VARIABLE        shift and go to state 136


state 73

    (87) estructura -> WHILE condicion . LLLAVE sentencias RLLAVE
    (88) estructura -> WHILE condicion . LLLAVE RLLAVE
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion
    (51) expresion -> condicion .

    LLLAVE          shift and go to state 137
    AND             shift and go to state 54
    OR              shift and go to state 55
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)


state 74

    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion

    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47


state 75

    (89) estructura -> IF condicion . LLLAVE sentencias RLLAVE
    (90) estructura -> IF condicion . LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> IF condicion . LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> IF condicion . LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion
    (51) expresion -> condicion .

    LLLAVE          shift and go to state 138
    AND             shift and go to state 54
    OR              shift and go to state 55
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)


state 76

    (95) estructura -> DO LLLAVE . sentencias RLLAVE WHILE condicion
    (96) estructura -> DO LLLAVE . RLLAVE WHILE condicion
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 140
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 139
    condicion                      shift and go to state 8
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 77

    (19) declaracion_variable -> VAL VARIABLE . ASIGN valor
    (21) declaracion_variable -> VAL VARIABLE . ASIGN estructura
    (23) declaracion_variable -> VAL VARIABLE . ASIGN creacionObjeto

    ASIGN           shift and go to state 141


state 78

    (20) declaracion_variable -> VAR VARIABLE . ASIGN valor
    (22) declaracion_variable -> VAR VARIABLE . ASIGN estructura
    (24) declaracion_variable -> VAR VARIABLE . ASIGN creacionObjeto

    ASIGN           shift and go to state 142


state 79

    (102) funcion -> FUN VARIABLE . LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> FUN VARIABLE . LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> FUN VARIABLE . LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias

    LPAREN          shift and go to state 143


state 80

    (78) retorno -> RETURN objetoRetorno .

    CONTINUE        reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    BREAK           reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    VARIABLE        reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    PRINT           reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    LPAREN          reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    NUMBER          reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    FLOAT           reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    TRUE            reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    FALSE           reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    NOT             reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    LISTOF          reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    MUTABLELISTOF   reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    MAPOF           reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    MUTABLEMAPOF    reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    SETOF           reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    MUTABLESETOF    reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    FOR             reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    WHILE           reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    IF              reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    DO              reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    VAL             reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    VAR             reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    FUN             reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    RETURN          reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    CLASS           reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    OPEN            reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    $end            reduce using rule 78 (retorno -> RETURN objetoRetorno .)
    RLLAVE          reduce using rule 78 (retorno -> RETURN objetoRetorno .)


state 81

    (79) objetoRetorno -> valor .

    CONTINUE        reduce using rule 79 (objetoRetorno -> valor .)
    BREAK           reduce using rule 79 (objetoRetorno -> valor .)
    VARIABLE        reduce using rule 79 (objetoRetorno -> valor .)
    PRINT           reduce using rule 79 (objetoRetorno -> valor .)
    LPAREN          reduce using rule 79 (objetoRetorno -> valor .)
    NUMBER          reduce using rule 79 (objetoRetorno -> valor .)
    FLOAT           reduce using rule 79 (objetoRetorno -> valor .)
    TRUE            reduce using rule 79 (objetoRetorno -> valor .)
    FALSE           reduce using rule 79 (objetoRetorno -> valor .)
    NOT             reduce using rule 79 (objetoRetorno -> valor .)
    LISTOF          reduce using rule 79 (objetoRetorno -> valor .)
    MUTABLELISTOF   reduce using rule 79 (objetoRetorno -> valor .)
    MAPOF           reduce using rule 79 (objetoRetorno -> valor .)
    MUTABLEMAPOF    reduce using rule 79 (objetoRetorno -> valor .)
    SETOF           reduce using rule 79 (objetoRetorno -> valor .)
    MUTABLESETOF    reduce using rule 79 (objetoRetorno -> valor .)
    FOR             reduce using rule 79 (objetoRetorno -> valor .)
    WHILE           reduce using rule 79 (objetoRetorno -> valor .)
    IF              reduce using rule 79 (objetoRetorno -> valor .)
    DO              reduce using rule 79 (objetoRetorno -> valor .)
    VAL             reduce using rule 79 (objetoRetorno -> valor .)
    VAR             reduce using rule 79 (objetoRetorno -> valor .)
    FUN             reduce using rule 79 (objetoRetorno -> valor .)
    RETURN          reduce using rule 79 (objetoRetorno -> valor .)
    CLASS           reduce using rule 79 (objetoRetorno -> valor .)
    OPEN            reduce using rule 79 (objetoRetorno -> valor .)
    $end            reduce using rule 79 (objetoRetorno -> valor .)
    RLLAVE          reduce using rule 79 (objetoRetorno -> valor .)


state 82

    (80) objetoRetorno -> condicion .
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion
    (51) expresion -> condicion .

  ! reduce/reduce conflict for CONTINUE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for BREAK resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for PRINT resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for LPAREN resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for NUMBER resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for TRUE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for FALSE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for NOT resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for LISTOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MAPOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for SETOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for FOR resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for WHILE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for IF resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for DO resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for VAL resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for VAR resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for FUN resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for RETURN resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for CLASS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for OPEN resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for $end resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 51 (expresion -> condicion .)
    AND             shift and go to state 54
    OR              shift and go to state 55
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)
    CONTINUE        reduce using rule 51 (expresion -> condicion .)
    BREAK           reduce using rule 51 (expresion -> condicion .)
    VARIABLE        reduce using rule 51 (expresion -> condicion .)
    PRINT           reduce using rule 51 (expresion -> condicion .)
    LPAREN          reduce using rule 51 (expresion -> condicion .)
    NUMBER          reduce using rule 51 (expresion -> condicion .)
    FLOAT           reduce using rule 51 (expresion -> condicion .)
    TRUE            reduce using rule 51 (expresion -> condicion .)
    FALSE           reduce using rule 51 (expresion -> condicion .)
    NOT             reduce using rule 51 (expresion -> condicion .)
    LISTOF          reduce using rule 51 (expresion -> condicion .)
    MUTABLELISTOF   reduce using rule 51 (expresion -> condicion .)
    MAPOF           reduce using rule 51 (expresion -> condicion .)
    MUTABLEMAPOF    reduce using rule 51 (expresion -> condicion .)
    SETOF           reduce using rule 51 (expresion -> condicion .)
    MUTABLESETOF    reduce using rule 51 (expresion -> condicion .)
    FOR             reduce using rule 51 (expresion -> condicion .)
    WHILE           reduce using rule 51 (expresion -> condicion .)
    IF              reduce using rule 51 (expresion -> condicion .)
    DO              reduce using rule 51 (expresion -> condicion .)
    VAL             reduce using rule 51 (expresion -> condicion .)
    VAR             reduce using rule 51 (expresion -> condicion .)
    FUN             reduce using rule 51 (expresion -> condicion .)
    RETURN          reduce using rule 51 (expresion -> condicion .)
    CLASS           reduce using rule 51 (expresion -> condicion .)
    OPEN            reduce using rule 51 (expresion -> condicion .)
    $end            reduce using rule 51 (expresion -> condicion .)
    RLLAVE          reduce using rule 51 (expresion -> condicion .)

  ! CONTINUE        [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! BREAK           [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! VARIABLE        [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! PRINT           [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! LPAREN          [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! NUMBER          [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! FLOAT           [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! TRUE            [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! FALSE           [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! NOT             [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! LISTOF          [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! MUTABLELISTOF   [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! MAPOF           [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! MUTABLEMAPOF    [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! SETOF           [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! MUTABLESETOF    [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! FOR             [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! WHILE           [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! IF              [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! DO              [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! VAL             [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! VAR             [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! FUN             [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! RETURN          [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! CLASS           [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! OPEN            [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! $end            [ reduce using rule 80 (objetoRetorno -> condicion .) ]
  ! RLLAVE          [ reduce using rule 80 (objetoRetorno -> condicion .) ]


state 83

    (81) objetoRetorno -> expresion .
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion

    CONTINUE        reduce using rule 81 (objetoRetorno -> expresion .)
    BREAK           reduce using rule 81 (objetoRetorno -> expresion .)
    VARIABLE        reduce using rule 81 (objetoRetorno -> expresion .)
    PRINT           reduce using rule 81 (objetoRetorno -> expresion .)
    LPAREN          reduce using rule 81 (objetoRetorno -> expresion .)
    NUMBER          reduce using rule 81 (objetoRetorno -> expresion .)
    FLOAT           reduce using rule 81 (objetoRetorno -> expresion .)
    TRUE            reduce using rule 81 (objetoRetorno -> expresion .)
    FALSE           reduce using rule 81 (objetoRetorno -> expresion .)
    NOT             reduce using rule 81 (objetoRetorno -> expresion .)
    LISTOF          reduce using rule 81 (objetoRetorno -> expresion .)
    MUTABLELISTOF   reduce using rule 81 (objetoRetorno -> expresion .)
    MAPOF           reduce using rule 81 (objetoRetorno -> expresion .)
    MUTABLEMAPOF    reduce using rule 81 (objetoRetorno -> expresion .)
    SETOF           reduce using rule 81 (objetoRetorno -> expresion .)
    MUTABLESETOF    reduce using rule 81 (objetoRetorno -> expresion .)
    FOR             reduce using rule 81 (objetoRetorno -> expresion .)
    WHILE           reduce using rule 81 (objetoRetorno -> expresion .)
    IF              reduce using rule 81 (objetoRetorno -> expresion .)
    DO              reduce using rule 81 (objetoRetorno -> expresion .)
    VAL             reduce using rule 81 (objetoRetorno -> expresion .)
    VAR             reduce using rule 81 (objetoRetorno -> expresion .)
    FUN             reduce using rule 81 (objetoRetorno -> expresion .)
    RETURN          reduce using rule 81 (objetoRetorno -> expresion .)
    CLASS           reduce using rule 81 (objetoRetorno -> expresion .)
    OPEN            reduce using rule 81 (objetoRetorno -> expresion .)
    $end            reduce using rule 81 (objetoRetorno -> expresion .)
    RLLAVE          reduce using rule 81 (objetoRetorno -> expresion .)
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47


state 84

    (82) objetoRetorno -> TRUE .
    (36) valor -> TRUE .
    (63) condicion -> TRUE .
    (49) expresion -> TRUE .

  ! reduce/reduce conflict for CONTINUE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for BREAK resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for PRINT resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for NOT resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for SETOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for WHILE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for DO resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for VAL resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for VAR resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FUN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for RETURN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for CLASS resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for OPEN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for BREAK resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for PRINT resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for NOT resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for SETOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for WHILE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for DO resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for VAL resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for VAR resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FUN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for RETURN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for CLASS resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for OPEN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for GREATER resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for PLUS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for TIMES resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for MOD resolved using rule 49 (expresion -> TRUE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for BREAK resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for PRINT resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for NOT resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for SETOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for WHILE resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for DO resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for VAL resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for VAR resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for FUN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for RETURN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for CLASS resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for OPEN resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 36 (valor -> TRUE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 36 (valor -> TRUE .)
    CONTINUE        reduce using rule 36 (valor -> TRUE .)
    BREAK           reduce using rule 36 (valor -> TRUE .)
    VARIABLE        reduce using rule 36 (valor -> TRUE .)
    PRINT           reduce using rule 36 (valor -> TRUE .)
    LPAREN          reduce using rule 36 (valor -> TRUE .)
    NUMBER          reduce using rule 36 (valor -> TRUE .)
    FLOAT           reduce using rule 36 (valor -> TRUE .)
    TRUE            reduce using rule 36 (valor -> TRUE .)
    FALSE           reduce using rule 36 (valor -> TRUE .)
    NOT             reduce using rule 36 (valor -> TRUE .)
    LISTOF          reduce using rule 36 (valor -> TRUE .)
    MUTABLELISTOF   reduce using rule 36 (valor -> TRUE .)
    MAPOF           reduce using rule 36 (valor -> TRUE .)
    MUTABLEMAPOF    reduce using rule 36 (valor -> TRUE .)
    SETOF           reduce using rule 36 (valor -> TRUE .)
    MUTABLESETOF    reduce using rule 36 (valor -> TRUE .)
    FOR             reduce using rule 36 (valor -> TRUE .)
    WHILE           reduce using rule 36 (valor -> TRUE .)
    IF              reduce using rule 36 (valor -> TRUE .)
    DO              reduce using rule 36 (valor -> TRUE .)
    VAL             reduce using rule 36 (valor -> TRUE .)
    VAR             reduce using rule 36 (valor -> TRUE .)
    FUN             reduce using rule 36 (valor -> TRUE .)
    RETURN          reduce using rule 36 (valor -> TRUE .)
    CLASS           reduce using rule 36 (valor -> TRUE .)
    OPEN            reduce using rule 36 (valor -> TRUE .)
    $end            reduce using rule 36 (valor -> TRUE .)
    RLLAVE          reduce using rule 36 (valor -> TRUE .)
    AND             reduce using rule 63 (condicion -> TRUE .)
    OR              reduce using rule 63 (condicion -> TRUE .)
    GREATER         reduce using rule 49 (expresion -> TRUE .)
    LESS            reduce using rule 49 (expresion -> TRUE .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> TRUE .)
    LESS_EQUALS     reduce using rule 49 (expresion -> TRUE .)
    EQUALS          reduce using rule 49 (expresion -> TRUE .)
    NOT_EQUALS      reduce using rule 49 (expresion -> TRUE .)
    PLUS            reduce using rule 49 (expresion -> TRUE .)
    MINUS           reduce using rule 49 (expresion -> TRUE .)
    TIMES           reduce using rule 49 (expresion -> TRUE .)
    DIVIDE          reduce using rule 49 (expresion -> TRUE .)
    MOD             reduce using rule 49 (expresion -> TRUE .)

  ! CONTINUE        [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! BREAK           [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! VARIABLE        [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! PRINT           [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! LPAREN          [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! NUMBER          [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! FLOAT           [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! TRUE            [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! FALSE           [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! NOT             [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! LISTOF          [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! MUTABLELISTOF   [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! MAPOF           [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! SETOF           [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! MUTABLESETOF    [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! FOR             [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! WHILE           [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! IF              [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! DO              [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! VAL             [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! VAR             [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! FUN             [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! RETURN          [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! CLASS           [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! OPEN            [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! $end            [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! RLLAVE          [ reduce using rule 82 (objetoRetorno -> TRUE .) ]
  ! CONTINUE        [ reduce using rule 63 (condicion -> TRUE .) ]
  ! BREAK           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! VARIABLE        [ reduce using rule 63 (condicion -> TRUE .) ]
  ! PRINT           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LPAREN          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! NUMBER          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FLOAT           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! TRUE            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FALSE           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! NOT             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LISTOF          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MUTABLELISTOF   [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MAPOF           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 63 (condicion -> TRUE .) ]
  ! SETOF           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MUTABLESETOF    [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FOR             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! WHILE           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! IF              [ reduce using rule 63 (condicion -> TRUE .) ]
  ! DO              [ reduce using rule 63 (condicion -> TRUE .) ]
  ! VAL             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! VAR             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! FUN             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! RETURN          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! CLASS           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! OPEN            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! $end            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! RLLAVE          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! GREATER         [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LESS            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! GREATER_EQUALS  [ reduce using rule 63 (condicion -> TRUE .) ]
  ! LESS_EQUALS     [ reduce using rule 63 (condicion -> TRUE .) ]
  ! EQUALS          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! NOT_EQUALS      [ reduce using rule 63 (condicion -> TRUE .) ]
  ! PLUS            [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MINUS           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! TIMES           [ reduce using rule 63 (condicion -> TRUE .) ]
  ! DIVIDE          [ reduce using rule 63 (condicion -> TRUE .) ]
  ! MOD             [ reduce using rule 63 (condicion -> TRUE .) ]
  ! CONTINUE        [ reduce using rule 49 (expresion -> TRUE .) ]
  ! BREAK           [ reduce using rule 49 (expresion -> TRUE .) ]
  ! VARIABLE        [ reduce using rule 49 (expresion -> TRUE .) ]
  ! PRINT           [ reduce using rule 49 (expresion -> TRUE .) ]
  ! LPAREN          [ reduce using rule 49 (expresion -> TRUE .) ]
  ! NUMBER          [ reduce using rule 49 (expresion -> TRUE .) ]
  ! FLOAT           [ reduce using rule 49 (expresion -> TRUE .) ]
  ! TRUE            [ reduce using rule 49 (expresion -> TRUE .) ]
  ! FALSE           [ reduce using rule 49 (expresion -> TRUE .) ]
  ! NOT             [ reduce using rule 49 (expresion -> TRUE .) ]
  ! LISTOF          [ reduce using rule 49 (expresion -> TRUE .) ]
  ! MUTABLELISTOF   [ reduce using rule 49 (expresion -> TRUE .) ]
  ! MAPOF           [ reduce using rule 49 (expresion -> TRUE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 49 (expresion -> TRUE .) ]
  ! SETOF           [ reduce using rule 49 (expresion -> TRUE .) ]
  ! MUTABLESETOF    [ reduce using rule 49 (expresion -> TRUE .) ]
  ! FOR             [ reduce using rule 49 (expresion -> TRUE .) ]
  ! WHILE           [ reduce using rule 49 (expresion -> TRUE .) ]
  ! IF              [ reduce using rule 49 (expresion -> TRUE .) ]
  ! DO              [ reduce using rule 49 (expresion -> TRUE .) ]
  ! VAL             [ reduce using rule 49 (expresion -> TRUE .) ]
  ! VAR             [ reduce using rule 49 (expresion -> TRUE .) ]
  ! FUN             [ reduce using rule 49 (expresion -> TRUE .) ]
  ! RETURN          [ reduce using rule 49 (expresion -> TRUE .) ]
  ! CLASS           [ reduce using rule 49 (expresion -> TRUE .) ]
  ! OPEN            [ reduce using rule 49 (expresion -> TRUE .) ]
  ! $end            [ reduce using rule 49 (expresion -> TRUE .) ]
  ! RLLAVE          [ reduce using rule 49 (expresion -> TRUE .) ]


state 85

    (83) objetoRetorno -> FALSE .
    (37) valor -> FALSE .
    (64) condicion -> FALSE .
    (50) expresion -> FALSE .

  ! reduce/reduce conflict for CONTINUE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for BREAK resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for PRINT resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for NOT resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for SETOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for WHILE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for DO resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for VAL resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for VAR resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FUN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for RETURN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for CLASS resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for OPEN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for BREAK resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for PRINT resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for NOT resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for SETOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for WHILE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for DO resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for VAL resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for VAR resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FUN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for RETURN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for CLASS resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for OPEN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for GREATER resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for PLUS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MINUS resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for TIMES resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for MOD resolved using rule 50 (expresion -> FALSE .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for BREAK resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for PRINT resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for NOT resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for SETOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for WHILE resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for DO resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for VAL resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for VAR resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for FUN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for RETURN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for CLASS resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for OPEN resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 37 (valor -> FALSE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 37 (valor -> FALSE .)
    CONTINUE        reduce using rule 37 (valor -> FALSE .)
    BREAK           reduce using rule 37 (valor -> FALSE .)
    VARIABLE        reduce using rule 37 (valor -> FALSE .)
    PRINT           reduce using rule 37 (valor -> FALSE .)
    LPAREN          reduce using rule 37 (valor -> FALSE .)
    NUMBER          reduce using rule 37 (valor -> FALSE .)
    FLOAT           reduce using rule 37 (valor -> FALSE .)
    TRUE            reduce using rule 37 (valor -> FALSE .)
    FALSE           reduce using rule 37 (valor -> FALSE .)
    NOT             reduce using rule 37 (valor -> FALSE .)
    LISTOF          reduce using rule 37 (valor -> FALSE .)
    MUTABLELISTOF   reduce using rule 37 (valor -> FALSE .)
    MAPOF           reduce using rule 37 (valor -> FALSE .)
    MUTABLEMAPOF    reduce using rule 37 (valor -> FALSE .)
    SETOF           reduce using rule 37 (valor -> FALSE .)
    MUTABLESETOF    reduce using rule 37 (valor -> FALSE .)
    FOR             reduce using rule 37 (valor -> FALSE .)
    WHILE           reduce using rule 37 (valor -> FALSE .)
    IF              reduce using rule 37 (valor -> FALSE .)
    DO              reduce using rule 37 (valor -> FALSE .)
    VAL             reduce using rule 37 (valor -> FALSE .)
    VAR             reduce using rule 37 (valor -> FALSE .)
    FUN             reduce using rule 37 (valor -> FALSE .)
    RETURN          reduce using rule 37 (valor -> FALSE .)
    CLASS           reduce using rule 37 (valor -> FALSE .)
    OPEN            reduce using rule 37 (valor -> FALSE .)
    $end            reduce using rule 37 (valor -> FALSE .)
    RLLAVE          reduce using rule 37 (valor -> FALSE .)
    AND             reduce using rule 64 (condicion -> FALSE .)
    OR              reduce using rule 64 (condicion -> FALSE .)
    GREATER         reduce using rule 50 (expresion -> FALSE .)
    LESS            reduce using rule 50 (expresion -> FALSE .)
    GREATER_EQUALS  reduce using rule 50 (expresion -> FALSE .)
    LESS_EQUALS     reduce using rule 50 (expresion -> FALSE .)
    EQUALS          reduce using rule 50 (expresion -> FALSE .)
    NOT_EQUALS      reduce using rule 50 (expresion -> FALSE .)
    PLUS            reduce using rule 50 (expresion -> FALSE .)
    MINUS           reduce using rule 50 (expresion -> FALSE .)
    TIMES           reduce using rule 50 (expresion -> FALSE .)
    DIVIDE          reduce using rule 50 (expresion -> FALSE .)
    MOD             reduce using rule 50 (expresion -> FALSE .)

  ! CONTINUE        [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! BREAK           [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! VARIABLE        [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! PRINT           [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! LPAREN          [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! NUMBER          [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! FLOAT           [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! TRUE            [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! FALSE           [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! NOT             [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! LISTOF          [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! MUTABLELISTOF   [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! MAPOF           [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! SETOF           [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! MUTABLESETOF    [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! FOR             [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! WHILE           [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! IF              [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! DO              [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! VAL             [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! VAR             [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! FUN             [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! RETURN          [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! CLASS           [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! OPEN            [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! $end            [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! RLLAVE          [ reduce using rule 83 (objetoRetorno -> FALSE .) ]
  ! CONTINUE        [ reduce using rule 64 (condicion -> FALSE .) ]
  ! BREAK           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! VARIABLE        [ reduce using rule 64 (condicion -> FALSE .) ]
  ! PRINT           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LPAREN          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! NUMBER          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FLOAT           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! TRUE            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FALSE           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! NOT             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LISTOF          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MUTABLELISTOF   [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MAPOF           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 64 (condicion -> FALSE .) ]
  ! SETOF           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MUTABLESETOF    [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FOR             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! WHILE           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! IF              [ reduce using rule 64 (condicion -> FALSE .) ]
  ! DO              [ reduce using rule 64 (condicion -> FALSE .) ]
  ! VAL             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! VAR             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! FUN             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! RETURN          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! CLASS           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! OPEN            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! $end            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! RLLAVE          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! GREATER         [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LESS            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! GREATER_EQUALS  [ reduce using rule 64 (condicion -> FALSE .) ]
  ! LESS_EQUALS     [ reduce using rule 64 (condicion -> FALSE .) ]
  ! EQUALS          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! NOT_EQUALS      [ reduce using rule 64 (condicion -> FALSE .) ]
  ! PLUS            [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MINUS           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! TIMES           [ reduce using rule 64 (condicion -> FALSE .) ]
  ! DIVIDE          [ reduce using rule 64 (condicion -> FALSE .) ]
  ! MOD             [ reduce using rule 64 (condicion -> FALSE .) ]
  ! CONTINUE        [ reduce using rule 50 (expresion -> FALSE .) ]
  ! BREAK           [ reduce using rule 50 (expresion -> FALSE .) ]
  ! VARIABLE        [ reduce using rule 50 (expresion -> FALSE .) ]
  ! PRINT           [ reduce using rule 50 (expresion -> FALSE .) ]
  ! LPAREN          [ reduce using rule 50 (expresion -> FALSE .) ]
  ! NUMBER          [ reduce using rule 50 (expresion -> FALSE .) ]
  ! FLOAT           [ reduce using rule 50 (expresion -> FALSE .) ]
  ! TRUE            [ reduce using rule 50 (expresion -> FALSE .) ]
  ! FALSE           [ reduce using rule 50 (expresion -> FALSE .) ]
  ! NOT             [ reduce using rule 50 (expresion -> FALSE .) ]
  ! LISTOF          [ reduce using rule 50 (expresion -> FALSE .) ]
  ! MUTABLELISTOF   [ reduce using rule 50 (expresion -> FALSE .) ]
  ! MAPOF           [ reduce using rule 50 (expresion -> FALSE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 50 (expresion -> FALSE .) ]
  ! SETOF           [ reduce using rule 50 (expresion -> FALSE .) ]
  ! MUTABLESETOF    [ reduce using rule 50 (expresion -> FALSE .) ]
  ! FOR             [ reduce using rule 50 (expresion -> FALSE .) ]
  ! WHILE           [ reduce using rule 50 (expresion -> FALSE .) ]
  ! IF              [ reduce using rule 50 (expresion -> FALSE .) ]
  ! DO              [ reduce using rule 50 (expresion -> FALSE .) ]
  ! VAL             [ reduce using rule 50 (expresion -> FALSE .) ]
  ! VAR             [ reduce using rule 50 (expresion -> FALSE .) ]
  ! FUN             [ reduce using rule 50 (expresion -> FALSE .) ]
  ! RETURN          [ reduce using rule 50 (expresion -> FALSE .) ]
  ! CLASS           [ reduce using rule 50 (expresion -> FALSE .) ]
  ! OPEN            [ reduce using rule 50 (expresion -> FALSE .) ]
  ! $end            [ reduce using rule 50 (expresion -> FALSE .) ]
  ! RLLAVE          [ reduce using rule 50 (expresion -> FALSE .) ]


state 86

    (84) objetoRetorno -> estructura .

    CONTINUE        reduce using rule 84 (objetoRetorno -> estructura .)
    BREAK           reduce using rule 84 (objetoRetorno -> estructura .)
    VARIABLE        reduce using rule 84 (objetoRetorno -> estructura .)
    PRINT           reduce using rule 84 (objetoRetorno -> estructura .)
    LPAREN          reduce using rule 84 (objetoRetorno -> estructura .)
    NUMBER          reduce using rule 84 (objetoRetorno -> estructura .)
    FLOAT           reduce using rule 84 (objetoRetorno -> estructura .)
    TRUE            reduce using rule 84 (objetoRetorno -> estructura .)
    FALSE           reduce using rule 84 (objetoRetorno -> estructura .)
    NOT             reduce using rule 84 (objetoRetorno -> estructura .)
    LISTOF          reduce using rule 84 (objetoRetorno -> estructura .)
    MUTABLELISTOF   reduce using rule 84 (objetoRetorno -> estructura .)
    MAPOF           reduce using rule 84 (objetoRetorno -> estructura .)
    MUTABLEMAPOF    reduce using rule 84 (objetoRetorno -> estructura .)
    SETOF           reduce using rule 84 (objetoRetorno -> estructura .)
    MUTABLESETOF    reduce using rule 84 (objetoRetorno -> estructura .)
    FOR             reduce using rule 84 (objetoRetorno -> estructura .)
    WHILE           reduce using rule 84 (objetoRetorno -> estructura .)
    IF              reduce using rule 84 (objetoRetorno -> estructura .)
    DO              reduce using rule 84 (objetoRetorno -> estructura .)
    VAL             reduce using rule 84 (objetoRetorno -> estructura .)
    VAR             reduce using rule 84 (objetoRetorno -> estructura .)
    FUN             reduce using rule 84 (objetoRetorno -> estructura .)
    RETURN          reduce using rule 84 (objetoRetorno -> estructura .)
    CLASS           reduce using rule 84 (objetoRetorno -> estructura .)
    OPEN            reduce using rule 84 (objetoRetorno -> estructura .)
    $end            reduce using rule 84 (objetoRetorno -> estructura .)
    RLLAVE          reduce using rule 84 (objetoRetorno -> estructura .)


state 87

    (85) objetoRetorno -> empty .

    CONTINUE        reduce using rule 85 (objetoRetorno -> empty .)
    BREAK           reduce using rule 85 (objetoRetorno -> empty .)
    VARIABLE        reduce using rule 85 (objetoRetorno -> empty .)
    PRINT           reduce using rule 85 (objetoRetorno -> empty .)
    LPAREN          reduce using rule 85 (objetoRetorno -> empty .)
    NUMBER          reduce using rule 85 (objetoRetorno -> empty .)
    FLOAT           reduce using rule 85 (objetoRetorno -> empty .)
    TRUE            reduce using rule 85 (objetoRetorno -> empty .)
    FALSE           reduce using rule 85 (objetoRetorno -> empty .)
    NOT             reduce using rule 85 (objetoRetorno -> empty .)
    LISTOF          reduce using rule 85 (objetoRetorno -> empty .)
    MUTABLELISTOF   reduce using rule 85 (objetoRetorno -> empty .)
    MAPOF           reduce using rule 85 (objetoRetorno -> empty .)
    MUTABLEMAPOF    reduce using rule 85 (objetoRetorno -> empty .)
    SETOF           reduce using rule 85 (objetoRetorno -> empty .)
    MUTABLESETOF    reduce using rule 85 (objetoRetorno -> empty .)
    FOR             reduce using rule 85 (objetoRetorno -> empty .)
    WHILE           reduce using rule 85 (objetoRetorno -> empty .)
    IF              reduce using rule 85 (objetoRetorno -> empty .)
    DO              reduce using rule 85 (objetoRetorno -> empty .)
    VAL             reduce using rule 85 (objetoRetorno -> empty .)
    VAR             reduce using rule 85 (objetoRetorno -> empty .)
    FUN             reduce using rule 85 (objetoRetorno -> empty .)
    RETURN          reduce using rule 85 (objetoRetorno -> empty .)
    CLASS           reduce using rule 85 (objetoRetorno -> empty .)
    OPEN            reduce using rule 85 (objetoRetorno -> empty .)
    $end            reduce using rule 85 (objetoRetorno -> empty .)
    RLLAVE          reduce using rule 85 (objetoRetorno -> empty .)


state 88

    (32) valor -> NUMBER .
    (47) expresion -> NUMBER .

  ! reduce/reduce conflict for CONTINUE resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for BREAK resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for PRINT resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for NUMBER resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for FLOAT resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for TRUE resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for FALSE resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for NOT resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for LISTOF resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for MAPOF resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for SETOF resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for FOR resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for WHILE resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for IF resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for DO resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for VAL resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for VAR resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for FUN resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for RETURN resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for CLASS resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for OPEN resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for $end resolved using rule 32 (valor -> NUMBER .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 32 (valor -> NUMBER .)
    CONTINUE        reduce using rule 32 (valor -> NUMBER .)
    BREAK           reduce using rule 32 (valor -> NUMBER .)
    VARIABLE        reduce using rule 32 (valor -> NUMBER .)
    PRINT           reduce using rule 32 (valor -> NUMBER .)
    LPAREN          reduce using rule 32 (valor -> NUMBER .)
    NUMBER          reduce using rule 32 (valor -> NUMBER .)
    FLOAT           reduce using rule 32 (valor -> NUMBER .)
    TRUE            reduce using rule 32 (valor -> NUMBER .)
    FALSE           reduce using rule 32 (valor -> NUMBER .)
    NOT             reduce using rule 32 (valor -> NUMBER .)
    LISTOF          reduce using rule 32 (valor -> NUMBER .)
    MUTABLELISTOF   reduce using rule 32 (valor -> NUMBER .)
    MAPOF           reduce using rule 32 (valor -> NUMBER .)
    MUTABLEMAPOF    reduce using rule 32 (valor -> NUMBER .)
    SETOF           reduce using rule 32 (valor -> NUMBER .)
    MUTABLESETOF    reduce using rule 32 (valor -> NUMBER .)
    FOR             reduce using rule 32 (valor -> NUMBER .)
    WHILE           reduce using rule 32 (valor -> NUMBER .)
    IF              reduce using rule 32 (valor -> NUMBER .)
    DO              reduce using rule 32 (valor -> NUMBER .)
    VAL             reduce using rule 32 (valor -> NUMBER .)
    VAR             reduce using rule 32 (valor -> NUMBER .)
    FUN             reduce using rule 32 (valor -> NUMBER .)
    RETURN          reduce using rule 32 (valor -> NUMBER .)
    CLASS           reduce using rule 32 (valor -> NUMBER .)
    OPEN            reduce using rule 32 (valor -> NUMBER .)
    $end            reduce using rule 32 (valor -> NUMBER .)
    RLLAVE          reduce using rule 32 (valor -> NUMBER .)
    GREATER         reduce using rule 47 (expresion -> NUMBER .)
    LESS            reduce using rule 47 (expresion -> NUMBER .)
    GREATER_EQUALS  reduce using rule 47 (expresion -> NUMBER .)
    LESS_EQUALS     reduce using rule 47 (expresion -> NUMBER .)
    EQUALS          reduce using rule 47 (expresion -> NUMBER .)
    NOT_EQUALS      reduce using rule 47 (expresion -> NUMBER .)
    PLUS            reduce using rule 47 (expresion -> NUMBER .)
    MINUS           reduce using rule 47 (expresion -> NUMBER .)
    TIMES           reduce using rule 47 (expresion -> NUMBER .)
    DIVIDE          reduce using rule 47 (expresion -> NUMBER .)
    MOD             reduce using rule 47 (expresion -> NUMBER .)

  ! CONTINUE        [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! BREAK           [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! VARIABLE        [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! PRINT           [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! LPAREN          [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! NUMBER          [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! FLOAT           [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! TRUE            [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! FALSE           [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! NOT             [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! LISTOF          [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! MUTABLELISTOF   [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! MAPOF           [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! MUTABLEMAPOF    [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! SETOF           [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! MUTABLESETOF    [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! FOR             [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! WHILE           [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! IF              [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! DO              [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! VAL             [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! VAR             [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! FUN             [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! RETURN          [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! CLASS           [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! OPEN            [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! $end            [ reduce using rule 47 (expresion -> NUMBER .) ]
  ! RLLAVE          [ reduce using rule 47 (expresion -> NUMBER .) ]


state 89

    (33) valor -> FLOAT .
    (48) expresion -> FLOAT .

  ! reduce/reduce conflict for CONTINUE resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for BREAK resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for PRINT resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for LPAREN resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for NUMBER resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for FLOAT resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for TRUE resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for FALSE resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for NOT resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for LISTOF resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for MAPOF resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for SETOF resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for FOR resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for WHILE resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for IF resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for DO resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for VAL resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for VAR resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for FUN resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for RETURN resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for CLASS resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for OPEN resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for $end resolved using rule 33 (valor -> FLOAT .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 33 (valor -> FLOAT .)
    CONTINUE        reduce using rule 33 (valor -> FLOAT .)
    BREAK           reduce using rule 33 (valor -> FLOAT .)
    VARIABLE        reduce using rule 33 (valor -> FLOAT .)
    PRINT           reduce using rule 33 (valor -> FLOAT .)
    LPAREN          reduce using rule 33 (valor -> FLOAT .)
    NUMBER          reduce using rule 33 (valor -> FLOAT .)
    FLOAT           reduce using rule 33 (valor -> FLOAT .)
    TRUE            reduce using rule 33 (valor -> FLOAT .)
    FALSE           reduce using rule 33 (valor -> FLOAT .)
    NOT             reduce using rule 33 (valor -> FLOAT .)
    LISTOF          reduce using rule 33 (valor -> FLOAT .)
    MUTABLELISTOF   reduce using rule 33 (valor -> FLOAT .)
    MAPOF           reduce using rule 33 (valor -> FLOAT .)
    MUTABLEMAPOF    reduce using rule 33 (valor -> FLOAT .)
    SETOF           reduce using rule 33 (valor -> FLOAT .)
    MUTABLESETOF    reduce using rule 33 (valor -> FLOAT .)
    FOR             reduce using rule 33 (valor -> FLOAT .)
    WHILE           reduce using rule 33 (valor -> FLOAT .)
    IF              reduce using rule 33 (valor -> FLOAT .)
    DO              reduce using rule 33 (valor -> FLOAT .)
    VAL             reduce using rule 33 (valor -> FLOAT .)
    VAR             reduce using rule 33 (valor -> FLOAT .)
    FUN             reduce using rule 33 (valor -> FLOAT .)
    RETURN          reduce using rule 33 (valor -> FLOAT .)
    CLASS           reduce using rule 33 (valor -> FLOAT .)
    OPEN            reduce using rule 33 (valor -> FLOAT .)
    $end            reduce using rule 33 (valor -> FLOAT .)
    RLLAVE          reduce using rule 33 (valor -> FLOAT .)
    GREATER         reduce using rule 48 (expresion -> FLOAT .)
    LESS            reduce using rule 48 (expresion -> FLOAT .)
    GREATER_EQUALS  reduce using rule 48 (expresion -> FLOAT .)
    LESS_EQUALS     reduce using rule 48 (expresion -> FLOAT .)
    EQUALS          reduce using rule 48 (expresion -> FLOAT .)
    NOT_EQUALS      reduce using rule 48 (expresion -> FLOAT .)
    PLUS            reduce using rule 48 (expresion -> FLOAT .)
    MINUS           reduce using rule 48 (expresion -> FLOAT .)
    TIMES           reduce using rule 48 (expresion -> FLOAT .)
    DIVIDE          reduce using rule 48 (expresion -> FLOAT .)
    MOD             reduce using rule 48 (expresion -> FLOAT .)

  ! CONTINUE        [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! BREAK           [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! VARIABLE        [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! PRINT           [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! LPAREN          [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! NUMBER          [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! FLOAT           [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! TRUE            [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! FALSE           [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! NOT             [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! LISTOF          [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! MUTABLELISTOF   [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! MAPOF           [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! MUTABLEMAPOF    [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! SETOF           [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! MUTABLESETOF    [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! FOR             [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! WHILE           [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! IF              [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! DO              [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! VAL             [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! VAR             [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! FUN             [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! RETURN          [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! CLASS           [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! OPEN            [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! $end            [ reduce using rule 48 (expresion -> FLOAT .) ]
  ! RLLAVE          [ reduce using rule 48 (expresion -> FLOAT .) ]


state 90

    (34) valor -> VARIABLE .
    (52) expresion -> VARIABLE .

  ! reduce/reduce conflict for CONTINUE resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BREAK resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for TRUE resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FALSE resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SETOF resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FOR resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAL resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUN resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RETURN resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for CLASS resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OPEN resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 34 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 34 (valor -> VARIABLE .)
    CONTINUE        reduce using rule 34 (valor -> VARIABLE .)
    BREAK           reduce using rule 34 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 34 (valor -> VARIABLE .)
    PRINT           reduce using rule 34 (valor -> VARIABLE .)
    LPAREN          reduce using rule 34 (valor -> VARIABLE .)
    NUMBER          reduce using rule 34 (valor -> VARIABLE .)
    FLOAT           reduce using rule 34 (valor -> VARIABLE .)
    TRUE            reduce using rule 34 (valor -> VARIABLE .)
    FALSE           reduce using rule 34 (valor -> VARIABLE .)
    NOT             reduce using rule 34 (valor -> VARIABLE .)
    LISTOF          reduce using rule 34 (valor -> VARIABLE .)
    MUTABLELISTOF   reduce using rule 34 (valor -> VARIABLE .)
    MAPOF           reduce using rule 34 (valor -> VARIABLE .)
    MUTABLEMAPOF    reduce using rule 34 (valor -> VARIABLE .)
    SETOF           reduce using rule 34 (valor -> VARIABLE .)
    MUTABLESETOF    reduce using rule 34 (valor -> VARIABLE .)
    FOR             reduce using rule 34 (valor -> VARIABLE .)
    WHILE           reduce using rule 34 (valor -> VARIABLE .)
    IF              reduce using rule 34 (valor -> VARIABLE .)
    DO              reduce using rule 34 (valor -> VARIABLE .)
    VAL             reduce using rule 34 (valor -> VARIABLE .)
    VAR             reduce using rule 34 (valor -> VARIABLE .)
    FUN             reduce using rule 34 (valor -> VARIABLE .)
    RETURN          reduce using rule 34 (valor -> VARIABLE .)
    CLASS           reduce using rule 34 (valor -> VARIABLE .)
    OPEN            reduce using rule 34 (valor -> VARIABLE .)
    $end            reduce using rule 34 (valor -> VARIABLE .)
    RLLAVE          reduce using rule 34 (valor -> VARIABLE .)
    GREATER         reduce using rule 52 (expresion -> VARIABLE .)
    LESS            reduce using rule 52 (expresion -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 52 (expresion -> VARIABLE .)
    LESS_EQUALS     reduce using rule 52 (expresion -> VARIABLE .)
    EQUALS          reduce using rule 52 (expresion -> VARIABLE .)
    NOT_EQUALS      reduce using rule 52 (expresion -> VARIABLE .)
    PLUS            reduce using rule 52 (expresion -> VARIABLE .)
    MINUS           reduce using rule 52 (expresion -> VARIABLE .)
    TIMES           reduce using rule 52 (expresion -> VARIABLE .)
    DIVIDE          reduce using rule 52 (expresion -> VARIABLE .)
    MOD             reduce using rule 52 (expresion -> VARIABLE .)

  ! CONTINUE        [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! BREAK           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! LPAREN          [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! NUMBER          [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! FLOAT           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! TRUE            [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! FALSE           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! NOT             [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! LISTOF          [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! MUTABLELISTOF   [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! MAPOF           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! SETOF           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! MUTABLESETOF    [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! FOR             [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! IF              [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! DO              [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! VAL             [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! VAR             [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! FUN             [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! RETURN          [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! CLASS           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! OPEN            [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! $end            [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! RLLAVE          [ reduce using rule 52 (expresion -> VARIABLE .) ]


state 91

    (35) valor -> STRING .

    CONTINUE        reduce using rule 35 (valor -> STRING .)
    BREAK           reduce using rule 35 (valor -> STRING .)
    VARIABLE        reduce using rule 35 (valor -> STRING .)
    PRINT           reduce using rule 35 (valor -> STRING .)
    LPAREN          reduce using rule 35 (valor -> STRING .)
    NUMBER          reduce using rule 35 (valor -> STRING .)
    FLOAT           reduce using rule 35 (valor -> STRING .)
    TRUE            reduce using rule 35 (valor -> STRING .)
    FALSE           reduce using rule 35 (valor -> STRING .)
    NOT             reduce using rule 35 (valor -> STRING .)
    LISTOF          reduce using rule 35 (valor -> STRING .)
    MUTABLELISTOF   reduce using rule 35 (valor -> STRING .)
    MAPOF           reduce using rule 35 (valor -> STRING .)
    MUTABLEMAPOF    reduce using rule 35 (valor -> STRING .)
    SETOF           reduce using rule 35 (valor -> STRING .)
    MUTABLESETOF    reduce using rule 35 (valor -> STRING .)
    FOR             reduce using rule 35 (valor -> STRING .)
    WHILE           reduce using rule 35 (valor -> STRING .)
    IF              reduce using rule 35 (valor -> STRING .)
    DO              reduce using rule 35 (valor -> STRING .)
    VAL             reduce using rule 35 (valor -> STRING .)
    VAR             reduce using rule 35 (valor -> STRING .)
    FUN             reduce using rule 35 (valor -> STRING .)
    RETURN          reduce using rule 35 (valor -> STRING .)
    CLASS           reduce using rule 35 (valor -> STRING .)
    OPEN            reduce using rule 35 (valor -> STRING .)
    $end            reduce using rule 35 (valor -> STRING .)
    RLLAVE          reduce using rule 35 (valor -> STRING .)
    COMMA           reduce using rule 35 (valor -> STRING .)
    RPAREN          reduce using rule 35 (valor -> STRING .)
    TO_FROM_KV      reduce using rule 35 (valor -> STRING .)
    CONSTRUCTOR     reduce using rule 35 (valor -> STRING .)
    RANGE_TO        reduce using rule 35 (valor -> STRING .)
    THIS            reduce using rule 35 (valor -> STRING .)


state 92

    (112) clase -> CLASS VARIABLE . LLLAVE sentencias RLLAVE
    (113) clase -> CLASS VARIABLE . LLLAVE RLLAVE
    (116) clase -> CLASS VARIABLE . COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> CLASS VARIABLE . COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> CLASS VARIABLE . LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> CLASS VARIABLE . LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> CLASS VARIABLE . LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

    LLLAVE          shift and go to state 144
    COLON           shift and go to state 145
    LPAREN          shift and go to state 146


state 93

    (114) clase -> OPEN CLASS . VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> OPEN CLASS . VARIABLE LLLAVE RLLAVE

    VARIABLE        shift and go to state 147


state 94

    (41) expresion -> expresion PLUS expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    CONTINUE        reduce using rule 41 (expresion -> expresion PLUS expresion .)
    BREAK           reduce using rule 41 (expresion -> expresion PLUS expresion .)
    VARIABLE        reduce using rule 41 (expresion -> expresion PLUS expresion .)
    PRINT           reduce using rule 41 (expresion -> expresion PLUS expresion .)
    LPAREN          reduce using rule 41 (expresion -> expresion PLUS expresion .)
    NUMBER          reduce using rule 41 (expresion -> expresion PLUS expresion .)
    FLOAT           reduce using rule 41 (expresion -> expresion PLUS expresion .)
    TRUE            reduce using rule 41 (expresion -> expresion PLUS expresion .)
    FALSE           reduce using rule 41 (expresion -> expresion PLUS expresion .)
    NOT             reduce using rule 41 (expresion -> expresion PLUS expresion .)
    LISTOF          reduce using rule 41 (expresion -> expresion PLUS expresion .)
    MUTABLELISTOF   reduce using rule 41 (expresion -> expresion PLUS expresion .)
    MAPOF           reduce using rule 41 (expresion -> expresion PLUS expresion .)
    MUTABLEMAPOF    reduce using rule 41 (expresion -> expresion PLUS expresion .)
    SETOF           reduce using rule 41 (expresion -> expresion PLUS expresion .)
    MUTABLESETOF    reduce using rule 41 (expresion -> expresion PLUS expresion .)
    FOR             reduce using rule 41 (expresion -> expresion PLUS expresion .)
    WHILE           reduce using rule 41 (expresion -> expresion PLUS expresion .)
    IF              reduce using rule 41 (expresion -> expresion PLUS expresion .)
    DO              reduce using rule 41 (expresion -> expresion PLUS expresion .)
    VAL             reduce using rule 41 (expresion -> expresion PLUS expresion .)
    VAR             reduce using rule 41 (expresion -> expresion PLUS expresion .)
    FUN             reduce using rule 41 (expresion -> expresion PLUS expresion .)
    RETURN          reduce using rule 41 (expresion -> expresion PLUS expresion .)
    CLASS           reduce using rule 41 (expresion -> expresion PLUS expresion .)
    OPEN            reduce using rule 41 (expresion -> expresion PLUS expresion .)
    $end            reduce using rule 41 (expresion -> expresion PLUS expresion .)
    RPAREN          reduce using rule 41 (expresion -> expresion PLUS expresion .)
    AND             reduce using rule 41 (expresion -> expresion PLUS expresion .)
    OR              reduce using rule 41 (expresion -> expresion PLUS expresion .)
    LLLAVE          reduce using rule 41 (expresion -> expresion PLUS expresion .)
    RLLAVE          reduce using rule 41 (expresion -> expresion PLUS expresion .)
    CONSTRUCTOR     reduce using rule 41 (expresion -> expresion PLUS expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53

  ! PLUS            [ reduce using rule 41 (expresion -> expresion PLUS expresion .) ]
  ! MINUS           [ reduce using rule 41 (expresion -> expresion PLUS expresion .) ]
  ! TIMES           [ reduce using rule 41 (expresion -> expresion PLUS expresion .) ]
  ! DIVIDE          [ reduce using rule 41 (expresion -> expresion PLUS expresion .) ]
  ! MOD             [ reduce using rule 41 (expresion -> expresion PLUS expresion .) ]
  ! GREATER         [ reduce using rule 41 (expresion -> expresion PLUS expresion .) ]
  ! LESS            [ reduce using rule 41 (expresion -> expresion PLUS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 41 (expresion -> expresion PLUS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 41 (expresion -> expresion PLUS expresion .) ]
  ! EQUALS          [ reduce using rule 41 (expresion -> expresion PLUS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 41 (expresion -> expresion PLUS expresion .) ]


state 95

    (51) expresion -> condicion .
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CONTINUE        reduce using rule 51 (expresion -> condicion .)
    BREAK           reduce using rule 51 (expresion -> condicion .)
    VARIABLE        reduce using rule 51 (expresion -> condicion .)
    PRINT           reduce using rule 51 (expresion -> condicion .)
    LPAREN          reduce using rule 51 (expresion -> condicion .)
    NUMBER          reduce using rule 51 (expresion -> condicion .)
    FLOAT           reduce using rule 51 (expresion -> condicion .)
    TRUE            reduce using rule 51 (expresion -> condicion .)
    FALSE           reduce using rule 51 (expresion -> condicion .)
    NOT             reduce using rule 51 (expresion -> condicion .)
    LISTOF          reduce using rule 51 (expresion -> condicion .)
    MUTABLELISTOF   reduce using rule 51 (expresion -> condicion .)
    MAPOF           reduce using rule 51 (expresion -> condicion .)
    MUTABLEMAPOF    reduce using rule 51 (expresion -> condicion .)
    SETOF           reduce using rule 51 (expresion -> condicion .)
    MUTABLESETOF    reduce using rule 51 (expresion -> condicion .)
    FOR             reduce using rule 51 (expresion -> condicion .)
    WHILE           reduce using rule 51 (expresion -> condicion .)
    IF              reduce using rule 51 (expresion -> condicion .)
    DO              reduce using rule 51 (expresion -> condicion .)
    VAL             reduce using rule 51 (expresion -> condicion .)
    VAR             reduce using rule 51 (expresion -> condicion .)
    FUN             reduce using rule 51 (expresion -> condicion .)
    RETURN          reduce using rule 51 (expresion -> condicion .)
    CLASS           reduce using rule 51 (expresion -> condicion .)
    OPEN            reduce using rule 51 (expresion -> condicion .)
    $end            reduce using rule 51 (expresion -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    RPAREN          reduce using rule 51 (expresion -> condicion .)
    LLLAVE          reduce using rule 51 (expresion -> condicion .)
    RLLAVE          reduce using rule 51 (expresion -> condicion .)
    CONSTRUCTOR     reduce using rule 51 (expresion -> condicion .)
    AND             shift and go to state 54
    OR              shift and go to state 55

  ! AND             [ reduce using rule 51 (expresion -> condicion .) ]
  ! OR              [ reduce using rule 51 (expresion -> condicion .) ]


state 96

    (42) expresion -> expresion MINUS expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    CONTINUE        reduce using rule 42 (expresion -> expresion MINUS expresion .)
    BREAK           reduce using rule 42 (expresion -> expresion MINUS expresion .)
    VARIABLE        reduce using rule 42 (expresion -> expresion MINUS expresion .)
    PRINT           reduce using rule 42 (expresion -> expresion MINUS expresion .)
    LPAREN          reduce using rule 42 (expresion -> expresion MINUS expresion .)
    NUMBER          reduce using rule 42 (expresion -> expresion MINUS expresion .)
    FLOAT           reduce using rule 42 (expresion -> expresion MINUS expresion .)
    TRUE            reduce using rule 42 (expresion -> expresion MINUS expresion .)
    FALSE           reduce using rule 42 (expresion -> expresion MINUS expresion .)
    NOT             reduce using rule 42 (expresion -> expresion MINUS expresion .)
    LISTOF          reduce using rule 42 (expresion -> expresion MINUS expresion .)
    MUTABLELISTOF   reduce using rule 42 (expresion -> expresion MINUS expresion .)
    MAPOF           reduce using rule 42 (expresion -> expresion MINUS expresion .)
    MUTABLEMAPOF    reduce using rule 42 (expresion -> expresion MINUS expresion .)
    SETOF           reduce using rule 42 (expresion -> expresion MINUS expresion .)
    MUTABLESETOF    reduce using rule 42 (expresion -> expresion MINUS expresion .)
    FOR             reduce using rule 42 (expresion -> expresion MINUS expresion .)
    WHILE           reduce using rule 42 (expresion -> expresion MINUS expresion .)
    IF              reduce using rule 42 (expresion -> expresion MINUS expresion .)
    DO              reduce using rule 42 (expresion -> expresion MINUS expresion .)
    VAL             reduce using rule 42 (expresion -> expresion MINUS expresion .)
    VAR             reduce using rule 42 (expresion -> expresion MINUS expresion .)
    FUN             reduce using rule 42 (expresion -> expresion MINUS expresion .)
    RETURN          reduce using rule 42 (expresion -> expresion MINUS expresion .)
    CLASS           reduce using rule 42 (expresion -> expresion MINUS expresion .)
    OPEN            reduce using rule 42 (expresion -> expresion MINUS expresion .)
    $end            reduce using rule 42 (expresion -> expresion MINUS expresion .)
    RPAREN          reduce using rule 42 (expresion -> expresion MINUS expresion .)
    AND             reduce using rule 42 (expresion -> expresion MINUS expresion .)
    OR              reduce using rule 42 (expresion -> expresion MINUS expresion .)
    LLLAVE          reduce using rule 42 (expresion -> expresion MINUS expresion .)
    RLLAVE          reduce using rule 42 (expresion -> expresion MINUS expresion .)
    CONSTRUCTOR     reduce using rule 42 (expresion -> expresion MINUS expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53

  ! PLUS            [ reduce using rule 42 (expresion -> expresion MINUS expresion .) ]
  ! MINUS           [ reduce using rule 42 (expresion -> expresion MINUS expresion .) ]
  ! TIMES           [ reduce using rule 42 (expresion -> expresion MINUS expresion .) ]
  ! DIVIDE          [ reduce using rule 42 (expresion -> expresion MINUS expresion .) ]
  ! MOD             [ reduce using rule 42 (expresion -> expresion MINUS expresion .) ]
  ! GREATER         [ reduce using rule 42 (expresion -> expresion MINUS expresion .) ]
  ! LESS            [ reduce using rule 42 (expresion -> expresion MINUS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 42 (expresion -> expresion MINUS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 42 (expresion -> expresion MINUS expresion .) ]
  ! EQUALS          [ reduce using rule 42 (expresion -> expresion MINUS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 42 (expresion -> expresion MINUS expresion .) ]


state 97

    (43) expresion -> expresion TIMES expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    CONTINUE        reduce using rule 43 (expresion -> expresion TIMES expresion .)
    BREAK           reduce using rule 43 (expresion -> expresion TIMES expresion .)
    VARIABLE        reduce using rule 43 (expresion -> expresion TIMES expresion .)
    PRINT           reduce using rule 43 (expresion -> expresion TIMES expresion .)
    LPAREN          reduce using rule 43 (expresion -> expresion TIMES expresion .)
    NUMBER          reduce using rule 43 (expresion -> expresion TIMES expresion .)
    FLOAT           reduce using rule 43 (expresion -> expresion TIMES expresion .)
    TRUE            reduce using rule 43 (expresion -> expresion TIMES expresion .)
    FALSE           reduce using rule 43 (expresion -> expresion TIMES expresion .)
    NOT             reduce using rule 43 (expresion -> expresion TIMES expresion .)
    LISTOF          reduce using rule 43 (expresion -> expresion TIMES expresion .)
    MUTABLELISTOF   reduce using rule 43 (expresion -> expresion TIMES expresion .)
    MAPOF           reduce using rule 43 (expresion -> expresion TIMES expresion .)
    MUTABLEMAPOF    reduce using rule 43 (expresion -> expresion TIMES expresion .)
    SETOF           reduce using rule 43 (expresion -> expresion TIMES expresion .)
    MUTABLESETOF    reduce using rule 43 (expresion -> expresion TIMES expresion .)
    FOR             reduce using rule 43 (expresion -> expresion TIMES expresion .)
    WHILE           reduce using rule 43 (expresion -> expresion TIMES expresion .)
    IF              reduce using rule 43 (expresion -> expresion TIMES expresion .)
    DO              reduce using rule 43 (expresion -> expresion TIMES expresion .)
    VAL             reduce using rule 43 (expresion -> expresion TIMES expresion .)
    VAR             reduce using rule 43 (expresion -> expresion TIMES expresion .)
    FUN             reduce using rule 43 (expresion -> expresion TIMES expresion .)
    RETURN          reduce using rule 43 (expresion -> expresion TIMES expresion .)
    CLASS           reduce using rule 43 (expresion -> expresion TIMES expresion .)
    OPEN            reduce using rule 43 (expresion -> expresion TIMES expresion .)
    $end            reduce using rule 43 (expresion -> expresion TIMES expresion .)
    RPAREN          reduce using rule 43 (expresion -> expresion TIMES expresion .)
    AND             reduce using rule 43 (expresion -> expresion TIMES expresion .)
    OR              reduce using rule 43 (expresion -> expresion TIMES expresion .)
    LLLAVE          reduce using rule 43 (expresion -> expresion TIMES expresion .)
    RLLAVE          reduce using rule 43 (expresion -> expresion TIMES expresion .)
    CONSTRUCTOR     reduce using rule 43 (expresion -> expresion TIMES expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53

  ! PLUS            [ reduce using rule 43 (expresion -> expresion TIMES expresion .) ]
  ! MINUS           [ reduce using rule 43 (expresion -> expresion TIMES expresion .) ]
  ! TIMES           [ reduce using rule 43 (expresion -> expresion TIMES expresion .) ]
  ! DIVIDE          [ reduce using rule 43 (expresion -> expresion TIMES expresion .) ]
  ! MOD             [ reduce using rule 43 (expresion -> expresion TIMES expresion .) ]
  ! GREATER         [ reduce using rule 43 (expresion -> expresion TIMES expresion .) ]
  ! LESS            [ reduce using rule 43 (expresion -> expresion TIMES expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 43 (expresion -> expresion TIMES expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 43 (expresion -> expresion TIMES expresion .) ]
  ! EQUALS          [ reduce using rule 43 (expresion -> expresion TIMES expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 43 (expresion -> expresion TIMES expresion .) ]


state 98

    (44) expresion -> expresion DIVIDE expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    CONTINUE        reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    BREAK           reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    VARIABLE        reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    PRINT           reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    LPAREN          reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    NUMBER          reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    FLOAT           reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    TRUE            reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    FALSE           reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    NOT             reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    LISTOF          reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    MUTABLELISTOF   reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    MAPOF           reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    MUTABLEMAPOF    reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    SETOF           reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    MUTABLESETOF    reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    FOR             reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    WHILE           reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    IF              reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    DO              reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    VAL             reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    VAR             reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    FUN             reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    RETURN          reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    CLASS           reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    OPEN            reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    $end            reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    RPAREN          reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    AND             reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    OR              reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    LLLAVE          reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    RLLAVE          reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    CONSTRUCTOR     reduce using rule 44 (expresion -> expresion DIVIDE expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53

  ! PLUS            [ reduce using rule 44 (expresion -> expresion DIVIDE expresion .) ]
  ! MINUS           [ reduce using rule 44 (expresion -> expresion DIVIDE expresion .) ]
  ! TIMES           [ reduce using rule 44 (expresion -> expresion DIVIDE expresion .) ]
  ! DIVIDE          [ reduce using rule 44 (expresion -> expresion DIVIDE expresion .) ]
  ! MOD             [ reduce using rule 44 (expresion -> expresion DIVIDE expresion .) ]
  ! GREATER         [ reduce using rule 44 (expresion -> expresion DIVIDE expresion .) ]
  ! LESS            [ reduce using rule 44 (expresion -> expresion DIVIDE expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 44 (expresion -> expresion DIVIDE expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 44 (expresion -> expresion DIVIDE expresion .) ]
  ! EQUALS          [ reduce using rule 44 (expresion -> expresion DIVIDE expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 44 (expresion -> expresion DIVIDE expresion .) ]


state 99

    (45) expresion -> expresion MOD expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    CONTINUE        reduce using rule 45 (expresion -> expresion MOD expresion .)
    BREAK           reduce using rule 45 (expresion -> expresion MOD expresion .)
    VARIABLE        reduce using rule 45 (expresion -> expresion MOD expresion .)
    PRINT           reduce using rule 45 (expresion -> expresion MOD expresion .)
    LPAREN          reduce using rule 45 (expresion -> expresion MOD expresion .)
    NUMBER          reduce using rule 45 (expresion -> expresion MOD expresion .)
    FLOAT           reduce using rule 45 (expresion -> expresion MOD expresion .)
    TRUE            reduce using rule 45 (expresion -> expresion MOD expresion .)
    FALSE           reduce using rule 45 (expresion -> expresion MOD expresion .)
    NOT             reduce using rule 45 (expresion -> expresion MOD expresion .)
    LISTOF          reduce using rule 45 (expresion -> expresion MOD expresion .)
    MUTABLELISTOF   reduce using rule 45 (expresion -> expresion MOD expresion .)
    MAPOF           reduce using rule 45 (expresion -> expresion MOD expresion .)
    MUTABLEMAPOF    reduce using rule 45 (expresion -> expresion MOD expresion .)
    SETOF           reduce using rule 45 (expresion -> expresion MOD expresion .)
    MUTABLESETOF    reduce using rule 45 (expresion -> expresion MOD expresion .)
    FOR             reduce using rule 45 (expresion -> expresion MOD expresion .)
    WHILE           reduce using rule 45 (expresion -> expresion MOD expresion .)
    IF              reduce using rule 45 (expresion -> expresion MOD expresion .)
    DO              reduce using rule 45 (expresion -> expresion MOD expresion .)
    VAL             reduce using rule 45 (expresion -> expresion MOD expresion .)
    VAR             reduce using rule 45 (expresion -> expresion MOD expresion .)
    FUN             reduce using rule 45 (expresion -> expresion MOD expresion .)
    RETURN          reduce using rule 45 (expresion -> expresion MOD expresion .)
    CLASS           reduce using rule 45 (expresion -> expresion MOD expresion .)
    OPEN            reduce using rule 45 (expresion -> expresion MOD expresion .)
    $end            reduce using rule 45 (expresion -> expresion MOD expresion .)
    RPAREN          reduce using rule 45 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 45 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 45 (expresion -> expresion MOD expresion .)
    LLLAVE          reduce using rule 45 (expresion -> expresion MOD expresion .)
    RLLAVE          reduce using rule 45 (expresion -> expresion MOD expresion .)
    CONSTRUCTOR     reduce using rule 45 (expresion -> expresion MOD expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53

  ! PLUS            [ reduce using rule 45 (expresion -> expresion MOD expresion .) ]
  ! MINUS           [ reduce using rule 45 (expresion -> expresion MOD expresion .) ]
  ! TIMES           [ reduce using rule 45 (expresion -> expresion MOD expresion .) ]
  ! DIVIDE          [ reduce using rule 45 (expresion -> expresion MOD expresion .) ]
  ! MOD             [ reduce using rule 45 (expresion -> expresion MOD expresion .) ]
  ! GREATER         [ reduce using rule 45 (expresion -> expresion MOD expresion .) ]
  ! LESS            [ reduce using rule 45 (expresion -> expresion MOD expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 45 (expresion -> expresion MOD expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 45 (expresion -> expresion MOD expresion .) ]
  ! EQUALS          [ reduce using rule 45 (expresion -> expresion MOD expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 45 (expresion -> expresion MOD expresion .) ]


state 100

    (53) condicion -> expresion GREATER expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 53 (condicion -> expresion GREATER expresion .)
    OR              reduce using rule 53 (condicion -> expresion GREATER expresion .)
    CONTINUE        reduce using rule 53 (condicion -> expresion GREATER expresion .)
    BREAK           reduce using rule 53 (condicion -> expresion GREATER expresion .)
    VARIABLE        reduce using rule 53 (condicion -> expresion GREATER expresion .)
    PRINT           reduce using rule 53 (condicion -> expresion GREATER expresion .)
    LPAREN          reduce using rule 53 (condicion -> expresion GREATER expresion .)
    NUMBER          reduce using rule 53 (condicion -> expresion GREATER expresion .)
    FLOAT           reduce using rule 53 (condicion -> expresion GREATER expresion .)
    TRUE            reduce using rule 53 (condicion -> expresion GREATER expresion .)
    FALSE           reduce using rule 53 (condicion -> expresion GREATER expresion .)
    NOT             reduce using rule 53 (condicion -> expresion GREATER expresion .)
    LISTOF          reduce using rule 53 (condicion -> expresion GREATER expresion .)
    MUTABLELISTOF   reduce using rule 53 (condicion -> expresion GREATER expresion .)
    MAPOF           reduce using rule 53 (condicion -> expresion GREATER expresion .)
    MUTABLEMAPOF    reduce using rule 53 (condicion -> expresion GREATER expresion .)
    SETOF           reduce using rule 53 (condicion -> expresion GREATER expresion .)
    MUTABLESETOF    reduce using rule 53 (condicion -> expresion GREATER expresion .)
    FOR             reduce using rule 53 (condicion -> expresion GREATER expresion .)
    WHILE           reduce using rule 53 (condicion -> expresion GREATER expresion .)
    IF              reduce using rule 53 (condicion -> expresion GREATER expresion .)
    DO              reduce using rule 53 (condicion -> expresion GREATER expresion .)
    VAL             reduce using rule 53 (condicion -> expresion GREATER expresion .)
    VAR             reduce using rule 53 (condicion -> expresion GREATER expresion .)
    FUN             reduce using rule 53 (condicion -> expresion GREATER expresion .)
    RETURN          reduce using rule 53 (condicion -> expresion GREATER expresion .)
    CLASS           reduce using rule 53 (condicion -> expresion GREATER expresion .)
    OPEN            reduce using rule 53 (condicion -> expresion GREATER expresion .)
    $end            reduce using rule 53 (condicion -> expresion GREATER expresion .)
    RPAREN          reduce using rule 53 (condicion -> expresion GREATER expresion .)
    LLLAVE          reduce using rule 53 (condicion -> expresion GREATER expresion .)
    RLLAVE          reduce using rule 53 (condicion -> expresion GREATER expresion .)
    CONSTRUCTOR     reduce using rule 53 (condicion -> expresion GREATER expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53

  ! PLUS            [ reduce using rule 53 (condicion -> expresion GREATER expresion .) ]
  ! MINUS           [ reduce using rule 53 (condicion -> expresion GREATER expresion .) ]
  ! TIMES           [ reduce using rule 53 (condicion -> expresion GREATER expresion .) ]
  ! DIVIDE          [ reduce using rule 53 (condicion -> expresion GREATER expresion .) ]
  ! MOD             [ reduce using rule 53 (condicion -> expresion GREATER expresion .) ]
  ! GREATER         [ reduce using rule 53 (condicion -> expresion GREATER expresion .) ]
  ! LESS            [ reduce using rule 53 (condicion -> expresion GREATER expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 53 (condicion -> expresion GREATER expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 53 (condicion -> expresion GREATER expresion .) ]
  ! EQUALS          [ reduce using rule 53 (condicion -> expresion GREATER expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 53 (condicion -> expresion GREATER expresion .) ]


state 101

    (54) condicion -> expresion LESS expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 54 (condicion -> expresion LESS expresion .)
    OR              reduce using rule 54 (condicion -> expresion LESS expresion .)
    CONTINUE        reduce using rule 54 (condicion -> expresion LESS expresion .)
    BREAK           reduce using rule 54 (condicion -> expresion LESS expresion .)
    VARIABLE        reduce using rule 54 (condicion -> expresion LESS expresion .)
    PRINT           reduce using rule 54 (condicion -> expresion LESS expresion .)
    LPAREN          reduce using rule 54 (condicion -> expresion LESS expresion .)
    NUMBER          reduce using rule 54 (condicion -> expresion LESS expresion .)
    FLOAT           reduce using rule 54 (condicion -> expresion LESS expresion .)
    TRUE            reduce using rule 54 (condicion -> expresion LESS expresion .)
    FALSE           reduce using rule 54 (condicion -> expresion LESS expresion .)
    NOT             reduce using rule 54 (condicion -> expresion LESS expresion .)
    LISTOF          reduce using rule 54 (condicion -> expresion LESS expresion .)
    MUTABLELISTOF   reduce using rule 54 (condicion -> expresion LESS expresion .)
    MAPOF           reduce using rule 54 (condicion -> expresion LESS expresion .)
    MUTABLEMAPOF    reduce using rule 54 (condicion -> expresion LESS expresion .)
    SETOF           reduce using rule 54 (condicion -> expresion LESS expresion .)
    MUTABLESETOF    reduce using rule 54 (condicion -> expresion LESS expresion .)
    FOR             reduce using rule 54 (condicion -> expresion LESS expresion .)
    WHILE           reduce using rule 54 (condicion -> expresion LESS expresion .)
    IF              reduce using rule 54 (condicion -> expresion LESS expresion .)
    DO              reduce using rule 54 (condicion -> expresion LESS expresion .)
    VAL             reduce using rule 54 (condicion -> expresion LESS expresion .)
    VAR             reduce using rule 54 (condicion -> expresion LESS expresion .)
    FUN             reduce using rule 54 (condicion -> expresion LESS expresion .)
    RETURN          reduce using rule 54 (condicion -> expresion LESS expresion .)
    CLASS           reduce using rule 54 (condicion -> expresion LESS expresion .)
    OPEN            reduce using rule 54 (condicion -> expresion LESS expresion .)
    $end            reduce using rule 54 (condicion -> expresion LESS expresion .)
    RPAREN          reduce using rule 54 (condicion -> expresion LESS expresion .)
    LLLAVE          reduce using rule 54 (condicion -> expresion LESS expresion .)
    RLLAVE          reduce using rule 54 (condicion -> expresion LESS expresion .)
    CONSTRUCTOR     reduce using rule 54 (condicion -> expresion LESS expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53

  ! PLUS            [ reduce using rule 54 (condicion -> expresion LESS expresion .) ]
  ! MINUS           [ reduce using rule 54 (condicion -> expresion LESS expresion .) ]
  ! TIMES           [ reduce using rule 54 (condicion -> expresion LESS expresion .) ]
  ! DIVIDE          [ reduce using rule 54 (condicion -> expresion LESS expresion .) ]
  ! MOD             [ reduce using rule 54 (condicion -> expresion LESS expresion .) ]
  ! GREATER         [ reduce using rule 54 (condicion -> expresion LESS expresion .) ]
  ! LESS            [ reduce using rule 54 (condicion -> expresion LESS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 54 (condicion -> expresion LESS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 54 (condicion -> expresion LESS expresion .) ]
  ! EQUALS          [ reduce using rule 54 (condicion -> expresion LESS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 54 (condicion -> expresion LESS expresion .) ]


state 102

    (55) condicion -> expresion GREATER_EQUALS expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    OR              reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    CONTINUE        reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    BREAK           reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    VARIABLE        reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    PRINT           reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    LPAREN          reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    NUMBER          reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    FLOAT           reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    TRUE            reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    FALSE           reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    NOT             reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    LISTOF          reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    MUTABLELISTOF   reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    MAPOF           reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    MUTABLEMAPOF    reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    SETOF           reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    MUTABLESETOF    reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    FOR             reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    WHILE           reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    IF              reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    DO              reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    VAL             reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    VAR             reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    FUN             reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    RETURN          reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    CLASS           reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    OPEN            reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    $end            reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    RPAREN          reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    LLLAVE          reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    RLLAVE          reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    CONSTRUCTOR     reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53

  ! PLUS            [ reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! MINUS           [ reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! TIMES           [ reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! DIVIDE          [ reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! MOD             [ reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! GREATER         [ reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! LESS            [ reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! EQUALS          [ reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 55 (condicion -> expresion GREATER_EQUALS expresion .) ]


state 103

    (56) condicion -> expresion LESS_EQUALS expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    OR              reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    CONTINUE        reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    BREAK           reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    VARIABLE        reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    PRINT           reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    LPAREN          reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    NUMBER          reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    FLOAT           reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    TRUE            reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    FALSE           reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    NOT             reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    LISTOF          reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    MUTABLELISTOF   reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    MAPOF           reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    MUTABLEMAPOF    reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    SETOF           reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    MUTABLESETOF    reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    FOR             reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    WHILE           reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    IF              reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    DO              reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    VAL             reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    VAR             reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    FUN             reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    RETURN          reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    CLASS           reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    OPEN            reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    $end            reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    RPAREN          reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    LLLAVE          reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    RLLAVE          reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    CONSTRUCTOR     reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53

  ! PLUS            [ reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! MINUS           [ reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! TIMES           [ reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! DIVIDE          [ reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! MOD             [ reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! GREATER         [ reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! LESS            [ reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! EQUALS          [ reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 56 (condicion -> expresion LESS_EQUALS expresion .) ]


state 104

    (57) condicion -> expresion EQUALS expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    OR              reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    CONTINUE        reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    BREAK           reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    VARIABLE        reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    PRINT           reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    LPAREN          reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    NUMBER          reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    FLOAT           reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    TRUE            reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    FALSE           reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    NOT             reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    LISTOF          reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    MUTABLELISTOF   reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    MAPOF           reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    MUTABLEMAPOF    reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    SETOF           reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    MUTABLESETOF    reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    FOR             reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    WHILE           reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    IF              reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    DO              reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    VAL             reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    VAR             reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    FUN             reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    RETURN          reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    CLASS           reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    OPEN            reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    $end            reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    RPAREN          reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    LLLAVE          reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    RLLAVE          reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    CONSTRUCTOR     reduce using rule 57 (condicion -> expresion EQUALS expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53

  ! PLUS            [ reduce using rule 57 (condicion -> expresion EQUALS expresion .) ]
  ! MINUS           [ reduce using rule 57 (condicion -> expresion EQUALS expresion .) ]
  ! TIMES           [ reduce using rule 57 (condicion -> expresion EQUALS expresion .) ]
  ! DIVIDE          [ reduce using rule 57 (condicion -> expresion EQUALS expresion .) ]
  ! MOD             [ reduce using rule 57 (condicion -> expresion EQUALS expresion .) ]
  ! GREATER         [ reduce using rule 57 (condicion -> expresion EQUALS expresion .) ]
  ! LESS            [ reduce using rule 57 (condicion -> expresion EQUALS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 57 (condicion -> expresion EQUALS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 57 (condicion -> expresion EQUALS expresion .) ]
  ! EQUALS          [ reduce using rule 57 (condicion -> expresion EQUALS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 57 (condicion -> expresion EQUALS expresion .) ]


state 105

    (58) condicion -> expresion NOT_EQUALS expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    OR              reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    CONTINUE        reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    BREAK           reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    VARIABLE        reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    PRINT           reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    LPAREN          reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    NUMBER          reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    FLOAT           reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    TRUE            reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    FALSE           reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    NOT             reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    LISTOF          reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    MUTABLELISTOF   reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    MAPOF           reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    MUTABLEMAPOF    reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    SETOF           reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    MUTABLESETOF    reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    FOR             reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    WHILE           reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    IF              reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    DO              reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    VAL             reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    VAR             reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    FUN             reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    RETURN          reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    CLASS           reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    OPEN            reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    $end            reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    RPAREN          reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    LLLAVE          reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    RLLAVE          reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    CONSTRUCTOR     reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53

  ! PLUS            [ reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! MINUS           [ reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! TIMES           [ reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! DIVIDE          [ reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! MOD             [ reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! GREATER         [ reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! LESS            [ reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! EQUALS          [ reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 58 (condicion -> expresion NOT_EQUALS expresion .) ]


state 106

    (59) condicion -> condicion AND condicion .
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion
    (51) expresion -> condicion .

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! reduce/reduce conflict for GREATER resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for PLUS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MINUS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for TIMES resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MOD resolved using rule 51 (expresion -> condicion .)
    CONTINUE        reduce using rule 59 (condicion -> condicion AND condicion .)
    BREAK           reduce using rule 59 (condicion -> condicion AND condicion .)
    VARIABLE        reduce using rule 59 (condicion -> condicion AND condicion .)
    PRINT           reduce using rule 59 (condicion -> condicion AND condicion .)
    LPAREN          reduce using rule 59 (condicion -> condicion AND condicion .)
    NUMBER          reduce using rule 59 (condicion -> condicion AND condicion .)
    FLOAT           reduce using rule 59 (condicion -> condicion AND condicion .)
    TRUE            reduce using rule 59 (condicion -> condicion AND condicion .)
    FALSE           reduce using rule 59 (condicion -> condicion AND condicion .)
    NOT             reduce using rule 59 (condicion -> condicion AND condicion .)
    LISTOF          reduce using rule 59 (condicion -> condicion AND condicion .)
    MUTABLELISTOF   reduce using rule 59 (condicion -> condicion AND condicion .)
    MAPOF           reduce using rule 59 (condicion -> condicion AND condicion .)
    MUTABLEMAPOF    reduce using rule 59 (condicion -> condicion AND condicion .)
    SETOF           reduce using rule 59 (condicion -> condicion AND condicion .)
    MUTABLESETOF    reduce using rule 59 (condicion -> condicion AND condicion .)
    FOR             reduce using rule 59 (condicion -> condicion AND condicion .)
    WHILE           reduce using rule 59 (condicion -> condicion AND condicion .)
    IF              reduce using rule 59 (condicion -> condicion AND condicion .)
    DO              reduce using rule 59 (condicion -> condicion AND condicion .)
    VAL             reduce using rule 59 (condicion -> condicion AND condicion .)
    VAR             reduce using rule 59 (condicion -> condicion AND condicion .)
    FUN             reduce using rule 59 (condicion -> condicion AND condicion .)
    RETURN          reduce using rule 59 (condicion -> condicion AND condicion .)
    CLASS           reduce using rule 59 (condicion -> condicion AND condicion .)
    OPEN            reduce using rule 59 (condicion -> condicion AND condicion .)
    $end            reduce using rule 59 (condicion -> condicion AND condicion .)
    RPAREN          reduce using rule 59 (condicion -> condicion AND condicion .)
    LLLAVE          reduce using rule 59 (condicion -> condicion AND condicion .)
    RLLAVE          reduce using rule 59 (condicion -> condicion AND condicion .)
    CONSTRUCTOR     reduce using rule 59 (condicion -> condicion AND condicion .)
    AND             shift and go to state 54
    OR              shift and go to state 55
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)

  ! AND             [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! OR              [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! PLUS            [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! MINUS           [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! TIMES           [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! DIVIDE          [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! MOD             [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! GREATER         [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! LESS            [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! GREATER_EQUALS  [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! LESS_EQUALS     [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! EQUALS          [ reduce using rule 59 (condicion -> condicion AND condicion .) ]
  ! NOT_EQUALS      [ reduce using rule 59 (condicion -> condicion AND condicion .) ]


state 107

    (60) condicion -> condicion OR condicion .
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion
    (51) expresion -> condicion .

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! reduce/reduce conflict for GREATER resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for PLUS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MINUS resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for TIMES resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 51 (expresion -> condicion .)
  ! reduce/reduce conflict for MOD resolved using rule 51 (expresion -> condicion .)
    CONTINUE        reduce using rule 60 (condicion -> condicion OR condicion .)
    BREAK           reduce using rule 60 (condicion -> condicion OR condicion .)
    VARIABLE        reduce using rule 60 (condicion -> condicion OR condicion .)
    PRINT           reduce using rule 60 (condicion -> condicion OR condicion .)
    LPAREN          reduce using rule 60 (condicion -> condicion OR condicion .)
    NUMBER          reduce using rule 60 (condicion -> condicion OR condicion .)
    FLOAT           reduce using rule 60 (condicion -> condicion OR condicion .)
    TRUE            reduce using rule 60 (condicion -> condicion OR condicion .)
    FALSE           reduce using rule 60 (condicion -> condicion OR condicion .)
    NOT             reduce using rule 60 (condicion -> condicion OR condicion .)
    LISTOF          reduce using rule 60 (condicion -> condicion OR condicion .)
    MUTABLELISTOF   reduce using rule 60 (condicion -> condicion OR condicion .)
    MAPOF           reduce using rule 60 (condicion -> condicion OR condicion .)
    MUTABLEMAPOF    reduce using rule 60 (condicion -> condicion OR condicion .)
    SETOF           reduce using rule 60 (condicion -> condicion OR condicion .)
    MUTABLESETOF    reduce using rule 60 (condicion -> condicion OR condicion .)
    FOR             reduce using rule 60 (condicion -> condicion OR condicion .)
    WHILE           reduce using rule 60 (condicion -> condicion OR condicion .)
    IF              reduce using rule 60 (condicion -> condicion OR condicion .)
    DO              reduce using rule 60 (condicion -> condicion OR condicion .)
    VAL             reduce using rule 60 (condicion -> condicion OR condicion .)
    VAR             reduce using rule 60 (condicion -> condicion OR condicion .)
    FUN             reduce using rule 60 (condicion -> condicion OR condicion .)
    RETURN          reduce using rule 60 (condicion -> condicion OR condicion .)
    CLASS           reduce using rule 60 (condicion -> condicion OR condicion .)
    OPEN            reduce using rule 60 (condicion -> condicion OR condicion .)
    $end            reduce using rule 60 (condicion -> condicion OR condicion .)
    RPAREN          reduce using rule 60 (condicion -> condicion OR condicion .)
    LLLAVE          reduce using rule 60 (condicion -> condicion OR condicion .)
    RLLAVE          reduce using rule 60 (condicion -> condicion OR condicion .)
    CONSTRUCTOR     reduce using rule 60 (condicion -> condicion OR condicion .)
    AND             shift and go to state 54
    OR              shift and go to state 55
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)

  ! AND             [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! OR              [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! PLUS            [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! MINUS           [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! TIMES           [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! DIVIDE          [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! MOD             [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! GREATER         [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! LESS            [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! GREATER_EQUALS  [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! LESS_EQUALS     [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! EQUALS          [ reduce using rule 60 (condicion -> condicion OR condicion .) ]
  ! NOT_EQUALS      [ reduce using rule 60 (condicion -> condicion OR condicion .) ]


state 108

    (25) asignacion -> VARIABLE ASIGN VARIABLE .
    (52) expresion -> VARIABLE .
    (110) creacionObjeto -> VARIABLE . LPAREN RPAREN
    (111) creacionObjeto -> VARIABLE . LPAREN repiteValores RPAREN

  ! reduce/reduce conflict for CONTINUE resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for BREAK resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for TRUE resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for FALSE resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for SETOF resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for FOR resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for VAL resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for FUN resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for RETURN resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for CLASS resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for OPEN resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! shift/reduce conflict for LPAREN resolved as shift
    CONTINUE        reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    BREAK           reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    VARIABLE        reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    PRINT           reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    NUMBER          reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    FLOAT           reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    TRUE            reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    FALSE           reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    NOT             reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    LISTOF          reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    MUTABLELISTOF   reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    MAPOF           reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    MUTABLEMAPOF    reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    SETOF           reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    MUTABLESETOF    reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    FOR             reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    WHILE           reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    IF              reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    DO              reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    VAL             reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    VAR             reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    FUN             reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    RETURN          reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    CLASS           reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    OPEN            reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    $end            reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    RLLAVE          reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .)
    PLUS            reduce using rule 52 (expresion -> VARIABLE .)
    MINUS           reduce using rule 52 (expresion -> VARIABLE .)
    TIMES           reduce using rule 52 (expresion -> VARIABLE .)
    DIVIDE          reduce using rule 52 (expresion -> VARIABLE .)
    MOD             reduce using rule 52 (expresion -> VARIABLE .)
    GREATER         reduce using rule 52 (expresion -> VARIABLE .)
    LESS            reduce using rule 52 (expresion -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 52 (expresion -> VARIABLE .)
    LESS_EQUALS     reduce using rule 52 (expresion -> VARIABLE .)
    EQUALS          reduce using rule 52 (expresion -> VARIABLE .)
    NOT_EQUALS      reduce using rule 52 (expresion -> VARIABLE .)
    LPAREN          shift and go to state 148

  ! LPAREN          [ reduce using rule 25 (asignacion -> VARIABLE ASIGN VARIABLE .) ]
  ! CONTINUE        [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! BREAK           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! LPAREN          [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! NUMBER          [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! FLOAT           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! TRUE            [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! FALSE           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! NOT             [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! LISTOF          [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! MUTABLELISTOF   [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! MAPOF           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! SETOF           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! MUTABLESETOF    [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! FOR             [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! IF              [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! DO              [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! VAL             [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! VAR             [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! FUN             [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! RETURN          [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! CLASS           [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! OPEN            [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! $end            [ reduce using rule 52 (expresion -> VARIABLE .) ]
  ! RLLAVE          [ reduce using rule 52 (expresion -> VARIABLE .) ]


state 109

    (26) asignacion -> VARIABLE ASIGN expresion .
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion

    CONTINUE        reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    BREAK           reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    VARIABLE        reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    PRINT           reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    LPAREN          reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    NUMBER          reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    FLOAT           reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    TRUE            reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    FALSE           reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    NOT             reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    LISTOF          reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    MUTABLELISTOF   reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    MAPOF           reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    MUTABLEMAPOF    reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    SETOF           reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    MUTABLESETOF    reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    FOR             reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    WHILE           reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    IF              reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    DO              reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    VAL             reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    VAR             reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    FUN             reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    RETURN          reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    CLASS           reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    OPEN            reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    $end            reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    RLLAVE          reduce using rule 26 (asignacion -> VARIABLE ASIGN expresion .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53


state 110

    (27) asignacion -> VARIABLE ASIGN condicion .
    (51) expresion -> condicion .
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion

  ! reduce/reduce conflict for CONTINUE resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for BREAK resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for PRINT resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for LPAREN resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for NUMBER resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for TRUE resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for FALSE resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for NOT resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for LISTOF resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for MAPOF resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for SETOF resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for FOR resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for WHILE resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for IF resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for DO resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for VAL resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for VAR resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for FUN resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for RETURN resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for CLASS resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for OPEN resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for $end resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    CONTINUE        reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    BREAK           reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    VARIABLE        reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    PRINT           reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    LPAREN          reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    NUMBER          reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    FLOAT           reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    TRUE            reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    FALSE           reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    NOT             reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    LISTOF          reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    MUTABLELISTOF   reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    MAPOF           reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    MUTABLEMAPOF    reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    SETOF           reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    MUTABLESETOF    reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    FOR             reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    WHILE           reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    IF              reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    DO              reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    VAL             reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    VAR             reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    FUN             reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    RETURN          reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    CLASS           reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    OPEN            reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    $end            reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    RLLAVE          reduce using rule 27 (asignacion -> VARIABLE ASIGN condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    AND             shift and go to state 54
    OR              shift and go to state 55

  ! CONTINUE        [ reduce using rule 51 (expresion -> condicion .) ]
  ! BREAK           [ reduce using rule 51 (expresion -> condicion .) ]
  ! VARIABLE        [ reduce using rule 51 (expresion -> condicion .) ]
  ! PRINT           [ reduce using rule 51 (expresion -> condicion .) ]
  ! LPAREN          [ reduce using rule 51 (expresion -> condicion .) ]
  ! NUMBER          [ reduce using rule 51 (expresion -> condicion .) ]
  ! FLOAT           [ reduce using rule 51 (expresion -> condicion .) ]
  ! TRUE            [ reduce using rule 51 (expresion -> condicion .) ]
  ! FALSE           [ reduce using rule 51 (expresion -> condicion .) ]
  ! NOT             [ reduce using rule 51 (expresion -> condicion .) ]
  ! LISTOF          [ reduce using rule 51 (expresion -> condicion .) ]
  ! MUTABLELISTOF   [ reduce using rule 51 (expresion -> condicion .) ]
  ! MAPOF           [ reduce using rule 51 (expresion -> condicion .) ]
  ! MUTABLEMAPOF    [ reduce using rule 51 (expresion -> condicion .) ]
  ! SETOF           [ reduce using rule 51 (expresion -> condicion .) ]
  ! MUTABLESETOF    [ reduce using rule 51 (expresion -> condicion .) ]
  ! FOR             [ reduce using rule 51 (expresion -> condicion .) ]
  ! WHILE           [ reduce using rule 51 (expresion -> condicion .) ]
  ! IF              [ reduce using rule 51 (expresion -> condicion .) ]
  ! DO              [ reduce using rule 51 (expresion -> condicion .) ]
  ! VAL             [ reduce using rule 51 (expresion -> condicion .) ]
  ! VAR             [ reduce using rule 51 (expresion -> condicion .) ]
  ! FUN             [ reduce using rule 51 (expresion -> condicion .) ]
  ! RETURN          [ reduce using rule 51 (expresion -> condicion .) ]
  ! CLASS           [ reduce using rule 51 (expresion -> condicion .) ]
  ! OPEN            [ reduce using rule 51 (expresion -> condicion .) ]
  ! $end            [ reduce using rule 51 (expresion -> condicion .) ]
  ! RLLAVE          [ reduce using rule 51 (expresion -> condicion .) ]


state 111

    (28) asignacion -> VARIABLE ASIGN estructura .

    CONTINUE        reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    BREAK           reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    VARIABLE        reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    PRINT           reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    LPAREN          reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    NUMBER          reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    FLOAT           reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    TRUE            reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    FALSE           reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    NOT             reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    LISTOF          reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    MUTABLELISTOF   reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    MAPOF           reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    MUTABLEMAPOF    reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    SETOF           reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    MUTABLESETOF    reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    FOR             reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    WHILE           reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    IF              reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    DO              reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    VAL             reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    VAR             reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    FUN             reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    RETURN          reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    CLASS           reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    OPEN            reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    $end            reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)
    RLLAVE          reduce using rule 28 (asignacion -> VARIABLE ASIGN estructura .)


state 112

    (29) asignacion -> VARIABLE ASIGN creacionObjeto .

    CONTINUE        reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    BREAK           reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    VARIABLE        reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    PRINT           reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    LPAREN          reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    NUMBER          reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    FLOAT           reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    TRUE            reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    FALSE           reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    NOT             reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    LISTOF          reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    MUTABLELISTOF   reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    MAPOF           reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    MUTABLEMAPOF    reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    SETOF           reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    MUTABLESETOF    reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    FOR             reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    WHILE           reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    IF              reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    DO              reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    VAL             reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    VAR             reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    FUN             reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    RETURN          reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    CLASS           reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    OPEN            reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    $end            reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    RLLAVE          reduce using rule 29 (asignacion -> VARIABLE ASIGN creacionObjeto .)


state 113

    (31) impresion -> PRINT LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 149


state 114

    (30) impresion_vacia -> PRINT LPAREN RPAREN .

    CONTINUE        reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    BREAK           reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    VARIABLE        reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    PRINT           reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    LPAREN          reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    NUMBER          reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    FLOAT           reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    TRUE            reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    FALSE           reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    NOT             reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    LISTOF          reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    MAPOF           reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    SETOF           reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    FOR             reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    WHILE           reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    IF              reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    DO              reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    VAL             reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    VAR             reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    FUN             reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    RETURN          reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    CLASS           reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    OPEN            reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    $end            reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)
    RLLAVE          reduce using rule 30 (impresion_vacia -> PRINT LPAREN RPAREN .)


state 115

    (38) repiteValores -> valor . COMMA repiteValores
    (39) repiteValores -> valor .

    COMMA           shift and go to state 150
    RPAREN          reduce using rule 39 (repiteValores -> valor .)


state 116

    (32) valor -> NUMBER .

    COMMA           reduce using rule 32 (valor -> NUMBER .)
    RPAREN          reduce using rule 32 (valor -> NUMBER .)
    TO_FROM_KV      reduce using rule 32 (valor -> NUMBER .)
    CONTINUE        reduce using rule 32 (valor -> NUMBER .)
    BREAK           reduce using rule 32 (valor -> NUMBER .)
    VARIABLE        reduce using rule 32 (valor -> NUMBER .)
    PRINT           reduce using rule 32 (valor -> NUMBER .)
    LPAREN          reduce using rule 32 (valor -> NUMBER .)
    NUMBER          reduce using rule 32 (valor -> NUMBER .)
    FLOAT           reduce using rule 32 (valor -> NUMBER .)
    TRUE            reduce using rule 32 (valor -> NUMBER .)
    FALSE           reduce using rule 32 (valor -> NUMBER .)
    NOT             reduce using rule 32 (valor -> NUMBER .)
    LISTOF          reduce using rule 32 (valor -> NUMBER .)
    MUTABLELISTOF   reduce using rule 32 (valor -> NUMBER .)
    MAPOF           reduce using rule 32 (valor -> NUMBER .)
    MUTABLEMAPOF    reduce using rule 32 (valor -> NUMBER .)
    SETOF           reduce using rule 32 (valor -> NUMBER .)
    MUTABLESETOF    reduce using rule 32 (valor -> NUMBER .)
    FOR             reduce using rule 32 (valor -> NUMBER .)
    WHILE           reduce using rule 32 (valor -> NUMBER .)
    IF              reduce using rule 32 (valor -> NUMBER .)
    DO              reduce using rule 32 (valor -> NUMBER .)
    VAL             reduce using rule 32 (valor -> NUMBER .)
    VAR             reduce using rule 32 (valor -> NUMBER .)
    FUN             reduce using rule 32 (valor -> NUMBER .)
    RETURN          reduce using rule 32 (valor -> NUMBER .)
    CLASS           reduce using rule 32 (valor -> NUMBER .)
    OPEN            reduce using rule 32 (valor -> NUMBER .)
    $end            reduce using rule 32 (valor -> NUMBER .)
    RLLAVE          reduce using rule 32 (valor -> NUMBER .)
    CONSTRUCTOR     reduce using rule 32 (valor -> NUMBER .)
    RANGE_TO        reduce using rule 32 (valor -> NUMBER .)
    THIS            reduce using rule 32 (valor -> NUMBER .)


state 117

    (33) valor -> FLOAT .

    COMMA           reduce using rule 33 (valor -> FLOAT .)
    RPAREN          reduce using rule 33 (valor -> FLOAT .)
    TO_FROM_KV      reduce using rule 33 (valor -> FLOAT .)
    CONTINUE        reduce using rule 33 (valor -> FLOAT .)
    BREAK           reduce using rule 33 (valor -> FLOAT .)
    VARIABLE        reduce using rule 33 (valor -> FLOAT .)
    PRINT           reduce using rule 33 (valor -> FLOAT .)
    LPAREN          reduce using rule 33 (valor -> FLOAT .)
    NUMBER          reduce using rule 33 (valor -> FLOAT .)
    FLOAT           reduce using rule 33 (valor -> FLOAT .)
    TRUE            reduce using rule 33 (valor -> FLOAT .)
    FALSE           reduce using rule 33 (valor -> FLOAT .)
    NOT             reduce using rule 33 (valor -> FLOAT .)
    LISTOF          reduce using rule 33 (valor -> FLOAT .)
    MUTABLELISTOF   reduce using rule 33 (valor -> FLOAT .)
    MAPOF           reduce using rule 33 (valor -> FLOAT .)
    MUTABLEMAPOF    reduce using rule 33 (valor -> FLOAT .)
    SETOF           reduce using rule 33 (valor -> FLOAT .)
    MUTABLESETOF    reduce using rule 33 (valor -> FLOAT .)
    FOR             reduce using rule 33 (valor -> FLOAT .)
    WHILE           reduce using rule 33 (valor -> FLOAT .)
    IF              reduce using rule 33 (valor -> FLOAT .)
    DO              reduce using rule 33 (valor -> FLOAT .)
    VAL             reduce using rule 33 (valor -> FLOAT .)
    VAR             reduce using rule 33 (valor -> FLOAT .)
    FUN             reduce using rule 33 (valor -> FLOAT .)
    RETURN          reduce using rule 33 (valor -> FLOAT .)
    CLASS           reduce using rule 33 (valor -> FLOAT .)
    OPEN            reduce using rule 33 (valor -> FLOAT .)
    $end            reduce using rule 33 (valor -> FLOAT .)
    RLLAVE          reduce using rule 33 (valor -> FLOAT .)
    CONSTRUCTOR     reduce using rule 33 (valor -> FLOAT .)
    RANGE_TO        reduce using rule 33 (valor -> FLOAT .)
    THIS            reduce using rule 33 (valor -> FLOAT .)


state 118

    (34) valor -> VARIABLE .

    COMMA           reduce using rule 34 (valor -> VARIABLE .)
    RPAREN          reduce using rule 34 (valor -> VARIABLE .)
    TO_FROM_KV      reduce using rule 34 (valor -> VARIABLE .)
    RANGE_TO        reduce using rule 34 (valor -> VARIABLE .)
    THIS            reduce using rule 34 (valor -> VARIABLE .)
    RLLAVE          reduce using rule 34 (valor -> VARIABLE .)


state 119

    (36) valor -> TRUE .

    COMMA           reduce using rule 36 (valor -> TRUE .)
    RPAREN          reduce using rule 36 (valor -> TRUE .)
    TO_FROM_KV      reduce using rule 36 (valor -> TRUE .)
    CONTINUE        reduce using rule 36 (valor -> TRUE .)
    BREAK           reduce using rule 36 (valor -> TRUE .)
    VARIABLE        reduce using rule 36 (valor -> TRUE .)
    PRINT           reduce using rule 36 (valor -> TRUE .)
    LPAREN          reduce using rule 36 (valor -> TRUE .)
    NUMBER          reduce using rule 36 (valor -> TRUE .)
    FLOAT           reduce using rule 36 (valor -> TRUE .)
    TRUE            reduce using rule 36 (valor -> TRUE .)
    FALSE           reduce using rule 36 (valor -> TRUE .)
    NOT             reduce using rule 36 (valor -> TRUE .)
    LISTOF          reduce using rule 36 (valor -> TRUE .)
    MUTABLELISTOF   reduce using rule 36 (valor -> TRUE .)
    MAPOF           reduce using rule 36 (valor -> TRUE .)
    MUTABLEMAPOF    reduce using rule 36 (valor -> TRUE .)
    SETOF           reduce using rule 36 (valor -> TRUE .)
    MUTABLESETOF    reduce using rule 36 (valor -> TRUE .)
    FOR             reduce using rule 36 (valor -> TRUE .)
    WHILE           reduce using rule 36 (valor -> TRUE .)
    IF              reduce using rule 36 (valor -> TRUE .)
    DO              reduce using rule 36 (valor -> TRUE .)
    VAL             reduce using rule 36 (valor -> TRUE .)
    VAR             reduce using rule 36 (valor -> TRUE .)
    FUN             reduce using rule 36 (valor -> TRUE .)
    RETURN          reduce using rule 36 (valor -> TRUE .)
    CLASS           reduce using rule 36 (valor -> TRUE .)
    OPEN            reduce using rule 36 (valor -> TRUE .)
    $end            reduce using rule 36 (valor -> TRUE .)
    RLLAVE          reduce using rule 36 (valor -> TRUE .)
    CONSTRUCTOR     reduce using rule 36 (valor -> TRUE .)
    RANGE_TO        reduce using rule 36 (valor -> TRUE .)
    THIS            reduce using rule 36 (valor -> TRUE .)


state 120

    (37) valor -> FALSE .

    COMMA           reduce using rule 37 (valor -> FALSE .)
    RPAREN          reduce using rule 37 (valor -> FALSE .)
    TO_FROM_KV      reduce using rule 37 (valor -> FALSE .)
    CONTINUE        reduce using rule 37 (valor -> FALSE .)
    BREAK           reduce using rule 37 (valor -> FALSE .)
    VARIABLE        reduce using rule 37 (valor -> FALSE .)
    PRINT           reduce using rule 37 (valor -> FALSE .)
    LPAREN          reduce using rule 37 (valor -> FALSE .)
    NUMBER          reduce using rule 37 (valor -> FALSE .)
    FLOAT           reduce using rule 37 (valor -> FALSE .)
    TRUE            reduce using rule 37 (valor -> FALSE .)
    FALSE           reduce using rule 37 (valor -> FALSE .)
    NOT             reduce using rule 37 (valor -> FALSE .)
    LISTOF          reduce using rule 37 (valor -> FALSE .)
    MUTABLELISTOF   reduce using rule 37 (valor -> FALSE .)
    MAPOF           reduce using rule 37 (valor -> FALSE .)
    MUTABLEMAPOF    reduce using rule 37 (valor -> FALSE .)
    SETOF           reduce using rule 37 (valor -> FALSE .)
    MUTABLESETOF    reduce using rule 37 (valor -> FALSE .)
    FOR             reduce using rule 37 (valor -> FALSE .)
    WHILE           reduce using rule 37 (valor -> FALSE .)
    IF              reduce using rule 37 (valor -> FALSE .)
    DO              reduce using rule 37 (valor -> FALSE .)
    VAL             reduce using rule 37 (valor -> FALSE .)
    VAR             reduce using rule 37 (valor -> FALSE .)
    FUN             reduce using rule 37 (valor -> FALSE .)
    RETURN          reduce using rule 37 (valor -> FALSE .)
    CLASS           reduce using rule 37 (valor -> FALSE .)
    OPEN            reduce using rule 37 (valor -> FALSE .)
    $end            reduce using rule 37 (valor -> FALSE .)
    RLLAVE          reduce using rule 37 (valor -> FALSE .)
    CONSTRUCTOR     reduce using rule 37 (valor -> FALSE .)
    RANGE_TO        reduce using rule 37 (valor -> FALSE .)
    THIS            reduce using rule 37 (valor -> FALSE .)


state 121

    (46) expresion -> LPAREN expresion RPAREN .

    PLUS            reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    MOD             reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    GREATER_EQUALS  reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    LESS_EQUALS     reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    EQUALS          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    NOT_EQUALS      reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    CONTINUE        reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    BREAK           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    VARIABLE        reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    NUMBER          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    FLOAT           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    TRUE            reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    FALSE           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    NOT             reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    LISTOF          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    MUTABLELISTOF   reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    MAPOF           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    MUTABLEMAPOF    reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    SETOF           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    MUTABLESETOF    reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    IF              reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    DO              reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    VAL             reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    VAR             reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    FUN             reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    CLASS           reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    OPEN            reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    $end            reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    AND             reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    OR              reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    LLLAVE          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    RLLAVE          reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)
    CONSTRUCTOR     reduce using rule 46 (expresion -> LPAREN expresion RPAREN .)


state 122

    (65) condicion -> LPAREN condicion RPAREN .

    AND             reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    OR              reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    CONTINUE        reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    BREAK           reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    VARIABLE        reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    PRINT           reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    LPAREN          reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    NUMBER          reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    FLOAT           reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    TRUE            reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    FALSE           reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    NOT             reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    LISTOF          reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    MUTABLELISTOF   reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    MAPOF           reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    MUTABLEMAPOF    reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    SETOF           reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    MUTABLESETOF    reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    FOR             reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    WHILE           reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    IF              reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    DO              reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    VAL             reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    VAR             reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    FUN             reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    RETURN          reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    CLASS           reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    OPEN            reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    $end            reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    PLUS            reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    MINUS           reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    TIMES           reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    DIVIDE          reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    MOD             reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    GREATER         reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    LESS            reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    GREATER_EQUALS  reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    LESS_EQUALS     reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    EQUALS          reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    NOT_EQUALS      reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    RPAREN          reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    LLLAVE          reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    RLLAVE          reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)
    CONSTRUCTOR     reduce using rule 65 (condicion -> LPAREN condicion RPAREN .)


state 123

    (65) condicion -> LPAREN condicion . RPAREN
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion
    (51) expresion -> condicion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 122
    AND             shift and go to state 54
    OR              shift and go to state 55
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)

  ! RPAREN          [ reduce using rule 51 (expresion -> condicion .) ]


state 124

    (46) expresion -> LPAREN expresion . RPAREN
    (53) condicion -> expresion . GREATER expresion
    (54) condicion -> expresion . LESS expresion
    (55) condicion -> expresion . GREATER_EQUALS expresion
    (56) condicion -> expresion . LESS_EQUALS expresion
    (57) condicion -> expresion . EQUALS expresion
    (58) condicion -> expresion . NOT_EQUALS expresion
    (41) expresion -> expresion . PLUS expresion
    (42) expresion -> expresion . MINUS expresion
    (43) expresion -> expresion . TIMES expresion
    (44) expresion -> expresion . DIVIDE expresion
    (45) expresion -> expresion . MOD expresion

    RPAREN          shift and go to state 121
    GREATER         shift and go to state 48
    LESS            shift and go to state 49
    GREATER_EQUALS  shift and go to state 50
    LESS_EQUALS     shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUALS      shift and go to state 53
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 47


state 125

    (66) estructura -> LISTOF LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 151


state 126

    (67) estructura -> LISTOF LPAREN RPAREN .

    CONTINUE        reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    BREAK           reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    VARIABLE        reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    PRINT           reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    LPAREN          reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    NUMBER          reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    FLOAT           reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    TRUE            reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    FALSE           reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    NOT             reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    LISTOF          reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    MAPOF           reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    SETOF           reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    FOR             reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    WHILE           reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    IF              reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    DO              reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    VAL             reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    VAR             reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    FUN             reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    RETURN          reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    CLASS           reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    OPEN            reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    $end            reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    RLLAVE          reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)
    CONSTRUCTOR     reduce using rule 67 (estructura -> LISTOF LPAREN RPAREN .)


state 127

    (68) estructura -> MUTABLELISTOF LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 152


state 128

    (69) estructura -> MUTABLELISTOF LPAREN RPAREN .

    CONTINUE        reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    BREAK           reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    VARIABLE        reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    PRINT           reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    LPAREN          reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    NUMBER          reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    FLOAT           reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    TRUE            reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    FALSE           reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    NOT             reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    LISTOF          reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    MAPOF           reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    SETOF           reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    FOR             reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    WHILE           reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    IF              reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    DO              reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    VAL             reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    VAR             reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    FUN             reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    RETURN          reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    CLASS           reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    OPEN            reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    $end            reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    RLLAVE          reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    CONSTRUCTOR     reduce using rule 69 (estructura -> MUTABLELISTOF LPAREN RPAREN .)


state 129

    (70) estructura -> MAPOF LPAREN pareskv_mapa . RPAREN

    RPAREN          shift and go to state 153


state 130

    (72) pareskv_mapa -> valor . TO_FROM_KV valor COMMA pareskv_mapa
    (73) pareskv_mapa -> valor . TO_FROM_KV valor

    TO_FROM_KV      shift and go to state 154


state 131

    (71) estructura -> MUTABLEMAPOF LPAREN pareskv_mapa . RPAREN

    RPAREN          shift and go to state 155


state 132

    (74) estructura -> SETOF LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 156


state 133

    (75) estructura -> SETOF LPAREN RPAREN .

    CONTINUE        reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    BREAK           reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    VARIABLE        reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    PRINT           reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    LPAREN          reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    NUMBER          reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    FLOAT           reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    TRUE            reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    FALSE           reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    NOT             reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    LISTOF          reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    MAPOF           reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    SETOF           reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    FOR             reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    WHILE           reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    IF              reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    DO              reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    VAL             reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    VAR             reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    FUN             reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    RETURN          reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    CLASS           reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    OPEN            reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    $end            reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    RLLAVE          reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)
    CONSTRUCTOR     reduce using rule 75 (estructura -> SETOF LPAREN RPAREN .)


state 134

    (76) estructura -> MUTABLESETOF LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 157


state 135

    (77) estructura -> MUTABLESETOF LPAREN RPAREN .

    CONTINUE        reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    BREAK           reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    VARIABLE        reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    PRINT           reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    LPAREN          reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    NUMBER          reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    FLOAT           reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    TRUE            reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    FALSE           reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    NOT             reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    LISTOF          reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    MAPOF           reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    SETOF           reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    FOR             reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    WHILE           reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    IF              reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    DO              reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    VAL             reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    VAR             reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    FUN             reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    RETURN          reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    CLASS           reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    OPEN            reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    $end            reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    RLLAVE          reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    CONSTRUCTOR     reduce using rule 77 (estructura -> MUTABLESETOF LPAREN RPAREN .)


state 136

    (86) estructura -> FOR LPAREN VARIABLE . IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE

    IN              shift and go to state 158


state 137

    (87) estructura -> WHILE condicion LLLAVE . sentencias RLLAVE
    (88) estructura -> WHILE condicion LLLAVE . RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 160
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencias                     shift and go to state 159
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 138

    (89) estructura -> IF condicion LLLAVE . sentencias RLLAVE
    (90) estructura -> IF condicion LLLAVE . sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> IF condicion LLLAVE . sentencias RLLAVE repetirElseIf
    (92) estructura -> IF condicion LLLAVE . sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencias                     shift and go to state 161
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 139

    (95) estructura -> DO LLLAVE sentencias . RLLAVE WHILE condicion
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 162
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 140

    (96) estructura -> DO LLLAVE RLLAVE . WHILE condicion

    WHILE           shift and go to state 163


state 141

    (19) declaracion_variable -> VAL VARIABLE ASIGN . valor
    (21) declaracion_variable -> VAL VARIABLE ASIGN . estructura
    (23) declaracion_variable -> VAL VARIABLE ASIGN . creacionObjeto
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (110) creacionObjeto -> . VARIABLE LPAREN RPAREN
    (111) creacionObjeto -> . VARIABLE LPAREN repiteValores RPAREN

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 164
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35

    valor                          shift and go to state 165
    estructura                     shift and go to state 166
    creacionObjeto                 shift and go to state 167

state 142

    (20) declaracion_variable -> VAR VARIABLE ASIGN . valor
    (22) declaracion_variable -> VAR VARIABLE ASIGN . estructura
    (24) declaracion_variable -> VAR VARIABLE ASIGN . creacionObjeto
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (110) creacionObjeto -> . VARIABLE LPAREN RPAREN
    (111) creacionObjeto -> . VARIABLE LPAREN repiteValores RPAREN

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 164
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35

    valor                          shift and go to state 168
    estructura                     shift and go to state 169
    creacionObjeto                 shift and go to state 170

state 143

    (102) funcion -> FUN VARIABLE LPAREN . parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> FUN VARIABLE LPAREN . parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> FUN VARIABLE LPAREN . parametros RPAREN COLON VARIABLE ASIGN sentencias
    (97) parametros -> . VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
    (98) parametros -> . VARIABLE COLON VARIABLE ASIGN valor
    (99) parametros -> . VARIABLE COLON VARIABLE COMMA parametros
    (100) parametros -> . VARIABLE COLON VARIABLE
    (101) parametros -> . empty
    (4) empty -> .

    VARIABLE        shift and go to state 171
    RPAREN          reduce using rule 4 (empty -> .)

    parametros                     shift and go to state 172
    empty                          shift and go to state 173

state 144

    (112) clase -> CLASS VARIABLE LLLAVE . sentencias RLLAVE
    (113) clase -> CLASS VARIABLE LLLAVE . RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 175
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 174
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 145

    (116) clase -> CLASS VARIABLE COLON . VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> CLASS VARIABLE COLON . VARIABLE LPAREN RPAREN LLLAVE RLLAVE

    VARIABLE        shift and go to state 176


state 146

    (118) constructorPri -> CLASS VARIABLE LPAREN . parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> CLASS VARIABLE LPAREN . parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> CLASS VARIABLE LPAREN . parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE
    (97) parametros -> . VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
    (98) parametros -> . VARIABLE COLON VARIABLE ASIGN valor
    (99) parametros -> . VARIABLE COLON VARIABLE COMMA parametros
    (100) parametros -> . VARIABLE COLON VARIABLE
    (101) parametros -> . empty
    (4) empty -> .

    VARIABLE        shift and go to state 171
    RPAREN          reduce using rule 4 (empty -> .)

    parametros                     shift and go to state 177
    empty                          shift and go to state 173

state 147

    (114) clase -> OPEN CLASS VARIABLE . LLLAVE sentencias RLLAVE
    (115) clase -> OPEN CLASS VARIABLE . LLLAVE RLLAVE

    LLLAVE          shift and go to state 178


state 148

    (110) creacionObjeto -> VARIABLE LPAREN . RPAREN
    (111) creacionObjeto -> VARIABLE LPAREN . repiteValores RPAREN
    (38) repiteValores -> . valor COMMA repiteValores
    (39) repiteValores -> . valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    RPAREN          shift and go to state 179
    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    repiteValores                  shift and go to state 180
    valor                          shift and go to state 115

state 149

    (31) impresion -> PRINT LPAREN repiteValores RPAREN .

    CONTINUE        reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    BREAK           reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    VARIABLE        reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    IF              reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    DO              reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    $end            reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 31 (impresion -> PRINT LPAREN repiteValores RPAREN .)


state 150

    (38) repiteValores -> valor COMMA . repiteValores
    (38) repiteValores -> . valor COMMA repiteValores
    (39) repiteValores -> . valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    valor                          shift and go to state 115
    repiteValores                  shift and go to state 181

state 151

    (66) estructura -> LISTOF LPAREN repiteValores RPAREN .

    CONTINUE        reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    BREAK           reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    VARIABLE        reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    IF              reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    DO              reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    $end            reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    CONSTRUCTOR     reduce using rule 66 (estructura -> LISTOF LPAREN repiteValores RPAREN .)


state 152

    (68) estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .

    CONTINUE        reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    BREAK           reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    VARIABLE        reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    IF              reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    DO              reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    $end            reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    CONSTRUCTOR     reduce using rule 68 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)


state 153

    (70) estructura -> MAPOF LPAREN pareskv_mapa RPAREN .

    CONTINUE        reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    BREAK           reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    VARIABLE        reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    PRINT           reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    LPAREN          reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    NUMBER          reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    FLOAT           reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    TRUE            reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    FALSE           reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    NOT             reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    LISTOF          reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLELISTOF   reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    MAPOF           reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLEMAPOF    reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    SETOF           reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLESETOF    reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    FOR             reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    WHILE           reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    IF              reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    DO              reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    VAL             reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    VAR             reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    FUN             reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    RETURN          reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    CLASS           reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    OPEN            reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    $end            reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    RLLAVE          reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    CONSTRUCTOR     reduce using rule 70 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)


state 154

    (72) pareskv_mapa -> valor TO_FROM_KV . valor COMMA pareskv_mapa
    (73) pareskv_mapa -> valor TO_FROM_KV . valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    valor                          shift and go to state 182

state 155

    (71) estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .

    CONTINUE        reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    BREAK           reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    VARIABLE        reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    PRINT           reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    LPAREN          reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    NUMBER          reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    FLOAT           reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    TRUE            reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    FALSE           reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    NOT             reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    LISTOF          reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLELISTOF   reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    MAPOF           reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLEMAPOF    reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    SETOF           reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLESETOF    reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    FOR             reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    WHILE           reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    IF              reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    DO              reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    VAL             reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    VAR             reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    FUN             reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    RETURN          reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    CLASS           reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    OPEN            reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    $end            reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    RLLAVE          reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    CONSTRUCTOR     reduce using rule 71 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)


state 156

    (74) estructura -> SETOF LPAREN repiteValores RPAREN .

    CONTINUE        reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    BREAK           reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    VARIABLE        reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    IF              reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    DO              reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    $end            reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    CONSTRUCTOR     reduce using rule 74 (estructura -> SETOF LPAREN repiteValores RPAREN .)


state 157

    (76) estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .

    CONTINUE        reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    BREAK           reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    VARIABLE        reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    IF              reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    DO              reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    $end            reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    CONSTRUCTOR     reduce using rule 76 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)


state 158

    (86) estructura -> FOR LPAREN VARIABLE IN . valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    valor                          shift and go to state 183

state 159

    (87) estructura -> WHILE condicion LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 184
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 160

    (88) estructura -> WHILE condicion LLLAVE RLLAVE .

    CONTINUE        reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    BREAK           reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    VARIABLE        reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    PRINT           reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    LPAREN          reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    NUMBER          reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    FLOAT           reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    TRUE            reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    FALSE           reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    NOT             reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    LISTOF          reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    MUTABLELISTOF   reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    MAPOF           reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    MUTABLEMAPOF    reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    SETOF           reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    MUTABLESETOF    reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    FOR             reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    WHILE           reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    IF              reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    DO              reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    VAL             reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    VAR             reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    FUN             reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    RETURN          reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    CLASS           reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    OPEN            reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    $end            reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    RLLAVE          reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)
    CONSTRUCTOR     reduce using rule 88 (estructura -> WHILE condicion LLLAVE RLLAVE .)


state 161

    (89) estructura -> IF condicion LLLAVE sentencias . RLLAVE
    (90) estructura -> IF condicion LLLAVE sentencias . RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> IF condicion LLLAVE sentencias . RLLAVE repetirElseIf
    (92) estructura -> IF condicion LLLAVE sentencias . RLLAVE ELSE LLLAVE sentencias RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 185
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 162

    (95) estructura -> DO LLLAVE sentencias RLLAVE . WHILE condicion

    WHILE           shift and go to state 186


state 163

    (96) estructura -> DO LLLAVE RLLAVE WHILE . condicion
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE

    NOT             shift and go to state 25
    TRUE            shift and go to state 63
    FALSE           shift and go to state 64
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    VARIABLE        shift and go to state 60

    condicion                      shift and go to state 187
    expresion                      shift and go to state 74

state 164

    (34) valor -> VARIABLE .
    (110) creacionObjeto -> VARIABLE . LPAREN RPAREN
    (111) creacionObjeto -> VARIABLE . LPAREN repiteValores RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    CONTINUE        reduce using rule 34 (valor -> VARIABLE .)
    BREAK           reduce using rule 34 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 34 (valor -> VARIABLE .)
    PRINT           reduce using rule 34 (valor -> VARIABLE .)
    NUMBER          reduce using rule 34 (valor -> VARIABLE .)
    FLOAT           reduce using rule 34 (valor -> VARIABLE .)
    TRUE            reduce using rule 34 (valor -> VARIABLE .)
    FALSE           reduce using rule 34 (valor -> VARIABLE .)
    NOT             reduce using rule 34 (valor -> VARIABLE .)
    LISTOF          reduce using rule 34 (valor -> VARIABLE .)
    MUTABLELISTOF   reduce using rule 34 (valor -> VARIABLE .)
    MAPOF           reduce using rule 34 (valor -> VARIABLE .)
    MUTABLEMAPOF    reduce using rule 34 (valor -> VARIABLE .)
    SETOF           reduce using rule 34 (valor -> VARIABLE .)
    MUTABLESETOF    reduce using rule 34 (valor -> VARIABLE .)
    FOR             reduce using rule 34 (valor -> VARIABLE .)
    WHILE           reduce using rule 34 (valor -> VARIABLE .)
    IF              reduce using rule 34 (valor -> VARIABLE .)
    DO              reduce using rule 34 (valor -> VARIABLE .)
    VAL             reduce using rule 34 (valor -> VARIABLE .)
    VAR             reduce using rule 34 (valor -> VARIABLE .)
    FUN             reduce using rule 34 (valor -> VARIABLE .)
    RETURN          reduce using rule 34 (valor -> VARIABLE .)
    CLASS           reduce using rule 34 (valor -> VARIABLE .)
    OPEN            reduce using rule 34 (valor -> VARIABLE .)
    $end            reduce using rule 34 (valor -> VARIABLE .)
    RLLAVE          reduce using rule 34 (valor -> VARIABLE .)
    CONSTRUCTOR     reduce using rule 34 (valor -> VARIABLE .)
    LPAREN          shift and go to state 148

  ! LPAREN          [ reduce using rule 34 (valor -> VARIABLE .) ]


state 165

    (19) declaracion_variable -> VAL VARIABLE ASIGN valor .

    CONTINUE        reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    BREAK           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    VARIABLE        reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    PRINT           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    LPAREN          reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    NUMBER          reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    FLOAT           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    TRUE            reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    FALSE           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    NOT             reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    LISTOF          reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    MUTABLELISTOF   reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    MAPOF           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    MUTABLEMAPOF    reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    SETOF           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    MUTABLESETOF    reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    FOR             reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    WHILE           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    IF              reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    DO              reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    VAL             reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    VAR             reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    FUN             reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    RETURN          reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    CLASS           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    OPEN            reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    $end            reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    RLLAVE          reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    CONSTRUCTOR     reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN valor .)


state 166

    (21) declaracion_variable -> VAL VARIABLE ASIGN estructura .

    CONTINUE        reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    BREAK           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    VARIABLE        reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    PRINT           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    LPAREN          reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    NUMBER          reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    FLOAT           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    TRUE            reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    FALSE           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    NOT             reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    LISTOF          reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    MUTABLELISTOF   reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    MAPOF           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    MUTABLEMAPOF    reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    SETOF           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    MUTABLESETOF    reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    FOR             reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    WHILE           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    IF              reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    DO              reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    VAL             reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    VAR             reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    FUN             reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    RETURN          reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    CLASS           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    OPEN            reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    $end            reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    RLLAVE          reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    CONSTRUCTOR     reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)


state 167

    (23) declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .

    CONTINUE        reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    BREAK           reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    VARIABLE        reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    PRINT           reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    LPAREN          reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    NUMBER          reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    FLOAT           reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    TRUE            reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    FALSE           reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    NOT             reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    LISTOF          reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    MUTABLELISTOF   reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    MAPOF           reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    MUTABLEMAPOF    reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    SETOF           reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    MUTABLESETOF    reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    FOR             reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    WHILE           reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    IF              reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    DO              reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    VAL             reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    VAR             reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    FUN             reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    RETURN          reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    CLASS           reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    OPEN            reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    $end            reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    RLLAVE          reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    CONSTRUCTOR     reduce using rule 23 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)


state 168

    (20) declaracion_variable -> VAR VARIABLE ASIGN valor .

    CONTINUE        reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    BREAK           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    VARIABLE        reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    PRINT           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    LPAREN          reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    NUMBER          reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    FLOAT           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    TRUE            reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    FALSE           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    NOT             reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    LISTOF          reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    MUTABLELISTOF   reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    MAPOF           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    MUTABLEMAPOF    reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    SETOF           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    MUTABLESETOF    reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    FOR             reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    WHILE           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    IF              reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    DO              reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    VAL             reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    VAR             reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    FUN             reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    RETURN          reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    CLASS           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    OPEN            reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    $end            reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    RLLAVE          reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    CONSTRUCTOR     reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN valor .)


state 169

    (22) declaracion_variable -> VAR VARIABLE ASIGN estructura .

    CONTINUE        reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    BREAK           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    VARIABLE        reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    PRINT           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    LPAREN          reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    NUMBER          reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    FLOAT           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    TRUE            reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    FALSE           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    NOT             reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    LISTOF          reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    MUTABLELISTOF   reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    MAPOF           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    MUTABLEMAPOF    reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    SETOF           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    MUTABLESETOF    reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    FOR             reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    WHILE           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    IF              reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    DO              reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    VAL             reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    VAR             reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    FUN             reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    RETURN          reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    CLASS           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    OPEN            reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    $end            reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    RLLAVE          reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    CONSTRUCTOR     reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)


state 170

    (24) declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .

    CONTINUE        reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    BREAK           reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    VARIABLE        reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    PRINT           reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    LPAREN          reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    NUMBER          reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    FLOAT           reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    TRUE            reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    FALSE           reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    NOT             reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    LISTOF          reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    MUTABLELISTOF   reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    MAPOF           reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    MUTABLEMAPOF    reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    SETOF           reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    MUTABLESETOF    reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    FOR             reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    WHILE           reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    IF              reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    DO              reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    VAL             reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    VAR             reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    FUN             reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    RETURN          reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    CLASS           reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    OPEN            reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    $end            reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    RLLAVE          reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    CONSTRUCTOR     reduce using rule 24 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)


state 171

    (97) parametros -> VARIABLE . COLON VARIABLE ASIGN valor COMMA parametros
    (98) parametros -> VARIABLE . COLON VARIABLE ASIGN valor
    (99) parametros -> VARIABLE . COLON VARIABLE COMMA parametros
    (100) parametros -> VARIABLE . COLON VARIABLE

    COLON           shift and go to state 188


state 172

    (102) funcion -> FUN VARIABLE LPAREN parametros . RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> FUN VARIABLE LPAREN parametros . RPAREN LLLAVE empty RLLAVE
    (104) funcion -> FUN VARIABLE LPAREN parametros . RPAREN COLON VARIABLE ASIGN sentencias

    RPAREN          shift and go to state 189


state 173

    (101) parametros -> empty .

    RPAREN          reduce using rule 101 (parametros -> empty .)


state 174

    (112) clase -> CLASS VARIABLE LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 190
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 175

    (113) clase -> CLASS VARIABLE LLLAVE RLLAVE .

    CONTINUE        reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    BREAK           reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    VARIABLE        reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    PRINT           reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    LPAREN          reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    NUMBER          reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    FLOAT           reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    TRUE            reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    FALSE           reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    NOT             reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    LISTOF          reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLELISTOF   reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    MAPOF           reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLEMAPOF    reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    SETOF           reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLESETOF    reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    FOR             reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    WHILE           reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    IF              reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    DO              reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    VAL             reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    VAR             reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    FUN             reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    RETURN          reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    CLASS           reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    OPEN            reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    $end            reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    RLLAVE          reduce using rule 113 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)


state 176

    (116) clase -> CLASS VARIABLE COLON VARIABLE . LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> CLASS VARIABLE COLON VARIABLE . LPAREN RPAREN LLLAVE RLLAVE

    LPAREN          shift and go to state 191


state 177

    (118) constructorPri -> CLASS VARIABLE LPAREN parametros . RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> CLASS VARIABLE LPAREN parametros . RPAREN LLLAVE RLLAVE
    (120) constructorPri -> CLASS VARIABLE LPAREN parametros . RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

    RPAREN          shift and go to state 192


state 178

    (114) clase -> OPEN CLASS VARIABLE LLLAVE . sentencias RLLAVE
    (115) clase -> OPEN CLASS VARIABLE LLLAVE . RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 194
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 193
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 179

    (110) creacionObjeto -> VARIABLE LPAREN RPAREN .

    CONTINUE        reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    BREAK           reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    VARIABLE        reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    PRINT           reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    LPAREN          reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    NUMBER          reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    FLOAT           reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    TRUE            reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    FALSE           reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    NOT             reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    LISTOF          reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    MAPOF           reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    SETOF           reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    FOR             reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    WHILE           reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    IF              reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    DO              reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    VAL             reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    VAR             reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    FUN             reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    RETURN          reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    CLASS           reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    OPEN            reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    $end            reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    RLLAVE          reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    CONSTRUCTOR     reduce using rule 110 (creacionObjeto -> VARIABLE LPAREN RPAREN .)


state 180

    (111) creacionObjeto -> VARIABLE LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 195


state 181

    (38) repiteValores -> valor COMMA repiteValores .

    RPAREN          reduce using rule 38 (repiteValores -> valor COMMA repiteValores .)


state 182

    (72) pareskv_mapa -> valor TO_FROM_KV valor . COMMA pareskv_mapa
    (73) pareskv_mapa -> valor TO_FROM_KV valor .

    COMMA           shift and go to state 196
    RPAREN          reduce using rule 73 (pareskv_mapa -> valor TO_FROM_KV valor .)


state 183

    (86) estructura -> FOR LPAREN VARIABLE IN valor . RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE

    RANGE_TO        shift and go to state 197


state 184

    (87) estructura -> WHILE condicion LLLAVE sentencias RLLAVE .

    CONTINUE        reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    BREAK           reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    VARIABLE        reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    DO              reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 87 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)


state 185

    (89) estructura -> IF condicion LLLAVE sentencias RLLAVE .
    (90) estructura -> IF condicion LLLAVE sentencias RLLAVE . repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> IF condicion LLLAVE sentencias RLLAVE . repetirElseIf
    (92) estructura -> IF condicion LLLAVE sentencias RLLAVE . ELSE LLLAVE sentencias RLLAVE
    (93) repetirElseIf -> . ELSE IF condicion LLLAVE sentencias RLLAVE
    (94) repetirElseIf -> . ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf

    CONTINUE        reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    BREAK           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    VARIABLE        reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    DO              reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    ELSE            shift and go to state 199

    repetirElseIf                  shift and go to state 198

state 186

    (95) estructura -> DO LLLAVE sentencias RLLAVE WHILE . condicion
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE

    NOT             shift and go to state 25
    TRUE            shift and go to state 63
    FALSE           shift and go to state 64
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    VARIABLE        shift and go to state 60

    condicion                      shift and go to state 200
    expresion                      shift and go to state 74

state 187

    (96) estructura -> DO LLLAVE RLLAVE WHILE condicion .
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion
    (51) expresion -> condicion .

    CONTINUE        reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    BREAK           reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    VARIABLE        reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    PRINT           reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    LPAREN          reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    NUMBER          reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    FLOAT           reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    TRUE            reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    FALSE           reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    NOT             reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    LISTOF          reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    MUTABLELISTOF   reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    MAPOF           reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    MUTABLEMAPOF    reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    SETOF           reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    MUTABLESETOF    reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    FOR             reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    WHILE           reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    IF              reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    DO              reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    VAL             reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    VAR             reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    FUN             reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    RETURN          reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    CLASS           reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    OPEN            reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    $end            reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    RLLAVE          reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    CONSTRUCTOR     reduce using rule 96 (estructura -> DO LLLAVE RLLAVE WHILE condicion .)
    AND             shift and go to state 54
    OR              shift and go to state 55
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)


state 188

    (97) parametros -> VARIABLE COLON . VARIABLE ASIGN valor COMMA parametros
    (98) parametros -> VARIABLE COLON . VARIABLE ASIGN valor
    (99) parametros -> VARIABLE COLON . VARIABLE COMMA parametros
    (100) parametros -> VARIABLE COLON . VARIABLE

    VARIABLE        shift and go to state 201


state 189

    (102) funcion -> FUN VARIABLE LPAREN parametros RPAREN . COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> FUN VARIABLE LPAREN parametros RPAREN . LLLAVE empty RLLAVE
    (104) funcion -> FUN VARIABLE LPAREN parametros RPAREN . COLON VARIABLE ASIGN sentencias

    COLON           shift and go to state 202
    LLLAVE          shift and go to state 203


state 190

    (112) clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .

    CONTINUE        reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    BREAK           reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    VARIABLE        reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    DO              reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 112 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)


state 191

    (116) clase -> CLASS VARIABLE COLON VARIABLE LPAREN . RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> CLASS VARIABLE COLON VARIABLE LPAREN . RPAREN LLLAVE RLLAVE

    RPAREN          shift and go to state 204


state 192

    (118) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN . LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN . LLLAVE RLLAVE
    (120) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN . LLLAVE repetirDeclaracion constructorSec RLLAVE

    LLLAVE          shift and go to state 205


state 193

    (114) clase -> OPEN CLASS VARIABLE LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 206
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 194

    (115) clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .

    CONTINUE        reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    BREAK           reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    VARIABLE        reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    PRINT           reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    LPAREN          reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    NUMBER          reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    FLOAT           reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    TRUE            reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    FALSE           reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    NOT             reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    LISTOF          reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLELISTOF   reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    MAPOF           reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLEMAPOF    reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    SETOF           reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLESETOF    reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    FOR             reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    WHILE           reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    IF              reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    DO              reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    VAL             reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    VAR             reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    FUN             reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    RETURN          reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    CLASS           reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    OPEN            reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    $end            reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    RLLAVE          reduce using rule 115 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)


state 195

    (111) creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .

    CONTINUE        reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    BREAK           reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    VARIABLE        reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    IF              reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    DO              reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    $end            reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    CONSTRUCTOR     reduce using rule 111 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)


state 196

    (72) pareskv_mapa -> valor TO_FROM_KV valor COMMA . pareskv_mapa
    (72) pareskv_mapa -> . valor TO_FROM_KV valor COMMA pareskv_mapa
    (73) pareskv_mapa -> . valor TO_FROM_KV valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    valor                          shift and go to state 130
    pareskv_mapa                   shift and go to state 207

state 197

    (86) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO . valor RPAREN LLLAVE sentencias RLLAVE
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    valor                          shift and go to state 208

state 198

    (90) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf . ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .

    ELSE            shift and go to state 209
    CONTINUE        reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    BREAK           reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    VARIABLE        reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    PRINT           reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    LPAREN          reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    NUMBER          reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FLOAT           reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    TRUE            reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FALSE           reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    NOT             reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    LISTOF          reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLELISTOF   reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MAPOF           reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLEMAPOF    reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    SETOF           reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLESETOF    reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FOR             reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    WHILE           reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    IF              reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    DO              reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    VAL             reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    VAR             reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FUN             reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    RETURN          reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    CLASS           reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    OPEN            reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    $end            reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    RLLAVE          reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    CONSTRUCTOR     reduce using rule 91 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)


state 199

    (92) estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE . LLLAVE sentencias RLLAVE
    (93) repetirElseIf -> ELSE . IF condicion LLLAVE sentencias RLLAVE
    (94) repetirElseIf -> ELSE . IF condicion LLLAVE sentencias RLLAVE repetirElseIf

    LLLAVE          shift and go to state 211
    IF              shift and go to state 210


state 200

    (95) estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion
    (51) expresion -> condicion .

    CONTINUE        reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    BREAK           reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    VARIABLE        reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    PRINT           reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    LPAREN          reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    NUMBER          reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    FLOAT           reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    TRUE            reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    FALSE           reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    NOT             reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    LISTOF          reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    MUTABLELISTOF   reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    MAPOF           reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    MUTABLEMAPOF    reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    SETOF           reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    MUTABLESETOF    reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    FOR             reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    WHILE           reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    IF              reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    DO              reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    VAL             reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    VAR             reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    FUN             reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    RETURN          reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    CLASS           reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    OPEN            reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    $end            reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    RLLAVE          reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    CONSTRUCTOR     reduce using rule 95 (estructura -> DO LLLAVE sentencias RLLAVE WHILE condicion .)
    AND             shift and go to state 54
    OR              shift and go to state 55
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)


state 201

    (97) parametros -> VARIABLE COLON VARIABLE . ASIGN valor COMMA parametros
    (98) parametros -> VARIABLE COLON VARIABLE . ASIGN valor
    (99) parametros -> VARIABLE COLON VARIABLE . COMMA parametros
    (100) parametros -> VARIABLE COLON VARIABLE .

    ASIGN           shift and go to state 212
    COMMA           shift and go to state 213
    RPAREN          reduce using rule 100 (parametros -> VARIABLE COLON VARIABLE .)


state 202

    (102) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON . VARIABLE LLLAVE sentencias RLLAVE
    (104) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON . VARIABLE ASIGN sentencias

    VARIABLE        shift and go to state 214


state 203

    (103) funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE . empty RLLAVE
    (4) empty -> .

    RLLAVE          reduce using rule 4 (empty -> .)

    empty                          shift and go to state 215

state 204

    (116) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN . LLLAVE sentencias RLLAVE
    (117) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN . LLLAVE RLLAVE

    LLLAVE          shift and go to state 216


state 205

    (118) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE . repetirDeclaracion RLLAVE
    (119) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE . RLLAVE
    (120) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE . repetirDeclaracion constructorSec RLLAVE
    (108) repetirDeclaracion -> . declaracion_variable repetirDeclaracion
    (109) repetirDeclaracion -> . declaracion_variable
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto

    RLLAVE          shift and go to state 218
    VAL             shift and go to state 36
    VAR             shift and go to state 37

    repetirDeclaracion             shift and go to state 217
    declaracion_variable           shift and go to state 219

state 206

    (114) clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .

    CONTINUE        reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    BREAK           reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    VARIABLE        reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    DO              reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 114 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)


state 207

    (72) pareskv_mapa -> valor TO_FROM_KV valor COMMA pareskv_mapa .

    RPAREN          reduce using rule 72 (pareskv_mapa -> valor TO_FROM_KV valor COMMA pareskv_mapa .)


state 208

    (86) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 220


state 209

    (90) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 221


state 210

    (93) repetirElseIf -> ELSE IF . condicion LLLAVE sentencias RLLAVE
    (94) repetirElseIf -> ELSE IF . condicion LLLAVE sentencias RLLAVE repetirElseIf
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE

    NOT             shift and go to state 25
    TRUE            shift and go to state 63
    FALSE           shift and go to state 64
    LPAREN          shift and go to state 65
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    VARIABLE        shift and go to state 60

    condicion                      shift and go to state 222
    expresion                      shift and go to state 74

state 211

    (92) estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencias                     shift and go to state 223
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 212

    (97) parametros -> VARIABLE COLON VARIABLE ASIGN . valor COMMA parametros
    (98) parametros -> VARIABLE COLON VARIABLE ASIGN . valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    valor                          shift and go to state 224

state 213

    (99) parametros -> VARIABLE COLON VARIABLE COMMA . parametros
    (97) parametros -> . VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
    (98) parametros -> . VARIABLE COLON VARIABLE ASIGN valor
    (99) parametros -> . VARIABLE COLON VARIABLE COMMA parametros
    (100) parametros -> . VARIABLE COLON VARIABLE
    (101) parametros -> . empty
    (4) empty -> .

    VARIABLE        shift and go to state 171
    RPAREN          reduce using rule 4 (empty -> .)

    parametros                     shift and go to state 225
    empty                          shift and go to state 173

state 214

    (102) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE . LLLAVE sentencias RLLAVE
    (104) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE . ASIGN sentencias

    LLLAVE          shift and go to state 226
    ASIGN           shift and go to state 227


state 215

    (103) funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty . RLLAVE

    RLLAVE          shift and go to state 228


state 216

    (116) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE . sentencias RLLAVE
    (117) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE . RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 230
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 229
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 217

    (118) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion . RLLAVE
    (120) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion . constructorSec RLLAVE
    (121) constructorSec -> . CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE
    (122) constructorSec -> . CONSTRUCTOR LPAREN parametros RPAREN LLLAVE repetirThis RLLAVE
    (123) constructorSec -> . CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE RLLAVE
    (124) constructorSec -> . CONSTRUCTOR LPAREN parametros RPAREN LLLAVE RLLAVE

    RLLAVE          shift and go to state 231
    CONSTRUCTOR     shift and go to state 233

    constructorSec                 shift and go to state 232

state 218

    (119) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .

    CONTINUE        reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    BREAK           reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    VARIABLE        reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    PRINT           reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    LPAREN          reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    NUMBER          reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    FLOAT           reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    TRUE            reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    FALSE           reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    NOT             reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    LISTOF          reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    MUTABLELISTOF   reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    MAPOF           reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    MUTABLEMAPOF    reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    SETOF           reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    MUTABLESETOF    reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    FOR             reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    WHILE           reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    IF              reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    DO              reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    VAL             reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    VAR             reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    FUN             reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    RETURN          reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    CLASS           reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    OPEN            reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    $end            reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    RLLAVE          reduce using rule 119 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)


state 219

    (108) repetirDeclaracion -> declaracion_variable . repetirDeclaracion
    (109) repetirDeclaracion -> declaracion_variable .
    (108) repetirDeclaracion -> . declaracion_variable repetirDeclaracion
    (109) repetirDeclaracion -> . declaracion_variable
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto

    RLLAVE          reduce using rule 109 (repetirDeclaracion -> declaracion_variable .)
    CONSTRUCTOR     reduce using rule 109 (repetirDeclaracion -> declaracion_variable .)
    VAL             shift and go to state 36
    VAR             shift and go to state 37

    declaracion_variable           shift and go to state 219
    repetirDeclaracion             shift and go to state 234

state 220

    (86) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 235


state 221

    (90) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencias                     shift and go to state 236
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 222

    (93) repetirElseIf -> ELSE IF condicion . LLLAVE sentencias RLLAVE
    (94) repetirElseIf -> ELSE IF condicion . LLLAVE sentencias RLLAVE repetirElseIf
    (59) condicion -> condicion . AND condicion
    (60) condicion -> condicion . OR condicion
    (51) expresion -> condicion .

    LLLAVE          shift and go to state 237
    AND             shift and go to state 54
    OR              shift and go to state 55
    GREATER         reduce using rule 51 (expresion -> condicion .)
    LESS            reduce using rule 51 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 51 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 51 (expresion -> condicion .)
    EQUALS          reduce using rule 51 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 51 (expresion -> condicion .)
    PLUS            reduce using rule 51 (expresion -> condicion .)
    MINUS           reduce using rule 51 (expresion -> condicion .)
    TIMES           reduce using rule 51 (expresion -> condicion .)
    DIVIDE          reduce using rule 51 (expresion -> condicion .)
    MOD             reduce using rule 51 (expresion -> condicion .)


state 223

    (92) estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 238
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 224

    (97) parametros -> VARIABLE COLON VARIABLE ASIGN valor . COMMA parametros
    (98) parametros -> VARIABLE COLON VARIABLE ASIGN valor .

    COMMA           shift and go to state 239
    RPAREN          reduce using rule 98 (parametros -> VARIABLE COLON VARIABLE ASIGN valor .)


state 225

    (99) parametros -> VARIABLE COLON VARIABLE COMMA parametros .

    RPAREN          reduce using rule 99 (parametros -> VARIABLE COLON VARIABLE COMMA parametros .)


state 226

    (102) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 240
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 227

    (104) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN . sentencias
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    $end            reduce using rule 4 (empty -> .)
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 241
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 228

    (103) funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .

    CONTINUE        reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    BREAK           reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    VARIABLE        reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    PRINT           reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    LPAREN          reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    NUMBER          reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    FLOAT           reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    TRUE            reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    FALSE           reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    NOT             reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    LISTOF          reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    MUTABLELISTOF   reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    MAPOF           reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    MUTABLEMAPOF    reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    SETOF           reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    MUTABLESETOF    reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    FOR             reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    WHILE           reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    IF              reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    DO              reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    VAL             reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    VAR             reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    FUN             reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    RETURN          reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    CLASS           reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    OPEN            reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    $end            reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    RLLAVE          reduce using rule 103 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)


state 229

    (116) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 242
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 230

    (117) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .

    CONTINUE        reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    BREAK           reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    VARIABLE        reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    PRINT           reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    LPAREN          reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    NUMBER          reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    FLOAT           reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    TRUE            reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    FALSE           reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    NOT             reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    LISTOF          reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    MUTABLELISTOF   reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    MAPOF           reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    MUTABLEMAPOF    reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    SETOF           reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    MUTABLESETOF    reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    FOR             reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    WHILE           reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    IF              reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    DO              reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    VAL             reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    VAR             reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    FUN             reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    RETURN          reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    CLASS           reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    OPEN            reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    $end            reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    RLLAVE          reduce using rule 117 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)


state 231

    (118) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .

    CONTINUE        reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    BREAK           reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    VARIABLE        reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    PRINT           reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    LPAREN          reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    NUMBER          reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    FLOAT           reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    TRUE            reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    FALSE           reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    NOT             reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    LISTOF          reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    MUTABLELISTOF   reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    MAPOF           reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    MUTABLEMAPOF    reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    SETOF           reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    MUTABLESETOF    reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    FOR             reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    WHILE           reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    IF              reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    DO              reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    VAL             reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    VAR             reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    FUN             reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    RETURN          reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    CLASS           reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    OPEN            reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    $end            reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    RLLAVE          reduce using rule 118 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)


state 232

    (120) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec . RLLAVE

    RLLAVE          shift and go to state 243


state 233

    (121) constructorSec -> CONSTRUCTOR . LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE
    (122) constructorSec -> CONSTRUCTOR . LPAREN parametros RPAREN LLLAVE repetirThis RLLAVE
    (123) constructorSec -> CONSTRUCTOR . LPAREN parametros RPAREN COLON formarThis LLLAVE RLLAVE
    (124) constructorSec -> CONSTRUCTOR . LPAREN parametros RPAREN LLLAVE RLLAVE

    LPAREN          shift and go to state 244


state 234

    (108) repetirDeclaracion -> declaracion_variable repetirDeclaracion .

    RLLAVE          reduce using rule 108 (repetirDeclaracion -> declaracion_variable repetirDeclaracion .)
    CONSTRUCTOR     reduce using rule 108 (repetirDeclaracion -> declaracion_variable repetirDeclaracion .)


state 235

    (86) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE . sentencias RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 245
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 236

    (90) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 246
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 237

    (93) repetirElseIf -> ELSE IF condicion LLLAVE . sentencias RLLAVE
    (94) repetirElseIf -> ELSE IF condicion LLLAVE . sentencias RLLAVE repetirElseIf
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencias                     shift and go to state 247
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 238

    (92) estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .

    CONTINUE        reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    BREAK           reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    VARIABLE        reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    DO              reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 92 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)


state 239

    (97) parametros -> VARIABLE COLON VARIABLE ASIGN valor COMMA . parametros
    (97) parametros -> . VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
    (98) parametros -> . VARIABLE COLON VARIABLE ASIGN valor
    (99) parametros -> . VARIABLE COLON VARIABLE COMMA parametros
    (100) parametros -> . VARIABLE COLON VARIABLE
    (101) parametros -> . empty
    (4) empty -> .

    VARIABLE        shift and go to state 171
    RPAREN          reduce using rule 4 (empty -> .)

    parametros                     shift and go to state 248
    empty                          shift and go to state 173

state 240

    (102) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 249
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 241

    (104) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! reduce/reduce conflict for RETURN resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for CLASS resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for OPEN resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for $end resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 4 (empty -> .)
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    $end            reduce using rule 4 (empty -> .)
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! CONTINUE        [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! BREAK           [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! VARIABLE        [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! PRINT           [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! LPAREN          [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! NUMBER          [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! FLOAT           [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! TRUE            [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! FALSE           [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! NOT             [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! LISTOF          [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! MUTABLELISTOF   [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! MAPOF           [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! MUTABLEMAPOF    [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! SETOF           [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! MUTABLESETOF    [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! FOR             [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! WHILE           [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! IF              [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! DO              [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! VAL             [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! VAR             [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! FUN             [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! RETURN          [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! CLASS           [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! OPEN            [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! $end            [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! RLLAVE          [ reduce using rule 104 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 242

    (116) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .

    CONTINUE        reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    BREAK           reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    VARIABLE        reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    DO              reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 116 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)


state 243

    (120) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .

    CONTINUE        reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    BREAK           reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    VARIABLE        reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    PRINT           reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    LPAREN          reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    NUMBER          reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    FLOAT           reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    TRUE            reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    FALSE           reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    NOT             reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    LISTOF          reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    MUTABLELISTOF   reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    MAPOF           reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    MUTABLEMAPOF    reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    SETOF           reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    MUTABLESETOF    reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    FOR             reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    WHILE           reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    IF              reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    DO              reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    VAL             reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    VAR             reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    FUN             reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    RETURN          reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    CLASS           reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    OPEN            reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    $end            reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    RLLAVE          reduce using rule 120 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)


state 244

    (121) constructorSec -> CONSTRUCTOR LPAREN . parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE
    (122) constructorSec -> CONSTRUCTOR LPAREN . parametros RPAREN LLLAVE repetirThis RLLAVE
    (123) constructorSec -> CONSTRUCTOR LPAREN . parametros RPAREN COLON formarThis LLLAVE RLLAVE
    (124) constructorSec -> CONSTRUCTOR LPAREN . parametros RPAREN LLLAVE RLLAVE
    (97) parametros -> . VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
    (98) parametros -> . VARIABLE COLON VARIABLE ASIGN valor
    (99) parametros -> . VARIABLE COLON VARIABLE COMMA parametros
    (100) parametros -> . VARIABLE COLON VARIABLE
    (101) parametros -> . empty
    (4) empty -> .

    VARIABLE        shift and go to state 171
    RPAREN          reduce using rule 4 (empty -> .)

    parametros                     shift and go to state 250
    empty                          shift and go to state 173

state 245

    (86) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 251
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 246

    (90) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .

    CONTINUE        reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    BREAK           reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    VARIABLE        reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    DO              reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 90 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)


state 247

    (93) repetirElseIf -> ELSE IF condicion LLLAVE sentencias . RLLAVE
    (94) repetirElseIf -> ELSE IF condicion LLLAVE sentencias . RLLAVE repetirElseIf
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (17) sentencia -> . CONTINUE
    (18) sentencia -> . BREAK
    (25) asignacion -> . VARIABLE ASIGN VARIABLE
    (26) asignacion -> . VARIABLE ASIGN expresion
    (27) asignacion -> . VARIABLE ASIGN condicion
    (28) asignacion -> . VARIABLE ASIGN estructura
    (29) asignacion -> . VARIABLE ASIGN creacionObjeto
    (31) impresion -> . PRINT LPAREN repiteValores RPAREN
    (30) impresion_vacia -> . PRINT LPAREN RPAREN
    (41) expresion -> . expresion PLUS expresion
    (42) expresion -> . expresion MINUS expresion
    (43) expresion -> . expresion TIMES expresion
    (44) expresion -> . expresion DIVIDE expresion
    (45) expresion -> . expresion MOD expresion
    (46) expresion -> . LPAREN expresion RPAREN
    (47) expresion -> . NUMBER
    (48) expresion -> . FLOAT
    (49) expresion -> . TRUE
    (50) expresion -> . FALSE
    (51) expresion -> . condicion
    (52) expresion -> . VARIABLE
    (53) condicion -> . expresion GREATER expresion
    (54) condicion -> . expresion LESS expresion
    (55) condicion -> . expresion GREATER_EQUALS expresion
    (56) condicion -> . expresion LESS_EQUALS expresion
    (57) condicion -> . expresion EQUALS expresion
    (58) condicion -> . expresion NOT_EQUALS expresion
    (59) condicion -> . condicion AND condicion
    (60) condicion -> . condicion OR condicion
    (61) condicion -> . NOT condicion
    (62) condicion -> . NOT expresion
    (63) condicion -> . TRUE
    (64) condicion -> . FALSE
    (65) condicion -> . LPAREN condicion RPAREN
    (66) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . LISTOF LPAREN RPAREN
    (68) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (69) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (70) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (71) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (74) estructura -> . SETOF LPAREN repiteValores RPAREN
    (75) estructura -> . SETOF LPAREN RPAREN
    (76) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (77) estructura -> . MUTABLESETOF LPAREN RPAREN
    (86) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (87) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (88) estructura -> . WHILE condicion LLLAVE RLLAVE
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (90) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (91) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (92) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (95) estructura -> . DO LLLAVE sentencias RLLAVE WHILE condicion
    (96) estructura -> . DO LLLAVE RLLAVE WHILE condicion
    (19) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (20) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (21) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (22) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (23) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (24) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (102) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (103) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (104) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (78) retorno -> . RETURN objetoRetorno
    (112) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (113) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (114) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (115) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (116) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (117) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (118) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (119) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (120) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 252
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    VARIABLE        shift and go to state 18
    PRINT           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NOT             shift and go to state 25
    LISTOF          shift and go to state 26
    MUTABLELISTOF   shift and go to state 27
    MAPOF           shift and go to state 28
    MUTABLEMAPOF    shift and go to state 29
    SETOF           shift and go to state 30
    MUTABLESETOF    shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    IF              shift and go to state 34
    DO              shift and go to state 35
    VAL             shift and go to state 36
    VAR             shift and go to state 37
    FUN             shift and go to state 38
    RETURN          shift and go to state 39
    CLASS           shift and go to state 40
    OPEN            shift and go to state 41

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 4 (empty -> .) ]
  ! BREAK           [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! DO              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencia                      shift and go to state 42
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 248

    (97) parametros -> VARIABLE COLON VARIABLE ASIGN valor COMMA parametros .

    RPAREN          reduce using rule 97 (parametros -> VARIABLE COLON VARIABLE ASIGN valor COMMA parametros .)


state 249

    (102) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .

    CONTINUE        reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    BREAK           reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    VARIABLE        reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    DO              reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 102 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)


state 250

    (121) constructorSec -> CONSTRUCTOR LPAREN parametros . RPAREN COLON formarThis LLLAVE repetirThis RLLAVE
    (122) constructorSec -> CONSTRUCTOR LPAREN parametros . RPAREN LLLAVE repetirThis RLLAVE
    (123) constructorSec -> CONSTRUCTOR LPAREN parametros . RPAREN COLON formarThis LLLAVE RLLAVE
    (124) constructorSec -> CONSTRUCTOR LPAREN parametros . RPAREN LLLAVE RLLAVE

    RPAREN          shift and go to state 253


state 251

    (86) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .

    CONTINUE        reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    BREAK           reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    VARIABLE        reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    DO              reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 86 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)


state 252

    (93) repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .
    (94) repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE . repetirElseIf
    (93) repetirElseIf -> . ELSE IF condicion LLLAVE sentencias RLLAVE
    (94) repetirElseIf -> . ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf

  ! shift/reduce conflict for ELSE resolved as shift
    CONTINUE        reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    BREAK           reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    VARIABLE        reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    DO              reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    ELSE            shift and go to state 254

  ! ELSE            [ reduce using rule 93 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .) ]

    repetirElseIf                  shift and go to state 255

state 253

    (121) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN . COLON formarThis LLLAVE repetirThis RLLAVE
    (122) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN . LLLAVE repetirThis RLLAVE
    (123) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN . COLON formarThis LLLAVE RLLAVE
    (124) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN . LLLAVE RLLAVE

    COLON           shift and go to state 256
    LLLAVE          shift and go to state 257


state 254

    (93) repetirElseIf -> ELSE . IF condicion LLLAVE sentencias RLLAVE
    (94) repetirElseIf -> ELSE . IF condicion LLLAVE sentencias RLLAVE repetirElseIf

    IF              shift and go to state 210


state 255

    (94) repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .

    ELSE            reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    CONTINUE        reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    BREAK           reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    VARIABLE        reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    PRINT           reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    LPAREN          reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    NUMBER          reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FLOAT           reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    TRUE            reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FALSE           reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    NOT             reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    LISTOF          reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLELISTOF   reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MAPOF           reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLEMAPOF    reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    SETOF           reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLESETOF    reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FOR             reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    WHILE           reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    IF              reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    DO              reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    VAL             reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    VAR             reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FUN             reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    RETURN          reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    CLASS           reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    OPEN            reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    $end            reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    RLLAVE          reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    CONSTRUCTOR     reduce using rule 94 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)


state 256

    (121) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON . formarThis LLLAVE repetirThis RLLAVE
    (123) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON . formarThis LLLAVE RLLAVE
    (107) formarThis -> . THIS LPAREN repiteValores RPAREN

    THIS            shift and go to state 259

    formarThis                     shift and go to state 258

state 257

    (122) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN LLLAVE . repetirThis RLLAVE
    (124) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN LLLAVE . RLLAVE
    (105) repetirThis -> . THIS DOT VARIABLE ASIGN valor repetirThis
    (106) repetirThis -> . THIS DOT VARIABLE ASIGN valor

    RLLAVE          shift and go to state 261
    THIS            shift and go to state 262

    repetirThis                    shift and go to state 260

state 258

    (121) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis . LLLAVE repetirThis RLLAVE
    (123) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis . LLLAVE RLLAVE

    LLLAVE          shift and go to state 263


state 259

    (107) formarThis -> THIS . LPAREN repiteValores RPAREN

    LPAREN          shift and go to state 264


state 260

    (122) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN LLLAVE repetirThis . RLLAVE

    RLLAVE          shift and go to state 265


state 261

    (124) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN LLLAVE RLLAVE .

    RLLAVE          reduce using rule 124 (constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN LLLAVE RLLAVE .)


state 262

    (105) repetirThis -> THIS . DOT VARIABLE ASIGN valor repetirThis
    (106) repetirThis -> THIS . DOT VARIABLE ASIGN valor

    DOT             shift and go to state 266


state 263

    (121) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE . repetirThis RLLAVE
    (123) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE . RLLAVE
    (105) repetirThis -> . THIS DOT VARIABLE ASIGN valor repetirThis
    (106) repetirThis -> . THIS DOT VARIABLE ASIGN valor

    RLLAVE          shift and go to state 268
    THIS            shift and go to state 262

    repetirThis                    shift and go to state 267

state 264

    (107) formarThis -> THIS LPAREN . repiteValores RPAREN
    (38) repiteValores -> . valor COMMA repiteValores
    (39) repiteValores -> . valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    repiteValores                  shift and go to state 269
    valor                          shift and go to state 115

state 265

    (122) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN LLLAVE repetirThis RLLAVE .

    RLLAVE          reduce using rule 122 (constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN LLLAVE repetirThis RLLAVE .)


state 266

    (105) repetirThis -> THIS DOT . VARIABLE ASIGN valor repetirThis
    (106) repetirThis -> THIS DOT . VARIABLE ASIGN valor

    VARIABLE        shift and go to state 270


state 267

    (121) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis . RLLAVE

    RLLAVE          shift and go to state 271


state 268

    (123) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE RLLAVE .

    RLLAVE          reduce using rule 123 (constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE RLLAVE .)


state 269

    (107) formarThis -> THIS LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 272


state 270

    (105) repetirThis -> THIS DOT VARIABLE . ASIGN valor repetirThis
    (106) repetirThis -> THIS DOT VARIABLE . ASIGN valor

    ASIGN           shift and go to state 273


state 271

    (121) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE .

    RLLAVE          reduce using rule 121 (constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE .)


state 272

    (107) formarThis -> THIS LPAREN repiteValores RPAREN .

    LLLAVE          reduce using rule 107 (formarThis -> THIS LPAREN repiteValores RPAREN .)


state 273

    (105) repetirThis -> THIS DOT VARIABLE ASIGN . valor repetirThis
    (106) repetirThis -> THIS DOT VARIABLE ASIGN . valor
    (32) valor -> . NUMBER
    (33) valor -> . FLOAT
    (34) valor -> . VARIABLE
    (35) valor -> . STRING
    (36) valor -> . TRUE
    (37) valor -> . FALSE

    NUMBER          shift and go to state 116
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 91
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120

    valor                          shift and go to state 274

state 274

    (105) repetirThis -> THIS DOT VARIABLE ASIGN valor . repetirThis
    (106) repetirThis -> THIS DOT VARIABLE ASIGN valor .
    (105) repetirThis -> . THIS DOT VARIABLE ASIGN valor repetirThis
    (106) repetirThis -> . THIS DOT VARIABLE ASIGN valor

    RLLAVE          reduce using rule 106 (repetirThis -> THIS DOT VARIABLE ASIGN valor .)
    THIS            shift and go to state 262

    repetirThis                    shift and go to state 275

state 275

    (105) repetirThis -> THIS DOT VARIABLE ASIGN valor repetirThis .

    RLLAVE          reduce using rule 105 (repetirThis -> THIS DOT VARIABLE ASIGN valor repetirThis .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CONTINUE in state 0 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 0 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 0 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for NOT in state 0 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 0 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 0 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 0 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 0 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 0 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for DO in state 0 resolved as shift
WARNING: shift/reduce conflict for VAL in state 0 resolved as shift
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for FUN in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 0 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 0 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 2 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 2 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 2 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 2 resolved as shift
WARNING: shift/reduce conflict for NOT in state 2 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 2 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 2 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 2 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 2 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 2 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for DO in state 2 resolved as shift
WARNING: shift/reduce conflict for VAL in state 2 resolved as shift
WARNING: shift/reduce conflict for VAR in state 2 resolved as shift
WARNING: shift/reduce conflict for FUN in state 2 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 2 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 2 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 39 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 39 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 39 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 39 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 39 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 39 resolved as shift
WARNING: shift/reduce conflict for NOT in state 39 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 39 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 39 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 39 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 39 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 39 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 39 resolved as shift
WARNING: shift/reduce conflict for FOR in state 39 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 39 resolved as shift
WARNING: shift/reduce conflict for IF in state 39 resolved as shift
WARNING: shift/reduce conflict for DO in state 39 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 59 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 62 resolved as shift
WARNING: shift/reduce conflict for LESS in state 62 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for MOD in state 62 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 76 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 76 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 76 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 76 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 76 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 76 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 76 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT in state 76 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 76 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 76 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 76 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 76 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 76 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 76 resolved as shift
WARNING: shift/reduce conflict for FOR in state 76 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for DO in state 76 resolved as shift
WARNING: shift/reduce conflict for VAL in state 76 resolved as shift
WARNING: shift/reduce conflict for VAR in state 76 resolved as shift
WARNING: shift/reduce conflict for FUN in state 76 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 76 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 76 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 94 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 94 resolved as shift
WARNING: shift/reduce conflict for MOD in state 94 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 94 resolved as shift
WARNING: shift/reduce conflict for LESS in state 94 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for AND in state 95 resolved as shift
WARNING: shift/reduce conflict for OR in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 96 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 96 resolved as shift
WARNING: shift/reduce conflict for MOD in state 96 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 96 resolved as shift
WARNING: shift/reduce conflict for LESS in state 96 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for MOD in state 97 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 97 resolved as shift
WARNING: shift/reduce conflict for LESS in state 97 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 98 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 98 resolved as shift
WARNING: shift/reduce conflict for MOD in state 98 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 98 resolved as shift
WARNING: shift/reduce conflict for LESS in state 98 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 98 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 98 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 98 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 99 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 99 resolved as shift
WARNING: shift/reduce conflict for MOD in state 99 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 99 resolved as shift
WARNING: shift/reduce conflict for LESS in state 99 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 99 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 99 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 99 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 100 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 100 resolved as shift
WARNING: shift/reduce conflict for MOD in state 100 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 100 resolved as shift
WARNING: shift/reduce conflict for LESS in state 100 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 100 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 100 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 100 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 101 resolved as shift
WARNING: shift/reduce conflict for MOD in state 101 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 101 resolved as shift
WARNING: shift/reduce conflict for LESS in state 101 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 102 resolved as shift
WARNING: shift/reduce conflict for MOD in state 102 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 102 resolved as shift
WARNING: shift/reduce conflict for LESS in state 102 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 102 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 102 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 102 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for MOD in state 103 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 103 resolved as shift
WARNING: shift/reduce conflict for LESS in state 103 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 103 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 103 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 103 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for MOD in state 104 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 104 resolved as shift
WARNING: shift/reduce conflict for LESS in state 104 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for MOD in state 105 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 105 resolved as shift
WARNING: shift/reduce conflict for LESS in state 105 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 108 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 123 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 137 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 137 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 137 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 137 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 137 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 137 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 137 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 137 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 137 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 137 resolved as shift
WARNING: shift/reduce conflict for NOT in state 137 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 137 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 137 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 137 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 137 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 137 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 137 resolved as shift
WARNING: shift/reduce conflict for FOR in state 137 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 137 resolved as shift
WARNING: shift/reduce conflict for IF in state 137 resolved as shift
WARNING: shift/reduce conflict for DO in state 137 resolved as shift
WARNING: shift/reduce conflict for VAL in state 137 resolved as shift
WARNING: shift/reduce conflict for VAR in state 137 resolved as shift
WARNING: shift/reduce conflict for FUN in state 137 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 137 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 137 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 137 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 138 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 138 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 138 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 138 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 138 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 138 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 138 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 138 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 138 resolved as shift
WARNING: shift/reduce conflict for NOT in state 138 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 138 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 138 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 138 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 138 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 138 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 138 resolved as shift
WARNING: shift/reduce conflict for FOR in state 138 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 138 resolved as shift
WARNING: shift/reduce conflict for IF in state 138 resolved as shift
WARNING: shift/reduce conflict for DO in state 138 resolved as shift
WARNING: shift/reduce conflict for VAL in state 138 resolved as shift
WARNING: shift/reduce conflict for VAR in state 138 resolved as shift
WARNING: shift/reduce conflict for FUN in state 138 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 138 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 138 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 138 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 139 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 139 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 139 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 139 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 139 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 139 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 139 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 139 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 139 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 139 resolved as shift
WARNING: shift/reduce conflict for NOT in state 139 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 139 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 139 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 139 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 139 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 139 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 139 resolved as shift
WARNING: shift/reduce conflict for FOR in state 139 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 139 resolved as shift
WARNING: shift/reduce conflict for IF in state 139 resolved as shift
WARNING: shift/reduce conflict for DO in state 139 resolved as shift
WARNING: shift/reduce conflict for VAL in state 139 resolved as shift
WARNING: shift/reduce conflict for VAR in state 139 resolved as shift
WARNING: shift/reduce conflict for FUN in state 139 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 139 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 139 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 139 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 144 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 144 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 144 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 144 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 144 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 144 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 144 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 144 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 144 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 144 resolved as shift
WARNING: shift/reduce conflict for NOT in state 144 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 144 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 144 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 144 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 144 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 144 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 144 resolved as shift
WARNING: shift/reduce conflict for FOR in state 144 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 144 resolved as shift
WARNING: shift/reduce conflict for IF in state 144 resolved as shift
WARNING: shift/reduce conflict for DO in state 144 resolved as shift
WARNING: shift/reduce conflict for VAL in state 144 resolved as shift
WARNING: shift/reduce conflict for VAR in state 144 resolved as shift
WARNING: shift/reduce conflict for FUN in state 144 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 144 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 144 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 144 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 159 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 159 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 159 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 159 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 159 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 159 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 159 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 159 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 159 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 159 resolved as shift
WARNING: shift/reduce conflict for NOT in state 159 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 159 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 159 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 159 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 159 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 159 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 159 resolved as shift
WARNING: shift/reduce conflict for FOR in state 159 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for DO in state 159 resolved as shift
WARNING: shift/reduce conflict for VAL in state 159 resolved as shift
WARNING: shift/reduce conflict for VAR in state 159 resolved as shift
WARNING: shift/reduce conflict for FUN in state 159 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 159 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 159 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 159 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 161 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 161 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 161 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 161 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 161 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 161 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 161 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 161 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 161 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 161 resolved as shift
WARNING: shift/reduce conflict for NOT in state 161 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 161 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 161 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 161 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 161 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 161 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 161 resolved as shift
WARNING: shift/reduce conflict for FOR in state 161 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 161 resolved as shift
WARNING: shift/reduce conflict for IF in state 161 resolved as shift
WARNING: shift/reduce conflict for DO in state 161 resolved as shift
WARNING: shift/reduce conflict for VAL in state 161 resolved as shift
WARNING: shift/reduce conflict for VAR in state 161 resolved as shift
WARNING: shift/reduce conflict for FUN in state 161 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 161 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 161 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 161 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 164 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 174 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 174 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 174 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 174 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 174 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 174 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 174 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 174 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 174 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 174 resolved as shift
WARNING: shift/reduce conflict for NOT in state 174 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 174 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 174 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 174 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 174 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 174 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 174 resolved as shift
WARNING: shift/reduce conflict for FOR in state 174 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 174 resolved as shift
WARNING: shift/reduce conflict for IF in state 174 resolved as shift
WARNING: shift/reduce conflict for DO in state 174 resolved as shift
WARNING: shift/reduce conflict for VAL in state 174 resolved as shift
WARNING: shift/reduce conflict for VAR in state 174 resolved as shift
WARNING: shift/reduce conflict for FUN in state 174 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 174 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 174 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 174 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 178 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 178 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 178 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 178 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 178 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 178 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 178 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 178 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 178 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 178 resolved as shift
WARNING: shift/reduce conflict for NOT in state 178 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 178 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 178 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 178 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 178 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 178 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 178 resolved as shift
WARNING: shift/reduce conflict for FOR in state 178 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 178 resolved as shift
WARNING: shift/reduce conflict for IF in state 178 resolved as shift
WARNING: shift/reduce conflict for DO in state 178 resolved as shift
WARNING: shift/reduce conflict for VAL in state 178 resolved as shift
WARNING: shift/reduce conflict for VAR in state 178 resolved as shift
WARNING: shift/reduce conflict for FUN in state 178 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 178 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 178 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 178 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 193 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 193 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 193 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 193 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 193 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 193 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 193 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 193 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 193 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 193 resolved as shift
WARNING: shift/reduce conflict for NOT in state 193 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 193 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 193 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 193 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 193 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 193 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 193 resolved as shift
WARNING: shift/reduce conflict for FOR in state 193 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 193 resolved as shift
WARNING: shift/reduce conflict for IF in state 193 resolved as shift
WARNING: shift/reduce conflict for DO in state 193 resolved as shift
WARNING: shift/reduce conflict for VAL in state 193 resolved as shift
WARNING: shift/reduce conflict for VAR in state 193 resolved as shift
WARNING: shift/reduce conflict for FUN in state 193 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 193 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 193 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 193 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 211 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 211 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 211 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 211 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 211 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 211 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 211 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 211 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 211 resolved as shift
WARNING: shift/reduce conflict for NOT in state 211 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 211 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 211 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 211 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 211 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 211 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 211 resolved as shift
WARNING: shift/reduce conflict for FOR in state 211 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 211 resolved as shift
WARNING: shift/reduce conflict for IF in state 211 resolved as shift
WARNING: shift/reduce conflict for DO in state 211 resolved as shift
WARNING: shift/reduce conflict for VAL in state 211 resolved as shift
WARNING: shift/reduce conflict for VAR in state 211 resolved as shift
WARNING: shift/reduce conflict for FUN in state 211 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 211 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 211 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 211 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 216 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 216 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 216 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 216 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 216 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 216 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 216 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 216 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 216 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 216 resolved as shift
WARNING: shift/reduce conflict for NOT in state 216 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 216 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 216 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 216 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 216 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 216 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 216 resolved as shift
WARNING: shift/reduce conflict for FOR in state 216 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 216 resolved as shift
WARNING: shift/reduce conflict for IF in state 216 resolved as shift
WARNING: shift/reduce conflict for DO in state 216 resolved as shift
WARNING: shift/reduce conflict for VAL in state 216 resolved as shift
WARNING: shift/reduce conflict for VAR in state 216 resolved as shift
WARNING: shift/reduce conflict for FUN in state 216 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 216 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 216 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 216 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 221 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 221 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 221 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 221 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 221 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 221 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 221 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 221 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 221 resolved as shift
WARNING: shift/reduce conflict for NOT in state 221 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 221 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 221 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 221 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 221 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 221 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 221 resolved as shift
WARNING: shift/reduce conflict for FOR in state 221 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 221 resolved as shift
WARNING: shift/reduce conflict for IF in state 221 resolved as shift
WARNING: shift/reduce conflict for DO in state 221 resolved as shift
WARNING: shift/reduce conflict for VAL in state 221 resolved as shift
WARNING: shift/reduce conflict for VAR in state 221 resolved as shift
WARNING: shift/reduce conflict for FUN in state 221 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 221 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 221 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 221 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 223 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 223 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 223 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 223 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 223 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 223 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 223 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 223 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 223 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 223 resolved as shift
WARNING: shift/reduce conflict for NOT in state 223 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 223 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 223 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 223 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 223 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 223 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 223 resolved as shift
WARNING: shift/reduce conflict for FOR in state 223 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 223 resolved as shift
WARNING: shift/reduce conflict for IF in state 223 resolved as shift
WARNING: shift/reduce conflict for DO in state 223 resolved as shift
WARNING: shift/reduce conflict for VAL in state 223 resolved as shift
WARNING: shift/reduce conflict for VAR in state 223 resolved as shift
WARNING: shift/reduce conflict for FUN in state 223 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 223 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 223 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 223 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 226 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 226 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 226 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 226 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 226 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 226 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 226 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 226 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 226 resolved as shift
WARNING: shift/reduce conflict for NOT in state 226 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 226 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 226 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 226 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 226 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 226 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 226 resolved as shift
WARNING: shift/reduce conflict for FOR in state 226 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 226 resolved as shift
WARNING: shift/reduce conflict for IF in state 226 resolved as shift
WARNING: shift/reduce conflict for DO in state 226 resolved as shift
WARNING: shift/reduce conflict for VAL in state 226 resolved as shift
WARNING: shift/reduce conflict for VAR in state 226 resolved as shift
WARNING: shift/reduce conflict for FUN in state 226 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 226 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 226 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 226 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 227 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 227 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 227 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 227 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 227 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 227 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 227 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 227 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 227 resolved as shift
WARNING: shift/reduce conflict for NOT in state 227 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 227 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 227 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 227 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 227 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 227 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 227 resolved as shift
WARNING: shift/reduce conflict for FOR in state 227 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 227 resolved as shift
WARNING: shift/reduce conflict for IF in state 227 resolved as shift
WARNING: shift/reduce conflict for DO in state 227 resolved as shift
WARNING: shift/reduce conflict for VAL in state 227 resolved as shift
WARNING: shift/reduce conflict for VAR in state 227 resolved as shift
WARNING: shift/reduce conflict for FUN in state 227 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 227 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 227 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 227 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 229 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 229 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 229 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 229 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 229 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 229 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 229 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 229 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 229 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 229 resolved as shift
WARNING: shift/reduce conflict for NOT in state 229 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 229 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 229 resolved as shift
WARNING: shift/reduce conflict for FOR in state 229 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 229 resolved as shift
WARNING: shift/reduce conflict for IF in state 229 resolved as shift
WARNING: shift/reduce conflict for DO in state 229 resolved as shift
WARNING: shift/reduce conflict for VAL in state 229 resolved as shift
WARNING: shift/reduce conflict for VAR in state 229 resolved as shift
WARNING: shift/reduce conflict for FUN in state 229 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 229 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 229 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 229 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 235 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 235 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 235 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 235 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 235 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 235 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 235 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 235 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 235 resolved as shift
WARNING: shift/reduce conflict for NOT in state 235 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 235 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 235 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 235 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 235 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 235 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 235 resolved as shift
WARNING: shift/reduce conflict for FOR in state 235 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 235 resolved as shift
WARNING: shift/reduce conflict for IF in state 235 resolved as shift
WARNING: shift/reduce conflict for DO in state 235 resolved as shift
WARNING: shift/reduce conflict for VAL in state 235 resolved as shift
WARNING: shift/reduce conflict for VAR in state 235 resolved as shift
WARNING: shift/reduce conflict for FUN in state 235 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 235 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 235 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 235 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 236 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 236 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 236 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 236 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 236 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 236 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 236 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 236 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 236 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 236 resolved as shift
WARNING: shift/reduce conflict for NOT in state 236 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 236 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 236 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 236 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 236 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 236 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 236 resolved as shift
WARNING: shift/reduce conflict for FOR in state 236 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 236 resolved as shift
WARNING: shift/reduce conflict for IF in state 236 resolved as shift
WARNING: shift/reduce conflict for DO in state 236 resolved as shift
WARNING: shift/reduce conflict for VAL in state 236 resolved as shift
WARNING: shift/reduce conflict for VAR in state 236 resolved as shift
WARNING: shift/reduce conflict for FUN in state 236 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 236 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 236 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 236 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 237 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 237 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 237 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 237 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 237 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 237 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 237 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 237 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 237 resolved as shift
WARNING: shift/reduce conflict for NOT in state 237 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 237 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 237 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 237 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 237 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 237 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 237 resolved as shift
WARNING: shift/reduce conflict for FOR in state 237 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 237 resolved as shift
WARNING: shift/reduce conflict for IF in state 237 resolved as shift
WARNING: shift/reduce conflict for DO in state 237 resolved as shift
WARNING: shift/reduce conflict for VAL in state 237 resolved as shift
WARNING: shift/reduce conflict for VAR in state 237 resolved as shift
WARNING: shift/reduce conflict for FUN in state 237 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 237 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 237 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 237 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 240 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 240 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 240 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 240 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 240 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 240 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 240 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 240 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 240 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 240 resolved as shift
WARNING: shift/reduce conflict for NOT in state 240 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 240 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 240 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 240 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 240 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 240 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 240 resolved as shift
WARNING: shift/reduce conflict for FOR in state 240 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 240 resolved as shift
WARNING: shift/reduce conflict for IF in state 240 resolved as shift
WARNING: shift/reduce conflict for DO in state 240 resolved as shift
WARNING: shift/reduce conflict for VAL in state 240 resolved as shift
WARNING: shift/reduce conflict for VAR in state 240 resolved as shift
WARNING: shift/reduce conflict for FUN in state 240 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 240 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 240 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 240 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 241 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 241 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 241 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 241 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 241 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 241 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 241 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 241 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 241 resolved as shift
WARNING: shift/reduce conflict for NOT in state 241 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 241 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 241 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 241 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 241 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 241 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 241 resolved as shift
WARNING: shift/reduce conflict for FOR in state 241 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 241 resolved as shift
WARNING: shift/reduce conflict for IF in state 241 resolved as shift
WARNING: shift/reduce conflict for DO in state 241 resolved as shift
WARNING: shift/reduce conflict for VAL in state 241 resolved as shift
WARNING: shift/reduce conflict for VAR in state 241 resolved as shift
WARNING: shift/reduce conflict for FUN in state 241 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 241 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 241 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 241 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 241 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 241 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 241 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 241 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 241 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 241 resolved as shift
WARNING: shift/reduce conflict for NOT in state 241 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 241 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 241 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 241 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 241 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 241 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 241 resolved as shift
WARNING: shift/reduce conflict for FOR in state 241 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 241 resolved as shift
WARNING: shift/reduce conflict for IF in state 241 resolved as shift
WARNING: shift/reduce conflict for DO in state 241 resolved as shift
WARNING: shift/reduce conflict for VAL in state 241 resolved as shift
WARNING: shift/reduce conflict for VAR in state 241 resolved as shift
WARNING: shift/reduce conflict for FUN in state 241 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 241 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 241 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 241 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 245 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 245 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 245 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 245 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 245 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 245 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 245 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 245 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 245 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 245 resolved as shift
WARNING: shift/reduce conflict for NOT in state 245 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 245 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 245 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 245 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 245 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 245 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 245 resolved as shift
WARNING: shift/reduce conflict for FOR in state 245 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 245 resolved as shift
WARNING: shift/reduce conflict for IF in state 245 resolved as shift
WARNING: shift/reduce conflict for DO in state 245 resolved as shift
WARNING: shift/reduce conflict for VAL in state 245 resolved as shift
WARNING: shift/reduce conflict for VAR in state 245 resolved as shift
WARNING: shift/reduce conflict for FUN in state 245 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 245 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 245 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 245 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 247 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 247 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 247 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 247 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 247 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 247 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 247 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 247 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 247 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 247 resolved as shift
WARNING: shift/reduce conflict for NOT in state 247 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 247 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 247 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 247 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 247 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 247 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 247 resolved as shift
WARNING: shift/reduce conflict for FOR in state 247 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 247 resolved as shift
WARNING: shift/reduce conflict for IF in state 247 resolved as shift
WARNING: shift/reduce conflict for DO in state 247 resolved as shift
WARNING: shift/reduce conflict for VAL in state 247 resolved as shift
WARNING: shift/reduce conflict for VAR in state 247 resolved as shift
WARNING: shift/reduce conflict for FUN in state 247 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 247 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 247 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 247 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 252 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (programa -> sentencias)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 8 resolved using rule (sentencia -> condicion)
WARNING: rejected rule (expresion -> condicion) in state 8
WARNING: reduce/reduce conflict in state 23 resolved using rule (expresion -> TRUE)
WARNING: rejected rule (condicion -> TRUE) in state 23
WARNING: reduce/reduce conflict in state 24 resolved using rule (expresion -> FALSE)
WARNING: rejected rule (condicion -> FALSE) in state 24
WARNING: reduce/reduce conflict in state 61 resolved using rule (expresion -> condicion)
WARNING: rejected rule (condicion -> NOT condicion) in state 61
WARNING: reduce/reduce conflict in state 63 resolved using rule (expresion -> TRUE)
WARNING: rejected rule (condicion -> TRUE) in state 63
WARNING: reduce/reduce conflict in state 64 resolved using rule (expresion -> FALSE)
WARNING: rejected rule (condicion -> FALSE) in state 64
WARNING: reduce/reduce conflict in state 82 resolved using rule (expresion -> condicion)
WARNING: rejected rule (objetoRetorno -> condicion) in state 82
WARNING: reduce/reduce conflict in state 84 resolved using rule (valor -> TRUE)
WARNING: rejected rule (objetoRetorno -> TRUE) in state 84
WARNING: reduce/reduce conflict in state 84 resolved using rule (valor -> TRUE)
WARNING: rejected rule (condicion -> TRUE) in state 84
WARNING: reduce/reduce conflict in state 84 resolved using rule (expresion -> TRUE)
WARNING: rejected rule (condicion -> TRUE) in state 84
WARNING: reduce/reduce conflict in state 84 resolved using rule (valor -> TRUE)
WARNING: rejected rule (expresion -> TRUE) in state 84
WARNING: reduce/reduce conflict in state 85 resolved using rule (valor -> FALSE)
WARNING: rejected rule (objetoRetorno -> FALSE) in state 85
WARNING: reduce/reduce conflict in state 85 resolved using rule (valor -> FALSE)
WARNING: rejected rule (condicion -> FALSE) in state 85
WARNING: reduce/reduce conflict in state 85 resolved using rule (expresion -> FALSE)
WARNING: rejected rule (condicion -> FALSE) in state 85
WARNING: reduce/reduce conflict in state 85 resolved using rule (valor -> FALSE)
WARNING: rejected rule (expresion -> FALSE) in state 85
WARNING: reduce/reduce conflict in state 88 resolved using rule (valor -> NUMBER)
WARNING: rejected rule (expresion -> NUMBER) in state 88
WARNING: reduce/reduce conflict in state 89 resolved using rule (valor -> FLOAT)
WARNING: rejected rule (expresion -> FLOAT) in state 89
WARNING: reduce/reduce conflict in state 90 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expresion -> VARIABLE) in state 90
WARNING: reduce/reduce conflict in state 106 resolved using rule (expresion -> condicion)
WARNING: rejected rule (condicion -> condicion AND condicion) in state 106
WARNING: reduce/reduce conflict in state 107 resolved using rule (expresion -> condicion)
WARNING: rejected rule (condicion -> condicion OR condicion) in state 107
WARNING: reduce/reduce conflict in state 108 resolved using rule (asignacion -> VARIABLE ASIGN VARIABLE)
WARNING: rejected rule (expresion -> VARIABLE) in state 108
WARNING: reduce/reduce conflict in state 110 resolved using rule (asignacion -> VARIABLE ASIGN condicion)
WARNING: rejected rule (expresion -> condicion) in state 110
WARNING: reduce/reduce conflict in state 241 resolved using rule (empty -> <empty>)
WARNING: rejected rule (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias) in state 241
WARNING: Rule (condicion -> NOT condicion) is never reduced
WARNING: Rule (objetoRetorno -> condicion) is never reduced
WARNING: Rule (objetoRetorno -> TRUE) is never reduced
WARNING: Rule (objetoRetorno -> FALSE) is never reduced
WARNING: Rule (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias) is never reduced
