Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AS
    BOOLEAN
    BREAK
    BY
    BYTE
    CATCH
    CHAR
    COMMENTLINEA
    COMMENTMULTI
    COMPANION
    CONST
    CONTINUE
    CROSSINLINE
    DATA
    DELEGATE
    DIVASIGN
    DO
    DOLAR
    DOUBLE
    ENUM
    FIELD
    FINAL
    FINALLY
    GENERIC_TYPE
    IMPORT
    INFIX
    INIT
    INLINE
    INT
    INTERFACE
    INTERNAL
    INTERPOLACION
    IS
    LATEINIT
    LCOR
    LONG
    METHOD
    MODASIGN
    MULTASIGN
    NOINLINE
    NULL
    NULLABLE_TYPE
    OBJECT
    OPERATOR
    OUT
    OVERRIDE
    PACKAGE
    PRINTLN
    PRIVATE
    PROPERTY
    PROTECTED
    PUBLIC
    PUYCO
    RCOR
    REIFIED
    RESTASIGN
    SEALED
    SHORT
    SUMASIGN
    SUPER
    SUSPEND
    TAILREC
    THROW
    TRAILREC
    TRY
    TYPEALIAS
    TYPEOF
    WHEN
    WHERE
    YIELD

Grammar

Rule 0     S' -> programa
Rule 1     programa -> sentencias
Rule 2     sentencias -> sentencia
Rule 3     sentencias -> sentencias sentencia
Rule 4     empty -> <empty>
Rule 5     sentencia -> asignacion
Rule 6     sentencia -> impresion
Rule 7     sentencia -> impresion_vacia
Rule 8     sentencia -> expresion
Rule 9     sentencia -> condicion
Rule 10    sentencia -> estructura
Rule 11    sentencia -> declaracion_variable
Rule 12    sentencia -> funcion
Rule 13    sentencia -> empty
Rule 14    sentencia -> retorno
Rule 15    sentencia -> clase
Rule 16    sentencia -> constructorPri
Rule 17    declaracion_variable -> VAL VARIABLE ASIGN valor
Rule 18    declaracion_variable -> VAR VARIABLE ASIGN valor
Rule 19    declaracion_variable -> VAL VARIABLE ASIGN estructura
Rule 20    declaracion_variable -> VAR VARIABLE ASIGN estructura
Rule 21    declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto
Rule 22    declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto
Rule 23    asignacion -> VARIABLE ASIGN VARIABLE
Rule 24    asignacion -> VARIABLE ASIGN expresion
Rule 25    asignacion -> VARIABLE ASIGN condicion
Rule 26    asignacion -> VARIABLE ASIGN estructura
Rule 27    asignacion -> VARIABLE ASIGN creacionObjeto
Rule 28    impresion_vacia -> PRINT LPAREN RPAREN
Rule 29    impresion -> PRINT LPAREN repiteValores RPAREN
Rule 30    valor -> NUMBER
Rule 31    valor -> FLOAT
Rule 32    valor -> VARIABLE
Rule 33    valor -> STRING
Rule 34    valor -> TRUE
Rule 35    valor -> FALSE
Rule 36    repiteValores -> valor COMMA repiteValores
Rule 37    repiteValores -> valor
Rule 38    solicitud -> INPUT LPAREN DOUBLE_QUOTA DOUBLE_QUOTA RPAREN
Rule 39    expresion -> expresion PLUS expresion
Rule 40    expresion -> expresion MINUS expresion
Rule 41    expresion -> expresion TIMES expresion
Rule 42    expresion -> expresion DIVIDE expresion
Rule 43    expresion -> expresion MOD expresion
Rule 44    expresion -> LPAREN expresion RPAREN
Rule 45    expresion -> NUMBER
Rule 46    expresion -> FLOAT
Rule 47    expresion -> TRUE
Rule 48    expresion -> FALSE
Rule 49    expresion -> condicion
Rule 50    expresion -> VARIABLE
Rule 51    condicion -> expresion GREATER expresion
Rule 52    condicion -> expresion LESS expresion
Rule 53    condicion -> expresion GREATER_EQUALS expresion
Rule 54    condicion -> expresion LESS_EQUALS expresion
Rule 55    condicion -> expresion EQUALS expresion
Rule 56    condicion -> expresion NOT_EQUALS expresion
Rule 57    condicion -> condicion AND condicion
Rule 58    condicion -> condicion OR condicion
Rule 59    condicion -> NOT condicion
Rule 60    condicion -> NOT expresion
Rule 61    condicion -> TRUE
Rule 62    condicion -> FALSE
Rule 63    condicion -> LPAREN condicion RPAREN
Rule 64    estructura -> LISTOF LPAREN repiteValores RPAREN
Rule 65    estructura -> LISTOF LPAREN RPAREN
Rule 66    estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN
Rule 67    estructura -> MUTABLELISTOF LPAREN RPAREN
Rule 68    estructura -> MAPOF LPAREN pareskv_mapa RPAREN
Rule 69    estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
Rule 70    pareskv_mapa -> valor TO_FROM_KV valor COMMA pareskv_mapa
Rule 71    pareskv_mapa -> valor TO_FROM_KV valor
Rule 72    estructura -> SETOF LPAREN repiteValores RPAREN
Rule 73    estructura -> SETOF LPAREN RPAREN
Rule 74    estructura -> MUTABLESETOF LPAREN repiteValores RPAREN
Rule 75    estructura -> MUTABLESETOF LPAREN RPAREN
Rule 76    retorno -> RETURN objetoRetorno
Rule 77    objetoRetorno -> valor
Rule 78    objetoRetorno -> condicion
Rule 79    objetoRetorno -> expresion
Rule 80    objetoRetorno -> TRUE
Rule 81    objetoRetorno -> FALSE
Rule 82    objetoRetorno -> estructura
Rule 83    objetoRetorno -> empty
Rule 84    estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
Rule 85    estructura -> WHILE condicion LLLAVE sentencias RLLAVE
Rule 86    estructura -> IF condicion LLLAVE sentencias RLLAVE
Rule 87    estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
Rule 88    estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf
Rule 89    estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
Rule 90    repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE
Rule 91    repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf
Rule 92    parametros -> VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
Rule 93    parametros -> VARIABLE COLON VARIABLE ASIGN valor
Rule 94    parametros -> VARIABLE COLON VARIABLE COMMA parametros
Rule 95    parametros -> VARIABLE COLON VARIABLE
Rule 96    parametros -> empty
Rule 97    funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
Rule 98    funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
Rule 99    funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
Rule 100   repetirThis -> THIS DOT VARIABLE ASIGN valor repetirThis
Rule 101   repetirThis -> THIS DOT VARIABLE ASIGN valor
Rule 102   formarThis -> THIS LPAREN repiteValores RPAREN
Rule 103   repetirDeclaracion -> declaracion_variable repetirDeclaracion
Rule 104   repetirDeclaracion -> declaracion_variable
Rule 105   creacionObjeto -> VARIABLE LPAREN RPAREN
Rule 106   creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN
Rule 107   clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE
Rule 108   clase -> CLASS VARIABLE LLLAVE RLLAVE
Rule 109   clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
Rule 110   clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE
Rule 111   clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
Rule 112   clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
Rule 113   constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
Rule 114   constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
Rule 115   constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE
Rule 116   constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE
Rule 117   constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON LLLAVE repetirThis RLLAVE
Rule 118   constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE RLLAVE
Rule 119   constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON LLLAVE RLLAVE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 57
AS                   : 
ASIGN                : 17 18 19 20 21 22 23 24 25 26 27 92 93 99 100 101
BOOLEAN              : 
BREAK                : 
BY                   : 
BYTE                 : 
CATCH                : 
CHAR                 : 
CLASS                : 107 108 109 110 111 112 113 114 115
COLON                : 92 93 94 95 97 99 111 112 116 117 118 119
COMMA                : 36 70 92 94
COMMENTLINEA         : 
COMMENTMULTI         : 
COMPANION            : 
CONST                : 
CONSTRUCTOR          : 116 117 118 119
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DELEGATE             : 
DIVASIGN             : 
DIVIDE               : 42
DO                   : 
DOLAR                : 
DOT                  : 100 101
DOUBLE               : 
DOUBLE_QUOTA         : 38 38
ELSE                 : 87 89 90 91
ENUM                 : 
EQUALS               : 55
FALSE                : 35 48 62 81
FIELD                : 
FINAL                : 
FINALLY              : 
FLOAT                : 31 46
FOR                  : 84
FUN                  : 97 98 99
GENERIC_TYPE         : 
GREATER              : 51
GREATER_EQUALS       : 53
IF                   : 86 87 88 89 90 91
IMPORT               : 
IN                   : 84
INFIX                : 
INIT                 : 
INLINE               : 
INPUT                : 38
INT                  : 
INTERFACE            : 
INTERNAL             : 
INTERPOLACION        : 
IS                   : 
LATEINIT             : 
LCOR                 : 
LESS                 : 52
LESS_EQUALS          : 54
LISTOF               : 64 65
LLLAVE               : 84 85 86 87 87 88 89 89 90 91 97 98 107 108 109 110 111 112 113 114 115 116 117 118 119
LONG                 : 
LPAREN               : 28 29 38 44 63 64 65 66 67 68 69 72 73 74 75 84 97 98 99 102 105 106 111 112 113 114 115 116 117 118 119
MAPOF                : 68
METHOD               : 
MINUS                : 40
MOD                  : 43
MODASIGN             : 
MULTASIGN            : 
MUTABLELISTOF        : 66 67
MUTABLEMAPOF         : 69
MUTABLESETOF         : 74 75
NOINLINE             : 
NOT                  : 59 60
NOT_EQUALS           : 56
NULL                 : 
NULLABLE_TYPE        : 
NUMBER               : 30 45
OBJECT               : 
OPEN                 : 109 110
OPERATOR             : 
OR                   : 58
OUT                  : 
OVERRIDE             : 
PACKAGE              : 
PLUS                 : 39
PRINT                : 28 29
PRINTLN              : 
PRIVATE              : 
PROPERTY             : 
PROTECTED            : 
PUBLIC               : 
PUYCO                : 
RANGE_TO             : 84
RCOR                 : 
REIFIED              : 
RESTASIGN            : 
RETURN               : 76
RLLAVE               : 84 85 86 87 87 88 89 89 90 91 97 98 107 108 109 110 111 112 113 114 115 116 117 118 119
RPAREN               : 28 29 38 44 63 64 65 66 67 68 69 72 73 74 75 84 97 98 99 102 105 106 111 112 113 114 115 116 117 118 119
SEALED               : 
SETOF                : 72 73
SHORT                : 
STRING               : 33
SUMASIGN             : 
SUPER                : 
SUSPEND              : 
TAILREC              : 
THIS                 : 100 101 102
THROW                : 
TIMES                : 41
TO_FROM_KV           : 70 71
TRAILREC             : 
TRUE                 : 34 47 61 80
TRY                  : 
TYPEALIAS            : 
TYPEOF               : 
VAL                  : 17 19 21
VAR                  : 18 20 22
VARIABLE             : 17 18 19 20 21 22 23 23 24 25 26 27 32 50 84 92 92 93 93 94 94 95 95 97 97 98 99 99 100 101 105 106 107 108 109 110 111 111 112 112 113 114 115
WHEN                 : 
WHERE                : 
WHILE                : 85
YIELD                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 5
clase                : 15
condicion            : 9 25 49 57 57 58 58 59 63 78 85 86 87 88 89 90 91
constructorPri       : 16
constructorSec       : 115
creacionObjeto       : 21 22 27
declaracion_variable : 11 103 104
empty                : 13 83 96 98
estructura           : 10 19 20 26 82
expresion            : 8 24 39 39 40 40 41 41 42 42 43 43 44 51 51 52 52 53 53 54 54 55 55 56 56 60 79
formarThis           : 116 118
funcion              : 12
impresion            : 6
impresion_vacia      : 7
objetoRetorno        : 76
parametros           : 92 94 97 98 99 113 114 115 116 117 118 119
pareskv_mapa         : 68 69 70
programa             : 0
repetirDeclaracion   : 103 113 115
repetirElseIf        : 87 88 91
repetirThis          : 100 116 117
repiteValores        : 29 36 64 66 72 74 102 106
retorno              : 14
sentencia            : 2 3
sentencias           : 1 3 84 85 86 87 87 88 89 89 90 91 97 99 107 109 111
solicitud            : 
valor                : 17 18 36 37 70 70 71 71 77 84 84 92 93 100 101

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . sentencias
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    $end            reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    programa                       shift and go to state 1
    sentencias                     shift and go to state 2
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 1

    (0) S' -> programa .



state 2

    (1) programa -> sentencias .
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (programa -> sentencias .)
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    $end            reduce using rule 1 (programa -> sentencias .)
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]
  ! $end            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 3

    (2) sentencias -> sentencia .

    VARIABLE        reduce using rule 2 (sentencias -> sentencia .)
    PRINT           reduce using rule 2 (sentencias -> sentencia .)
    LPAREN          reduce using rule 2 (sentencias -> sentencia .)
    NUMBER          reduce using rule 2 (sentencias -> sentencia .)
    FLOAT           reduce using rule 2 (sentencias -> sentencia .)
    TRUE            reduce using rule 2 (sentencias -> sentencia .)
    FALSE           reduce using rule 2 (sentencias -> sentencia .)
    NOT             reduce using rule 2 (sentencias -> sentencia .)
    LISTOF          reduce using rule 2 (sentencias -> sentencia .)
    MUTABLELISTOF   reduce using rule 2 (sentencias -> sentencia .)
    MAPOF           reduce using rule 2 (sentencias -> sentencia .)
    MUTABLEMAPOF    reduce using rule 2 (sentencias -> sentencia .)
    SETOF           reduce using rule 2 (sentencias -> sentencia .)
    MUTABLESETOF    reduce using rule 2 (sentencias -> sentencia .)
    FOR             reduce using rule 2 (sentencias -> sentencia .)
    WHILE           reduce using rule 2 (sentencias -> sentencia .)
    IF              reduce using rule 2 (sentencias -> sentencia .)
    VAL             reduce using rule 2 (sentencias -> sentencia .)
    VAR             reduce using rule 2 (sentencias -> sentencia .)
    FUN             reduce using rule 2 (sentencias -> sentencia .)
    RETURN          reduce using rule 2 (sentencias -> sentencia .)
    CLASS           reduce using rule 2 (sentencias -> sentencia .)
    OPEN            reduce using rule 2 (sentencias -> sentencia .)
    $end            reduce using rule 2 (sentencias -> sentencia .)
    RLLAVE          reduce using rule 2 (sentencias -> sentencia .)


state 4

    (5) sentencia -> asignacion .

    VARIABLE        reduce using rule 5 (sentencia -> asignacion .)
    PRINT           reduce using rule 5 (sentencia -> asignacion .)
    LPAREN          reduce using rule 5 (sentencia -> asignacion .)
    NUMBER          reduce using rule 5 (sentencia -> asignacion .)
    FLOAT           reduce using rule 5 (sentencia -> asignacion .)
    TRUE            reduce using rule 5 (sentencia -> asignacion .)
    FALSE           reduce using rule 5 (sentencia -> asignacion .)
    NOT             reduce using rule 5 (sentencia -> asignacion .)
    LISTOF          reduce using rule 5 (sentencia -> asignacion .)
    MUTABLELISTOF   reduce using rule 5 (sentencia -> asignacion .)
    MAPOF           reduce using rule 5 (sentencia -> asignacion .)
    MUTABLEMAPOF    reduce using rule 5 (sentencia -> asignacion .)
    SETOF           reduce using rule 5 (sentencia -> asignacion .)
    MUTABLESETOF    reduce using rule 5 (sentencia -> asignacion .)
    FOR             reduce using rule 5 (sentencia -> asignacion .)
    WHILE           reduce using rule 5 (sentencia -> asignacion .)
    IF              reduce using rule 5 (sentencia -> asignacion .)
    VAL             reduce using rule 5 (sentencia -> asignacion .)
    VAR             reduce using rule 5 (sentencia -> asignacion .)
    FUN             reduce using rule 5 (sentencia -> asignacion .)
    RETURN          reduce using rule 5 (sentencia -> asignacion .)
    CLASS           reduce using rule 5 (sentencia -> asignacion .)
    OPEN            reduce using rule 5 (sentencia -> asignacion .)
    $end            reduce using rule 5 (sentencia -> asignacion .)
    RLLAVE          reduce using rule 5 (sentencia -> asignacion .)


state 5

    (6) sentencia -> impresion .

    VARIABLE        reduce using rule 6 (sentencia -> impresion .)
    PRINT           reduce using rule 6 (sentencia -> impresion .)
    LPAREN          reduce using rule 6 (sentencia -> impresion .)
    NUMBER          reduce using rule 6 (sentencia -> impresion .)
    FLOAT           reduce using rule 6 (sentencia -> impresion .)
    TRUE            reduce using rule 6 (sentencia -> impresion .)
    FALSE           reduce using rule 6 (sentencia -> impresion .)
    NOT             reduce using rule 6 (sentencia -> impresion .)
    LISTOF          reduce using rule 6 (sentencia -> impresion .)
    MUTABLELISTOF   reduce using rule 6 (sentencia -> impresion .)
    MAPOF           reduce using rule 6 (sentencia -> impresion .)
    MUTABLEMAPOF    reduce using rule 6 (sentencia -> impresion .)
    SETOF           reduce using rule 6 (sentencia -> impresion .)
    MUTABLESETOF    reduce using rule 6 (sentencia -> impresion .)
    FOR             reduce using rule 6 (sentencia -> impresion .)
    WHILE           reduce using rule 6 (sentencia -> impresion .)
    IF              reduce using rule 6 (sentencia -> impresion .)
    VAL             reduce using rule 6 (sentencia -> impresion .)
    VAR             reduce using rule 6 (sentencia -> impresion .)
    FUN             reduce using rule 6 (sentencia -> impresion .)
    RETURN          reduce using rule 6 (sentencia -> impresion .)
    CLASS           reduce using rule 6 (sentencia -> impresion .)
    OPEN            reduce using rule 6 (sentencia -> impresion .)
    $end            reduce using rule 6 (sentencia -> impresion .)
    RLLAVE          reduce using rule 6 (sentencia -> impresion .)


state 6

    (7) sentencia -> impresion_vacia .

    VARIABLE        reduce using rule 7 (sentencia -> impresion_vacia .)
    PRINT           reduce using rule 7 (sentencia -> impresion_vacia .)
    LPAREN          reduce using rule 7 (sentencia -> impresion_vacia .)
    NUMBER          reduce using rule 7 (sentencia -> impresion_vacia .)
    FLOAT           reduce using rule 7 (sentencia -> impresion_vacia .)
    TRUE            reduce using rule 7 (sentencia -> impresion_vacia .)
    FALSE           reduce using rule 7 (sentencia -> impresion_vacia .)
    NOT             reduce using rule 7 (sentencia -> impresion_vacia .)
    LISTOF          reduce using rule 7 (sentencia -> impresion_vacia .)
    MUTABLELISTOF   reduce using rule 7 (sentencia -> impresion_vacia .)
    MAPOF           reduce using rule 7 (sentencia -> impresion_vacia .)
    MUTABLEMAPOF    reduce using rule 7 (sentencia -> impresion_vacia .)
    SETOF           reduce using rule 7 (sentencia -> impresion_vacia .)
    MUTABLESETOF    reduce using rule 7 (sentencia -> impresion_vacia .)
    FOR             reduce using rule 7 (sentencia -> impresion_vacia .)
    WHILE           reduce using rule 7 (sentencia -> impresion_vacia .)
    IF              reduce using rule 7 (sentencia -> impresion_vacia .)
    VAL             reduce using rule 7 (sentencia -> impresion_vacia .)
    VAR             reduce using rule 7 (sentencia -> impresion_vacia .)
    FUN             reduce using rule 7 (sentencia -> impresion_vacia .)
    RETURN          reduce using rule 7 (sentencia -> impresion_vacia .)
    CLASS           reduce using rule 7 (sentencia -> impresion_vacia .)
    OPEN            reduce using rule 7 (sentencia -> impresion_vacia .)
    $end            reduce using rule 7 (sentencia -> impresion_vacia .)
    RLLAVE          reduce using rule 7 (sentencia -> impresion_vacia .)


state 7

    (8) sentencia -> expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

    VARIABLE        reduce using rule 8 (sentencia -> expresion .)
    PRINT           reduce using rule 8 (sentencia -> expresion .)
    LPAREN          reduce using rule 8 (sentencia -> expresion .)
    NUMBER          reduce using rule 8 (sentencia -> expresion .)
    FLOAT           reduce using rule 8 (sentencia -> expresion .)
    TRUE            reduce using rule 8 (sentencia -> expresion .)
    FALSE           reduce using rule 8 (sentencia -> expresion .)
    NOT             reduce using rule 8 (sentencia -> expresion .)
    LISTOF          reduce using rule 8 (sentencia -> expresion .)
    MUTABLELISTOF   reduce using rule 8 (sentencia -> expresion .)
    MAPOF           reduce using rule 8 (sentencia -> expresion .)
    MUTABLEMAPOF    reduce using rule 8 (sentencia -> expresion .)
    SETOF           reduce using rule 8 (sentencia -> expresion .)
    MUTABLESETOF    reduce using rule 8 (sentencia -> expresion .)
    FOR             reduce using rule 8 (sentencia -> expresion .)
    WHILE           reduce using rule 8 (sentencia -> expresion .)
    IF              reduce using rule 8 (sentencia -> expresion .)
    VAL             reduce using rule 8 (sentencia -> expresion .)
    VAR             reduce using rule 8 (sentencia -> expresion .)
    FUN             reduce using rule 8 (sentencia -> expresion .)
    RETURN          reduce using rule 8 (sentencia -> expresion .)
    CLASS           reduce using rule 8 (sentencia -> expresion .)
    OPEN            reduce using rule 8 (sentencia -> expresion .)
    $end            reduce using rule 8 (sentencia -> expresion .)
    RLLAVE          reduce using rule 8 (sentencia -> expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50


state 8

    (9) sentencia -> condicion .
    (49) expresion -> condicion .
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion

  ! reduce/reduce conflict for VARIABLE resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for NOT resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for LISTOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for MAPOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for SETOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for IF resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for VAL resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for VAR resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for FUN resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for CLASS resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for OPEN resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for $end resolved using rule 9 (sentencia -> condicion .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 9 (sentencia -> condicion .)
    VARIABLE        reduce using rule 9 (sentencia -> condicion .)
    PRINT           reduce using rule 9 (sentencia -> condicion .)
    LPAREN          reduce using rule 9 (sentencia -> condicion .)
    NUMBER          reduce using rule 9 (sentencia -> condicion .)
    FLOAT           reduce using rule 9 (sentencia -> condicion .)
    TRUE            reduce using rule 9 (sentencia -> condicion .)
    FALSE           reduce using rule 9 (sentencia -> condicion .)
    NOT             reduce using rule 9 (sentencia -> condicion .)
    LISTOF          reduce using rule 9 (sentencia -> condicion .)
    MUTABLELISTOF   reduce using rule 9 (sentencia -> condicion .)
    MAPOF           reduce using rule 9 (sentencia -> condicion .)
    MUTABLEMAPOF    reduce using rule 9 (sentencia -> condicion .)
    SETOF           reduce using rule 9 (sentencia -> condicion .)
    MUTABLESETOF    reduce using rule 9 (sentencia -> condicion .)
    FOR             reduce using rule 9 (sentencia -> condicion .)
    WHILE           reduce using rule 9 (sentencia -> condicion .)
    IF              reduce using rule 9 (sentencia -> condicion .)
    VAL             reduce using rule 9 (sentencia -> condicion .)
    VAR             reduce using rule 9 (sentencia -> condicion .)
    FUN             reduce using rule 9 (sentencia -> condicion .)
    RETURN          reduce using rule 9 (sentencia -> condicion .)
    CLASS           reduce using rule 9 (sentencia -> condicion .)
    OPEN            reduce using rule 9 (sentencia -> condicion .)
    $end            reduce using rule 9 (sentencia -> condicion .)
    RLLAVE          reduce using rule 9 (sentencia -> condicion .)
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    AND             shift and go to state 51
    OR              shift and go to state 52

  ! VARIABLE        [ reduce using rule 49 (expresion -> condicion .) ]
  ! PRINT           [ reduce using rule 49 (expresion -> condicion .) ]
  ! LPAREN          [ reduce using rule 49 (expresion -> condicion .) ]
  ! NUMBER          [ reduce using rule 49 (expresion -> condicion .) ]
  ! FLOAT           [ reduce using rule 49 (expresion -> condicion .) ]
  ! TRUE            [ reduce using rule 49 (expresion -> condicion .) ]
  ! FALSE           [ reduce using rule 49 (expresion -> condicion .) ]
  ! NOT             [ reduce using rule 49 (expresion -> condicion .) ]
  ! LISTOF          [ reduce using rule 49 (expresion -> condicion .) ]
  ! MUTABLELISTOF   [ reduce using rule 49 (expresion -> condicion .) ]
  ! MAPOF           [ reduce using rule 49 (expresion -> condicion .) ]
  ! MUTABLEMAPOF    [ reduce using rule 49 (expresion -> condicion .) ]
  ! SETOF           [ reduce using rule 49 (expresion -> condicion .) ]
  ! MUTABLESETOF    [ reduce using rule 49 (expresion -> condicion .) ]
  ! FOR             [ reduce using rule 49 (expresion -> condicion .) ]
  ! WHILE           [ reduce using rule 49 (expresion -> condicion .) ]
  ! IF              [ reduce using rule 49 (expresion -> condicion .) ]
  ! VAL             [ reduce using rule 49 (expresion -> condicion .) ]
  ! VAR             [ reduce using rule 49 (expresion -> condicion .) ]
  ! FUN             [ reduce using rule 49 (expresion -> condicion .) ]
  ! RETURN          [ reduce using rule 49 (expresion -> condicion .) ]
  ! CLASS           [ reduce using rule 49 (expresion -> condicion .) ]
  ! OPEN            [ reduce using rule 49 (expresion -> condicion .) ]
  ! $end            [ reduce using rule 49 (expresion -> condicion .) ]
  ! RLLAVE          [ reduce using rule 49 (expresion -> condicion .) ]


state 9

    (10) sentencia -> estructura .

    VARIABLE        reduce using rule 10 (sentencia -> estructura .)
    PRINT           reduce using rule 10 (sentencia -> estructura .)
    LPAREN          reduce using rule 10 (sentencia -> estructura .)
    NUMBER          reduce using rule 10 (sentencia -> estructura .)
    FLOAT           reduce using rule 10 (sentencia -> estructura .)
    TRUE            reduce using rule 10 (sentencia -> estructura .)
    FALSE           reduce using rule 10 (sentencia -> estructura .)
    NOT             reduce using rule 10 (sentencia -> estructura .)
    LISTOF          reduce using rule 10 (sentencia -> estructura .)
    MUTABLELISTOF   reduce using rule 10 (sentencia -> estructura .)
    MAPOF           reduce using rule 10 (sentencia -> estructura .)
    MUTABLEMAPOF    reduce using rule 10 (sentencia -> estructura .)
    SETOF           reduce using rule 10 (sentencia -> estructura .)
    MUTABLESETOF    reduce using rule 10 (sentencia -> estructura .)
    FOR             reduce using rule 10 (sentencia -> estructura .)
    WHILE           reduce using rule 10 (sentencia -> estructura .)
    IF              reduce using rule 10 (sentencia -> estructura .)
    VAL             reduce using rule 10 (sentencia -> estructura .)
    VAR             reduce using rule 10 (sentencia -> estructura .)
    FUN             reduce using rule 10 (sentencia -> estructura .)
    RETURN          reduce using rule 10 (sentencia -> estructura .)
    CLASS           reduce using rule 10 (sentencia -> estructura .)
    OPEN            reduce using rule 10 (sentencia -> estructura .)
    $end            reduce using rule 10 (sentencia -> estructura .)
    RLLAVE          reduce using rule 10 (sentencia -> estructura .)


state 10

    (11) sentencia -> declaracion_variable .

    VARIABLE        reduce using rule 11 (sentencia -> declaracion_variable .)
    PRINT           reduce using rule 11 (sentencia -> declaracion_variable .)
    LPAREN          reduce using rule 11 (sentencia -> declaracion_variable .)
    NUMBER          reduce using rule 11 (sentencia -> declaracion_variable .)
    FLOAT           reduce using rule 11 (sentencia -> declaracion_variable .)
    TRUE            reduce using rule 11 (sentencia -> declaracion_variable .)
    FALSE           reduce using rule 11 (sentencia -> declaracion_variable .)
    NOT             reduce using rule 11 (sentencia -> declaracion_variable .)
    LISTOF          reduce using rule 11 (sentencia -> declaracion_variable .)
    MUTABLELISTOF   reduce using rule 11 (sentencia -> declaracion_variable .)
    MAPOF           reduce using rule 11 (sentencia -> declaracion_variable .)
    MUTABLEMAPOF    reduce using rule 11 (sentencia -> declaracion_variable .)
    SETOF           reduce using rule 11 (sentencia -> declaracion_variable .)
    MUTABLESETOF    reduce using rule 11 (sentencia -> declaracion_variable .)
    FOR             reduce using rule 11 (sentencia -> declaracion_variable .)
    WHILE           reduce using rule 11 (sentencia -> declaracion_variable .)
    IF              reduce using rule 11 (sentencia -> declaracion_variable .)
    VAL             reduce using rule 11 (sentencia -> declaracion_variable .)
    VAR             reduce using rule 11 (sentencia -> declaracion_variable .)
    FUN             reduce using rule 11 (sentencia -> declaracion_variable .)
    RETURN          reduce using rule 11 (sentencia -> declaracion_variable .)
    CLASS           reduce using rule 11 (sentencia -> declaracion_variable .)
    OPEN            reduce using rule 11 (sentencia -> declaracion_variable .)
    $end            reduce using rule 11 (sentencia -> declaracion_variable .)
    RLLAVE          reduce using rule 11 (sentencia -> declaracion_variable .)


state 11

    (12) sentencia -> funcion .

    VARIABLE        reduce using rule 12 (sentencia -> funcion .)
    PRINT           reduce using rule 12 (sentencia -> funcion .)
    LPAREN          reduce using rule 12 (sentencia -> funcion .)
    NUMBER          reduce using rule 12 (sentencia -> funcion .)
    FLOAT           reduce using rule 12 (sentencia -> funcion .)
    TRUE            reduce using rule 12 (sentencia -> funcion .)
    FALSE           reduce using rule 12 (sentencia -> funcion .)
    NOT             reduce using rule 12 (sentencia -> funcion .)
    LISTOF          reduce using rule 12 (sentencia -> funcion .)
    MUTABLELISTOF   reduce using rule 12 (sentencia -> funcion .)
    MAPOF           reduce using rule 12 (sentencia -> funcion .)
    MUTABLEMAPOF    reduce using rule 12 (sentencia -> funcion .)
    SETOF           reduce using rule 12 (sentencia -> funcion .)
    MUTABLESETOF    reduce using rule 12 (sentencia -> funcion .)
    FOR             reduce using rule 12 (sentencia -> funcion .)
    WHILE           reduce using rule 12 (sentencia -> funcion .)
    IF              reduce using rule 12 (sentencia -> funcion .)
    VAL             reduce using rule 12 (sentencia -> funcion .)
    VAR             reduce using rule 12 (sentencia -> funcion .)
    FUN             reduce using rule 12 (sentencia -> funcion .)
    RETURN          reduce using rule 12 (sentencia -> funcion .)
    CLASS           reduce using rule 12 (sentencia -> funcion .)
    OPEN            reduce using rule 12 (sentencia -> funcion .)
    $end            reduce using rule 12 (sentencia -> funcion .)
    RLLAVE          reduce using rule 12 (sentencia -> funcion .)


state 12

    (13) sentencia -> empty .

    VARIABLE        reduce using rule 13 (sentencia -> empty .)
    PRINT           reduce using rule 13 (sentencia -> empty .)
    LPAREN          reduce using rule 13 (sentencia -> empty .)
    NUMBER          reduce using rule 13 (sentencia -> empty .)
    FLOAT           reduce using rule 13 (sentencia -> empty .)
    TRUE            reduce using rule 13 (sentencia -> empty .)
    FALSE           reduce using rule 13 (sentencia -> empty .)
    NOT             reduce using rule 13 (sentencia -> empty .)
    LISTOF          reduce using rule 13 (sentencia -> empty .)
    MUTABLELISTOF   reduce using rule 13 (sentencia -> empty .)
    MAPOF           reduce using rule 13 (sentencia -> empty .)
    MUTABLEMAPOF    reduce using rule 13 (sentencia -> empty .)
    SETOF           reduce using rule 13 (sentencia -> empty .)
    MUTABLESETOF    reduce using rule 13 (sentencia -> empty .)
    FOR             reduce using rule 13 (sentencia -> empty .)
    WHILE           reduce using rule 13 (sentencia -> empty .)
    IF              reduce using rule 13 (sentencia -> empty .)
    VAL             reduce using rule 13 (sentencia -> empty .)
    VAR             reduce using rule 13 (sentencia -> empty .)
    FUN             reduce using rule 13 (sentencia -> empty .)
    RETURN          reduce using rule 13 (sentencia -> empty .)
    CLASS           reduce using rule 13 (sentencia -> empty .)
    OPEN            reduce using rule 13 (sentencia -> empty .)
    $end            reduce using rule 13 (sentencia -> empty .)
    RLLAVE          reduce using rule 13 (sentencia -> empty .)


state 13

    (14) sentencia -> retorno .

    VARIABLE        reduce using rule 14 (sentencia -> retorno .)
    PRINT           reduce using rule 14 (sentencia -> retorno .)
    LPAREN          reduce using rule 14 (sentencia -> retorno .)
    NUMBER          reduce using rule 14 (sentencia -> retorno .)
    FLOAT           reduce using rule 14 (sentencia -> retorno .)
    TRUE            reduce using rule 14 (sentencia -> retorno .)
    FALSE           reduce using rule 14 (sentencia -> retorno .)
    NOT             reduce using rule 14 (sentencia -> retorno .)
    LISTOF          reduce using rule 14 (sentencia -> retorno .)
    MUTABLELISTOF   reduce using rule 14 (sentencia -> retorno .)
    MAPOF           reduce using rule 14 (sentencia -> retorno .)
    MUTABLEMAPOF    reduce using rule 14 (sentencia -> retorno .)
    SETOF           reduce using rule 14 (sentencia -> retorno .)
    MUTABLESETOF    reduce using rule 14 (sentencia -> retorno .)
    FOR             reduce using rule 14 (sentencia -> retorno .)
    WHILE           reduce using rule 14 (sentencia -> retorno .)
    IF              reduce using rule 14 (sentencia -> retorno .)
    VAL             reduce using rule 14 (sentencia -> retorno .)
    VAR             reduce using rule 14 (sentencia -> retorno .)
    FUN             reduce using rule 14 (sentencia -> retorno .)
    RETURN          reduce using rule 14 (sentencia -> retorno .)
    CLASS           reduce using rule 14 (sentencia -> retorno .)
    OPEN            reduce using rule 14 (sentencia -> retorno .)
    $end            reduce using rule 14 (sentencia -> retorno .)
    RLLAVE          reduce using rule 14 (sentencia -> retorno .)


state 14

    (15) sentencia -> clase .

    VARIABLE        reduce using rule 15 (sentencia -> clase .)
    PRINT           reduce using rule 15 (sentencia -> clase .)
    LPAREN          reduce using rule 15 (sentencia -> clase .)
    NUMBER          reduce using rule 15 (sentencia -> clase .)
    FLOAT           reduce using rule 15 (sentencia -> clase .)
    TRUE            reduce using rule 15 (sentencia -> clase .)
    FALSE           reduce using rule 15 (sentencia -> clase .)
    NOT             reduce using rule 15 (sentencia -> clase .)
    LISTOF          reduce using rule 15 (sentencia -> clase .)
    MUTABLELISTOF   reduce using rule 15 (sentencia -> clase .)
    MAPOF           reduce using rule 15 (sentencia -> clase .)
    MUTABLEMAPOF    reduce using rule 15 (sentencia -> clase .)
    SETOF           reduce using rule 15 (sentencia -> clase .)
    MUTABLESETOF    reduce using rule 15 (sentencia -> clase .)
    FOR             reduce using rule 15 (sentencia -> clase .)
    WHILE           reduce using rule 15 (sentencia -> clase .)
    IF              reduce using rule 15 (sentencia -> clase .)
    VAL             reduce using rule 15 (sentencia -> clase .)
    VAR             reduce using rule 15 (sentencia -> clase .)
    FUN             reduce using rule 15 (sentencia -> clase .)
    RETURN          reduce using rule 15 (sentencia -> clase .)
    CLASS           reduce using rule 15 (sentencia -> clase .)
    OPEN            reduce using rule 15 (sentencia -> clase .)
    $end            reduce using rule 15 (sentencia -> clase .)
    RLLAVE          reduce using rule 15 (sentencia -> clase .)


state 15

    (16) sentencia -> constructorPri .

    VARIABLE        reduce using rule 16 (sentencia -> constructorPri .)
    PRINT           reduce using rule 16 (sentencia -> constructorPri .)
    LPAREN          reduce using rule 16 (sentencia -> constructorPri .)
    NUMBER          reduce using rule 16 (sentencia -> constructorPri .)
    FLOAT           reduce using rule 16 (sentencia -> constructorPri .)
    TRUE            reduce using rule 16 (sentencia -> constructorPri .)
    FALSE           reduce using rule 16 (sentencia -> constructorPri .)
    NOT             reduce using rule 16 (sentencia -> constructorPri .)
    LISTOF          reduce using rule 16 (sentencia -> constructorPri .)
    MUTABLELISTOF   reduce using rule 16 (sentencia -> constructorPri .)
    MAPOF           reduce using rule 16 (sentencia -> constructorPri .)
    MUTABLEMAPOF    reduce using rule 16 (sentencia -> constructorPri .)
    SETOF           reduce using rule 16 (sentencia -> constructorPri .)
    MUTABLESETOF    reduce using rule 16 (sentencia -> constructorPri .)
    FOR             reduce using rule 16 (sentencia -> constructorPri .)
    WHILE           reduce using rule 16 (sentencia -> constructorPri .)
    IF              reduce using rule 16 (sentencia -> constructorPri .)
    VAL             reduce using rule 16 (sentencia -> constructorPri .)
    VAR             reduce using rule 16 (sentencia -> constructorPri .)
    FUN             reduce using rule 16 (sentencia -> constructorPri .)
    RETURN          reduce using rule 16 (sentencia -> constructorPri .)
    CLASS           reduce using rule 16 (sentencia -> constructorPri .)
    OPEN            reduce using rule 16 (sentencia -> constructorPri .)
    $end            reduce using rule 16 (sentencia -> constructorPri .)
    RLLAVE          reduce using rule 16 (sentencia -> constructorPri .)


state 16

    (23) asignacion -> VARIABLE . ASIGN VARIABLE
    (24) asignacion -> VARIABLE . ASIGN expresion
    (25) asignacion -> VARIABLE . ASIGN condicion
    (26) asignacion -> VARIABLE . ASIGN estructura
    (27) asignacion -> VARIABLE . ASIGN creacionObjeto
    (50) expresion -> VARIABLE .

    ASIGN           shift and go to state 53
    PLUS            reduce using rule 50 (expresion -> VARIABLE .)
    MINUS           reduce using rule 50 (expresion -> VARIABLE .)
    TIMES           reduce using rule 50 (expresion -> VARIABLE .)
    DIVIDE          reduce using rule 50 (expresion -> VARIABLE .)
    MOD             reduce using rule 50 (expresion -> VARIABLE .)
    GREATER         reduce using rule 50 (expresion -> VARIABLE .)
    LESS            reduce using rule 50 (expresion -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 50 (expresion -> VARIABLE .)
    LESS_EQUALS     reduce using rule 50 (expresion -> VARIABLE .)
    EQUALS          reduce using rule 50 (expresion -> VARIABLE .)
    NOT_EQUALS      reduce using rule 50 (expresion -> VARIABLE .)
    VARIABLE        reduce using rule 50 (expresion -> VARIABLE .)
    PRINT           reduce using rule 50 (expresion -> VARIABLE .)
    LPAREN          reduce using rule 50 (expresion -> VARIABLE .)
    NUMBER          reduce using rule 50 (expresion -> VARIABLE .)
    FLOAT           reduce using rule 50 (expresion -> VARIABLE .)
    TRUE            reduce using rule 50 (expresion -> VARIABLE .)
    FALSE           reduce using rule 50 (expresion -> VARIABLE .)
    NOT             reduce using rule 50 (expresion -> VARIABLE .)
    LISTOF          reduce using rule 50 (expresion -> VARIABLE .)
    MUTABLELISTOF   reduce using rule 50 (expresion -> VARIABLE .)
    MAPOF           reduce using rule 50 (expresion -> VARIABLE .)
    MUTABLEMAPOF    reduce using rule 50 (expresion -> VARIABLE .)
    SETOF           reduce using rule 50 (expresion -> VARIABLE .)
    MUTABLESETOF    reduce using rule 50 (expresion -> VARIABLE .)
    FOR             reduce using rule 50 (expresion -> VARIABLE .)
    WHILE           reduce using rule 50 (expresion -> VARIABLE .)
    IF              reduce using rule 50 (expresion -> VARIABLE .)
    VAL             reduce using rule 50 (expresion -> VARIABLE .)
    VAR             reduce using rule 50 (expresion -> VARIABLE .)
    FUN             reduce using rule 50 (expresion -> VARIABLE .)
    RETURN          reduce using rule 50 (expresion -> VARIABLE .)
    CLASS           reduce using rule 50 (expresion -> VARIABLE .)
    OPEN            reduce using rule 50 (expresion -> VARIABLE .)
    $end            reduce using rule 50 (expresion -> VARIABLE .)
    RLLAVE          reduce using rule 50 (expresion -> VARIABLE .)


state 17

    (29) impresion -> PRINT . LPAREN repiteValores RPAREN
    (28) impresion_vacia -> PRINT . LPAREN RPAREN

    LPAREN          shift and go to state 54


state 18

    (44) expresion -> LPAREN . expresion RPAREN
    (63) condicion -> LPAREN . condicion RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 55
    condicion                      shift and go to state 56

state 19

    (45) expresion -> NUMBER .

    PLUS            reduce using rule 45 (expresion -> NUMBER .)
    MINUS           reduce using rule 45 (expresion -> NUMBER .)
    TIMES           reduce using rule 45 (expresion -> NUMBER .)
    DIVIDE          reduce using rule 45 (expresion -> NUMBER .)
    MOD             reduce using rule 45 (expresion -> NUMBER .)
    GREATER         reduce using rule 45 (expresion -> NUMBER .)
    LESS            reduce using rule 45 (expresion -> NUMBER .)
    GREATER_EQUALS  reduce using rule 45 (expresion -> NUMBER .)
    LESS_EQUALS     reduce using rule 45 (expresion -> NUMBER .)
    EQUALS          reduce using rule 45 (expresion -> NUMBER .)
    NOT_EQUALS      reduce using rule 45 (expresion -> NUMBER .)
    VARIABLE        reduce using rule 45 (expresion -> NUMBER .)
    PRINT           reduce using rule 45 (expresion -> NUMBER .)
    LPAREN          reduce using rule 45 (expresion -> NUMBER .)
    NUMBER          reduce using rule 45 (expresion -> NUMBER .)
    FLOAT           reduce using rule 45 (expresion -> NUMBER .)
    TRUE            reduce using rule 45 (expresion -> NUMBER .)
    FALSE           reduce using rule 45 (expresion -> NUMBER .)
    NOT             reduce using rule 45 (expresion -> NUMBER .)
    LISTOF          reduce using rule 45 (expresion -> NUMBER .)
    MUTABLELISTOF   reduce using rule 45 (expresion -> NUMBER .)
    MAPOF           reduce using rule 45 (expresion -> NUMBER .)
    MUTABLEMAPOF    reduce using rule 45 (expresion -> NUMBER .)
    SETOF           reduce using rule 45 (expresion -> NUMBER .)
    MUTABLESETOF    reduce using rule 45 (expresion -> NUMBER .)
    FOR             reduce using rule 45 (expresion -> NUMBER .)
    WHILE           reduce using rule 45 (expresion -> NUMBER .)
    IF              reduce using rule 45 (expresion -> NUMBER .)
    VAL             reduce using rule 45 (expresion -> NUMBER .)
    VAR             reduce using rule 45 (expresion -> NUMBER .)
    FUN             reduce using rule 45 (expresion -> NUMBER .)
    RETURN          reduce using rule 45 (expresion -> NUMBER .)
    CLASS           reduce using rule 45 (expresion -> NUMBER .)
    OPEN            reduce using rule 45 (expresion -> NUMBER .)
    $end            reduce using rule 45 (expresion -> NUMBER .)
    RPAREN          reduce using rule 45 (expresion -> NUMBER .)
    AND             reduce using rule 45 (expresion -> NUMBER .)
    OR              reduce using rule 45 (expresion -> NUMBER .)
    LLLAVE          reduce using rule 45 (expresion -> NUMBER .)
    RLLAVE          reduce using rule 45 (expresion -> NUMBER .)


state 20

    (46) expresion -> FLOAT .

    PLUS            reduce using rule 46 (expresion -> FLOAT .)
    MINUS           reduce using rule 46 (expresion -> FLOAT .)
    TIMES           reduce using rule 46 (expresion -> FLOAT .)
    DIVIDE          reduce using rule 46 (expresion -> FLOAT .)
    MOD             reduce using rule 46 (expresion -> FLOAT .)
    GREATER         reduce using rule 46 (expresion -> FLOAT .)
    LESS            reduce using rule 46 (expresion -> FLOAT .)
    GREATER_EQUALS  reduce using rule 46 (expresion -> FLOAT .)
    LESS_EQUALS     reduce using rule 46 (expresion -> FLOAT .)
    EQUALS          reduce using rule 46 (expresion -> FLOAT .)
    NOT_EQUALS      reduce using rule 46 (expresion -> FLOAT .)
    VARIABLE        reduce using rule 46 (expresion -> FLOAT .)
    PRINT           reduce using rule 46 (expresion -> FLOAT .)
    LPAREN          reduce using rule 46 (expresion -> FLOAT .)
    NUMBER          reduce using rule 46 (expresion -> FLOAT .)
    FLOAT           reduce using rule 46 (expresion -> FLOAT .)
    TRUE            reduce using rule 46 (expresion -> FLOAT .)
    FALSE           reduce using rule 46 (expresion -> FLOAT .)
    NOT             reduce using rule 46 (expresion -> FLOAT .)
    LISTOF          reduce using rule 46 (expresion -> FLOAT .)
    MUTABLELISTOF   reduce using rule 46 (expresion -> FLOAT .)
    MAPOF           reduce using rule 46 (expresion -> FLOAT .)
    MUTABLEMAPOF    reduce using rule 46 (expresion -> FLOAT .)
    SETOF           reduce using rule 46 (expresion -> FLOAT .)
    MUTABLESETOF    reduce using rule 46 (expresion -> FLOAT .)
    FOR             reduce using rule 46 (expresion -> FLOAT .)
    WHILE           reduce using rule 46 (expresion -> FLOAT .)
    IF              reduce using rule 46 (expresion -> FLOAT .)
    VAL             reduce using rule 46 (expresion -> FLOAT .)
    VAR             reduce using rule 46 (expresion -> FLOAT .)
    FUN             reduce using rule 46 (expresion -> FLOAT .)
    RETURN          reduce using rule 46 (expresion -> FLOAT .)
    CLASS           reduce using rule 46 (expresion -> FLOAT .)
    OPEN            reduce using rule 46 (expresion -> FLOAT .)
    $end            reduce using rule 46 (expresion -> FLOAT .)
    RPAREN          reduce using rule 46 (expresion -> FLOAT .)
    AND             reduce using rule 46 (expresion -> FLOAT .)
    OR              reduce using rule 46 (expresion -> FLOAT .)
    LLLAVE          reduce using rule 46 (expresion -> FLOAT .)
    RLLAVE          reduce using rule 46 (expresion -> FLOAT .)


state 21

    (47) expresion -> TRUE .
    (61) condicion -> TRUE .

  ! reduce/reduce conflict for AND resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for OR resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for PRINT resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for NOT resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for SETOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for WHILE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for VAL resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for VAR resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for FUN resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for RETURN resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for CLASS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for OPEN resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for PLUS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MINUS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for TIMES resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MOD resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for GREATER resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 47 (expresion -> TRUE .)
    PLUS            reduce using rule 47 (expresion -> TRUE .)
    MINUS           reduce using rule 47 (expresion -> TRUE .)
    TIMES           reduce using rule 47 (expresion -> TRUE .)
    DIVIDE          reduce using rule 47 (expresion -> TRUE .)
    MOD             reduce using rule 47 (expresion -> TRUE .)
    GREATER         reduce using rule 47 (expresion -> TRUE .)
    LESS            reduce using rule 47 (expresion -> TRUE .)
    GREATER_EQUALS  reduce using rule 47 (expresion -> TRUE .)
    LESS_EQUALS     reduce using rule 47 (expresion -> TRUE .)
    EQUALS          reduce using rule 47 (expresion -> TRUE .)
    NOT_EQUALS      reduce using rule 47 (expresion -> TRUE .)
    VARIABLE        reduce using rule 47 (expresion -> TRUE .)
    PRINT           reduce using rule 47 (expresion -> TRUE .)
    LPAREN          reduce using rule 47 (expresion -> TRUE .)
    NUMBER          reduce using rule 47 (expresion -> TRUE .)
    FLOAT           reduce using rule 47 (expresion -> TRUE .)
    TRUE            reduce using rule 47 (expresion -> TRUE .)
    FALSE           reduce using rule 47 (expresion -> TRUE .)
    NOT             reduce using rule 47 (expresion -> TRUE .)
    LISTOF          reduce using rule 47 (expresion -> TRUE .)
    MUTABLELISTOF   reduce using rule 47 (expresion -> TRUE .)
    MAPOF           reduce using rule 47 (expresion -> TRUE .)
    MUTABLEMAPOF    reduce using rule 47 (expresion -> TRUE .)
    SETOF           reduce using rule 47 (expresion -> TRUE .)
    MUTABLESETOF    reduce using rule 47 (expresion -> TRUE .)
    FOR             reduce using rule 47 (expresion -> TRUE .)
    WHILE           reduce using rule 47 (expresion -> TRUE .)
    IF              reduce using rule 47 (expresion -> TRUE .)
    VAL             reduce using rule 47 (expresion -> TRUE .)
    VAR             reduce using rule 47 (expresion -> TRUE .)
    FUN             reduce using rule 47 (expresion -> TRUE .)
    RETURN          reduce using rule 47 (expresion -> TRUE .)
    CLASS           reduce using rule 47 (expresion -> TRUE .)
    OPEN            reduce using rule 47 (expresion -> TRUE .)
    $end            reduce using rule 47 (expresion -> TRUE .)
    RPAREN          reduce using rule 47 (expresion -> TRUE .)
    AND             reduce using rule 47 (expresion -> TRUE .)
    OR              reduce using rule 47 (expresion -> TRUE .)
    LLLAVE          reduce using rule 47 (expresion -> TRUE .)
    RLLAVE          reduce using rule 47 (expresion -> TRUE .)

  ! AND             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! OR              [ reduce using rule 61 (condicion -> TRUE .) ]
  ! VARIABLE        [ reduce using rule 61 (condicion -> TRUE .) ]
  ! PRINT           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LPAREN          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! NUMBER          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FLOAT           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! TRUE            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FALSE           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! NOT             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LISTOF          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MUTABLELISTOF   [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MAPOF           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 61 (condicion -> TRUE .) ]
  ! SETOF           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MUTABLESETOF    [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FOR             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! WHILE           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! IF              [ reduce using rule 61 (condicion -> TRUE .) ]
  ! VAL             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! VAR             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FUN             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! RETURN          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! CLASS           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! OPEN            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! $end            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! PLUS            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MINUS           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! TIMES           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! DIVIDE          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MOD             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! GREATER         [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LESS            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! GREATER_EQUALS  [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LESS_EQUALS     [ reduce using rule 61 (condicion -> TRUE .) ]
  ! EQUALS          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! NOT_EQUALS      [ reduce using rule 61 (condicion -> TRUE .) ]
  ! RPAREN          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LLLAVE          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! RLLAVE          [ reduce using rule 61 (condicion -> TRUE .) ]


state 22

    (48) expresion -> FALSE .
    (62) condicion -> FALSE .

  ! reduce/reduce conflict for AND resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for OR resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for PRINT resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for NOT resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for SETOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for WHILE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for VAL resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for VAR resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for FUN resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for RETURN resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for CLASS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for OPEN resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for PLUS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MINUS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for TIMES resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MOD resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for GREATER resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 48 (expresion -> FALSE .)
    PLUS            reduce using rule 48 (expresion -> FALSE .)
    MINUS           reduce using rule 48 (expresion -> FALSE .)
    TIMES           reduce using rule 48 (expresion -> FALSE .)
    DIVIDE          reduce using rule 48 (expresion -> FALSE .)
    MOD             reduce using rule 48 (expresion -> FALSE .)
    GREATER         reduce using rule 48 (expresion -> FALSE .)
    LESS            reduce using rule 48 (expresion -> FALSE .)
    GREATER_EQUALS  reduce using rule 48 (expresion -> FALSE .)
    LESS_EQUALS     reduce using rule 48 (expresion -> FALSE .)
    EQUALS          reduce using rule 48 (expresion -> FALSE .)
    NOT_EQUALS      reduce using rule 48 (expresion -> FALSE .)
    VARIABLE        reduce using rule 48 (expresion -> FALSE .)
    PRINT           reduce using rule 48 (expresion -> FALSE .)
    LPAREN          reduce using rule 48 (expresion -> FALSE .)
    NUMBER          reduce using rule 48 (expresion -> FALSE .)
    FLOAT           reduce using rule 48 (expresion -> FALSE .)
    TRUE            reduce using rule 48 (expresion -> FALSE .)
    FALSE           reduce using rule 48 (expresion -> FALSE .)
    NOT             reduce using rule 48 (expresion -> FALSE .)
    LISTOF          reduce using rule 48 (expresion -> FALSE .)
    MUTABLELISTOF   reduce using rule 48 (expresion -> FALSE .)
    MAPOF           reduce using rule 48 (expresion -> FALSE .)
    MUTABLEMAPOF    reduce using rule 48 (expresion -> FALSE .)
    SETOF           reduce using rule 48 (expresion -> FALSE .)
    MUTABLESETOF    reduce using rule 48 (expresion -> FALSE .)
    FOR             reduce using rule 48 (expresion -> FALSE .)
    WHILE           reduce using rule 48 (expresion -> FALSE .)
    IF              reduce using rule 48 (expresion -> FALSE .)
    VAL             reduce using rule 48 (expresion -> FALSE .)
    VAR             reduce using rule 48 (expresion -> FALSE .)
    FUN             reduce using rule 48 (expresion -> FALSE .)
    RETURN          reduce using rule 48 (expresion -> FALSE .)
    CLASS           reduce using rule 48 (expresion -> FALSE .)
    OPEN            reduce using rule 48 (expresion -> FALSE .)
    $end            reduce using rule 48 (expresion -> FALSE .)
    RPAREN          reduce using rule 48 (expresion -> FALSE .)
    AND             reduce using rule 48 (expresion -> FALSE .)
    OR              reduce using rule 48 (expresion -> FALSE .)
    LLLAVE          reduce using rule 48 (expresion -> FALSE .)
    RLLAVE          reduce using rule 48 (expresion -> FALSE .)

  ! AND             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! OR              [ reduce using rule 62 (condicion -> FALSE .) ]
  ! VARIABLE        [ reduce using rule 62 (condicion -> FALSE .) ]
  ! PRINT           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LPAREN          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! NUMBER          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FLOAT           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! TRUE            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FALSE           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! NOT             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LISTOF          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MUTABLELISTOF   [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MAPOF           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 62 (condicion -> FALSE .) ]
  ! SETOF           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MUTABLESETOF    [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FOR             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! WHILE           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! IF              [ reduce using rule 62 (condicion -> FALSE .) ]
  ! VAL             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! VAR             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FUN             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! RETURN          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! CLASS           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! OPEN            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! $end            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! PLUS            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MINUS           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! TIMES           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! DIVIDE          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MOD             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! GREATER         [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LESS            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! GREATER_EQUALS  [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LESS_EQUALS     [ reduce using rule 62 (condicion -> FALSE .) ]
  ! EQUALS          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! NOT_EQUALS      [ reduce using rule 62 (condicion -> FALSE .) ]
  ! RPAREN          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LLLAVE          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! RLLAVE          [ reduce using rule 62 (condicion -> FALSE .) ]


state 23

    (59) condicion -> NOT . condicion
    (60) condicion -> NOT . expresion
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE

    NOT             shift and go to state 23
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LPAREN          shift and go to state 62
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    VARIABLE        shift and go to state 57

    condicion                      shift and go to state 58
    expresion                      shift and go to state 59

state 24

    (64) estructura -> LISTOF . LPAREN repiteValores RPAREN
    (65) estructura -> LISTOF . LPAREN RPAREN

    LPAREN          shift and go to state 63


state 25

    (66) estructura -> MUTABLELISTOF . LPAREN repiteValores RPAREN
    (67) estructura -> MUTABLELISTOF . LPAREN RPAREN

    LPAREN          shift and go to state 64


state 26

    (68) estructura -> MAPOF . LPAREN pareskv_mapa RPAREN

    LPAREN          shift and go to state 65


state 27

    (69) estructura -> MUTABLEMAPOF . LPAREN pareskv_mapa RPAREN

    LPAREN          shift and go to state 66


state 28

    (72) estructura -> SETOF . LPAREN repiteValores RPAREN
    (73) estructura -> SETOF . LPAREN RPAREN

    LPAREN          shift and go to state 67


state 29

    (74) estructura -> MUTABLESETOF . LPAREN repiteValores RPAREN
    (75) estructura -> MUTABLESETOF . LPAREN RPAREN

    LPAREN          shift and go to state 68


state 30

    (84) estructura -> FOR . LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 69


state 31

    (85) estructura -> WHILE . condicion LLLAVE sentencias RLLAVE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE

    NOT             shift and go to state 23
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LPAREN          shift and go to state 62
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    VARIABLE        shift and go to state 57

    condicion                      shift and go to state 70
    expresion                      shift and go to state 71

state 32

    (86) estructura -> IF . condicion LLLAVE sentencias RLLAVE
    (87) estructura -> IF . condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> IF . condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> IF . condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE

    NOT             shift and go to state 23
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LPAREN          shift and go to state 62
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    VARIABLE        shift and go to state 57

    condicion                      shift and go to state 72
    expresion                      shift and go to state 71

state 33

    (17) declaracion_variable -> VAL . VARIABLE ASIGN valor
    (19) declaracion_variable -> VAL . VARIABLE ASIGN estructura
    (21) declaracion_variable -> VAL . VARIABLE ASIGN creacionObjeto

    VARIABLE        shift and go to state 73


state 34

    (18) declaracion_variable -> VAR . VARIABLE ASIGN valor
    (20) declaracion_variable -> VAR . VARIABLE ASIGN estructura
    (22) declaracion_variable -> VAR . VARIABLE ASIGN creacionObjeto

    VARIABLE        shift and go to state 74


state 35

    (97) funcion -> FUN . VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> FUN . VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> FUN . VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias

    VARIABLE        shift and go to state 75


state 36

    (76) retorno -> RETURN . objetoRetorno
    (77) objetoRetorno -> . valor
    (78) objetoRetorno -> . condicion
    (79) objetoRetorno -> . expresion
    (80) objetoRetorno -> . TRUE
    (81) objetoRetorno -> . FALSE
    (82) objetoRetorno -> . estructura
    (83) objetoRetorno -> . empty
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (4) empty -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 84
    FLOAT           shift and go to state 85
    VARIABLE        shift and go to state 86
    STRING          shift and go to state 87
    NOT             shift and go to state 23
    LPAREN          shift and go to state 62
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    PRINT           reduce using rule 4 (empty -> .)
    VAL             reduce using rule 4 (empty -> .)
    VAR             reduce using rule 4 (empty -> .)
    FUN             reduce using rule 4 (empty -> .)
    RETURN          reduce using rule 4 (empty -> .)
    CLASS           reduce using rule 4 (empty -> .)
    OPEN            reduce using rule 4 (empty -> .)
    $end            reduce using rule 4 (empty -> .)
    RLLAVE          reduce using rule 4 (empty -> .)

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]

    objetoRetorno                  shift and go to state 76
    valor                          shift and go to state 77
    condicion                      shift and go to state 78
    expresion                      shift and go to state 79
    estructura                     shift and go to state 82
    empty                          shift and go to state 83

state 37

    (107) clase -> CLASS . VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> CLASS . VARIABLE LLLAVE RLLAVE
    (111) clase -> CLASS . VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> CLASS . VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> CLASS . VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> CLASS . VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> CLASS . VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

    VARIABLE        shift and go to state 88


state 38

    (109) clase -> OPEN . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> OPEN . CLASS VARIABLE LLLAVE RLLAVE

    CLASS           shift and go to state 89


state 39

    (3) sentencias -> sentencias sentencia .

    VARIABLE        reduce using rule 3 (sentencias -> sentencias sentencia .)
    PRINT           reduce using rule 3 (sentencias -> sentencias sentencia .)
    LPAREN          reduce using rule 3 (sentencias -> sentencias sentencia .)
    NUMBER          reduce using rule 3 (sentencias -> sentencias sentencia .)
    FLOAT           reduce using rule 3 (sentencias -> sentencias sentencia .)
    TRUE            reduce using rule 3 (sentencias -> sentencias sentencia .)
    FALSE           reduce using rule 3 (sentencias -> sentencias sentencia .)
    NOT             reduce using rule 3 (sentencias -> sentencias sentencia .)
    LISTOF          reduce using rule 3 (sentencias -> sentencias sentencia .)
    MUTABLELISTOF   reduce using rule 3 (sentencias -> sentencias sentencia .)
    MAPOF           reduce using rule 3 (sentencias -> sentencias sentencia .)
    MUTABLEMAPOF    reduce using rule 3 (sentencias -> sentencias sentencia .)
    SETOF           reduce using rule 3 (sentencias -> sentencias sentencia .)
    MUTABLESETOF    reduce using rule 3 (sentencias -> sentencias sentencia .)
    FOR             reduce using rule 3 (sentencias -> sentencias sentencia .)
    WHILE           reduce using rule 3 (sentencias -> sentencias sentencia .)
    IF              reduce using rule 3 (sentencias -> sentencias sentencia .)
    VAL             reduce using rule 3 (sentencias -> sentencias sentencia .)
    VAR             reduce using rule 3 (sentencias -> sentencias sentencia .)
    FUN             reduce using rule 3 (sentencias -> sentencias sentencia .)
    RETURN          reduce using rule 3 (sentencias -> sentencias sentencia .)
    CLASS           reduce using rule 3 (sentencias -> sentencias sentencia .)
    OPEN            reduce using rule 3 (sentencias -> sentencias sentencia .)
    $end            reduce using rule 3 (sentencias -> sentencias sentencia .)
    RLLAVE          reduce using rule 3 (sentencias -> sentencias sentencia .)


state 40

    (39) expresion -> expresion PLUS . expresion
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 90
    condicion                      shift and go to state 91

state 41

    (40) expresion -> expresion MINUS . expresion
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 92
    condicion                      shift and go to state 91

state 42

    (41) expresion -> expresion TIMES . expresion
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 93
    condicion                      shift and go to state 91

state 43

    (42) expresion -> expresion DIVIDE . expresion
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 94
    condicion                      shift and go to state 91

state 44

    (43) expresion -> expresion MOD . expresion
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 95
    condicion                      shift and go to state 91

state 45

    (51) condicion -> expresion GREATER . expresion
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 96
    condicion                      shift and go to state 91

state 46

    (52) condicion -> expresion LESS . expresion
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 97
    condicion                      shift and go to state 91

state 47

    (53) condicion -> expresion GREATER_EQUALS . expresion
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 98
    condicion                      shift and go to state 91

state 48

    (54) condicion -> expresion LESS_EQUALS . expresion
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 99
    condicion                      shift and go to state 91

state 49

    (55) condicion -> expresion EQUALS . expresion
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 100
    condicion                      shift and go to state 91

state 50

    (56) condicion -> expresion NOT_EQUALS . expresion
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN

    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    VARIABLE        shift and go to state 57
    NOT             shift and go to state 23

    expresion                      shift and go to state 101
    condicion                      shift and go to state 91

state 51

    (57) condicion -> condicion AND . condicion
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE

    NOT             shift and go to state 23
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LPAREN          shift and go to state 62
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    VARIABLE        shift and go to state 57

    condicion                      shift and go to state 102
    expresion                      shift and go to state 71

state 52

    (58) condicion -> condicion OR . condicion
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE

    NOT             shift and go to state 23
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LPAREN          shift and go to state 62
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    VARIABLE        shift and go to state 57

    condicion                      shift and go to state 103
    expresion                      shift and go to state 71

state 53

    (23) asignacion -> VARIABLE ASIGN . VARIABLE
    (24) asignacion -> VARIABLE ASIGN . expresion
    (25) asignacion -> VARIABLE ASIGN . condicion
    (26) asignacion -> VARIABLE ASIGN . estructura
    (27) asignacion -> VARIABLE ASIGN . creacionObjeto
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (105) creacionObjeto -> . VARIABLE LPAREN RPAREN
    (106) creacionObjeto -> . VARIABLE LPAREN repiteValores RPAREN

    VARIABLE        shift and go to state 104
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32

    expresion                      shift and go to state 105
    condicion                      shift and go to state 106
    estructura                     shift and go to state 107
    creacionObjeto                 shift and go to state 108

state 54

    (29) impresion -> PRINT LPAREN . repiteValores RPAREN
    (28) impresion_vacia -> PRINT LPAREN . RPAREN
    (36) repiteValores -> . valor COMMA repiteValores
    (37) repiteValores -> . valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    RPAREN          shift and go to state 110
    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    repiteValores                  shift and go to state 109
    valor                          shift and go to state 111

state 55

    (44) expresion -> LPAREN expresion . RPAREN
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

    RPAREN          shift and go to state 117
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50


state 56

    (63) condicion -> LPAREN condicion . RPAREN
    (49) expresion -> condicion .
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 118
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    AND             shift and go to state 51
    OR              shift and go to state 52

  ! RPAREN          [ reduce using rule 49 (expresion -> condicion .) ]


state 57

    (50) expresion -> VARIABLE .

    RPAREN          reduce using rule 50 (expresion -> VARIABLE .)
    PLUS            reduce using rule 50 (expresion -> VARIABLE .)
    MINUS           reduce using rule 50 (expresion -> VARIABLE .)
    TIMES           reduce using rule 50 (expresion -> VARIABLE .)
    DIVIDE          reduce using rule 50 (expresion -> VARIABLE .)
    MOD             reduce using rule 50 (expresion -> VARIABLE .)
    GREATER         reduce using rule 50 (expresion -> VARIABLE .)
    LESS            reduce using rule 50 (expresion -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 50 (expresion -> VARIABLE .)
    LESS_EQUALS     reduce using rule 50 (expresion -> VARIABLE .)
    EQUALS          reduce using rule 50 (expresion -> VARIABLE .)
    NOT_EQUALS      reduce using rule 50 (expresion -> VARIABLE .)
    AND             reduce using rule 50 (expresion -> VARIABLE .)
    OR              reduce using rule 50 (expresion -> VARIABLE .)
    VARIABLE        reduce using rule 50 (expresion -> VARIABLE .)
    PRINT           reduce using rule 50 (expresion -> VARIABLE .)
    LPAREN          reduce using rule 50 (expresion -> VARIABLE .)
    NUMBER          reduce using rule 50 (expresion -> VARIABLE .)
    FLOAT           reduce using rule 50 (expresion -> VARIABLE .)
    TRUE            reduce using rule 50 (expresion -> VARIABLE .)
    FALSE           reduce using rule 50 (expresion -> VARIABLE .)
    NOT             reduce using rule 50 (expresion -> VARIABLE .)
    LISTOF          reduce using rule 50 (expresion -> VARIABLE .)
    MUTABLELISTOF   reduce using rule 50 (expresion -> VARIABLE .)
    MAPOF           reduce using rule 50 (expresion -> VARIABLE .)
    MUTABLEMAPOF    reduce using rule 50 (expresion -> VARIABLE .)
    SETOF           reduce using rule 50 (expresion -> VARIABLE .)
    MUTABLESETOF    reduce using rule 50 (expresion -> VARIABLE .)
    FOR             reduce using rule 50 (expresion -> VARIABLE .)
    WHILE           reduce using rule 50 (expresion -> VARIABLE .)
    IF              reduce using rule 50 (expresion -> VARIABLE .)
    VAL             reduce using rule 50 (expresion -> VARIABLE .)
    VAR             reduce using rule 50 (expresion -> VARIABLE .)
    FUN             reduce using rule 50 (expresion -> VARIABLE .)
    RETURN          reduce using rule 50 (expresion -> VARIABLE .)
    CLASS           reduce using rule 50 (expresion -> VARIABLE .)
    OPEN            reduce using rule 50 (expresion -> VARIABLE .)
    $end            reduce using rule 50 (expresion -> VARIABLE .)
    LLLAVE          reduce using rule 50 (expresion -> VARIABLE .)
    RLLAVE          reduce using rule 50 (expresion -> VARIABLE .)


state 58

    (59) condicion -> NOT condicion .
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion
    (49) expresion -> condicion .

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! reduce/reduce conflict for VARIABLE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for PRINT resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for LPAREN resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for NUMBER resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for TRUE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for FALSE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for NOT resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for LISTOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MAPOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for SETOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for FOR resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for WHILE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for IF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for VAL resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for VAR resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for FUN resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for RETURN resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for CLASS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for OPEN resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for $end resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for PLUS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for TIMES resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MOD resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for GREATER resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for RPAREN resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 49 (expresion -> condicion .)
    AND             shift and go to state 51
    OR              shift and go to state 52
    VARIABLE        reduce using rule 49 (expresion -> condicion .)
    PRINT           reduce using rule 49 (expresion -> condicion .)
    LPAREN          reduce using rule 49 (expresion -> condicion .)
    NUMBER          reduce using rule 49 (expresion -> condicion .)
    FLOAT           reduce using rule 49 (expresion -> condicion .)
    TRUE            reduce using rule 49 (expresion -> condicion .)
    FALSE           reduce using rule 49 (expresion -> condicion .)
    NOT             reduce using rule 49 (expresion -> condicion .)
    LISTOF          reduce using rule 49 (expresion -> condicion .)
    MUTABLELISTOF   reduce using rule 49 (expresion -> condicion .)
    MAPOF           reduce using rule 49 (expresion -> condicion .)
    MUTABLEMAPOF    reduce using rule 49 (expresion -> condicion .)
    SETOF           reduce using rule 49 (expresion -> condicion .)
    MUTABLESETOF    reduce using rule 49 (expresion -> condicion .)
    FOR             reduce using rule 49 (expresion -> condicion .)
    WHILE           reduce using rule 49 (expresion -> condicion .)
    IF              reduce using rule 49 (expresion -> condicion .)
    VAL             reduce using rule 49 (expresion -> condicion .)
    VAR             reduce using rule 49 (expresion -> condicion .)
    FUN             reduce using rule 49 (expresion -> condicion .)
    RETURN          reduce using rule 49 (expresion -> condicion .)
    CLASS           reduce using rule 49 (expresion -> condicion .)
    OPEN            reduce using rule 49 (expresion -> condicion .)
    $end            reduce using rule 49 (expresion -> condicion .)
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    RPAREN          reduce using rule 49 (expresion -> condicion .)
    LLLAVE          reduce using rule 49 (expresion -> condicion .)
    RLLAVE          reduce using rule 49 (expresion -> condicion .)

  ! AND             [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! OR              [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! VARIABLE        [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! PRINT           [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! LPAREN          [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! NUMBER          [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! FLOAT           [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! TRUE            [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! FALSE           [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! NOT             [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! LISTOF          [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! MUTABLELISTOF   [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! MAPOF           [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! MUTABLEMAPOF    [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! SETOF           [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! MUTABLESETOF    [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! FOR             [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! WHILE           [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! IF              [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! VAL             [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! VAR             [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! FUN             [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! RETURN          [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! CLASS           [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! OPEN            [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! $end            [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! PLUS            [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! MINUS           [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! TIMES           [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! DIVIDE          [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! MOD             [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! GREATER         [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! LESS            [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! GREATER_EQUALS  [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! LESS_EQUALS     [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! EQUALS          [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! NOT_EQUALS      [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! RPAREN          [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! LLLAVE          [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! RLLAVE          [ reduce using rule 59 (condicion -> NOT condicion .) ]
  ! AND             [ reduce using rule 49 (expresion -> condicion .) ]
  ! OR              [ reduce using rule 49 (expresion -> condicion .) ]


state 59

    (60) condicion -> NOT expresion .
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion

  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    AND             reduce using rule 60 (condicion -> NOT expresion .)
    OR              reduce using rule 60 (condicion -> NOT expresion .)
    VARIABLE        reduce using rule 60 (condicion -> NOT expresion .)
    PRINT           reduce using rule 60 (condicion -> NOT expresion .)
    LPAREN          reduce using rule 60 (condicion -> NOT expresion .)
    NUMBER          reduce using rule 60 (condicion -> NOT expresion .)
    FLOAT           reduce using rule 60 (condicion -> NOT expresion .)
    TRUE            reduce using rule 60 (condicion -> NOT expresion .)
    FALSE           reduce using rule 60 (condicion -> NOT expresion .)
    NOT             reduce using rule 60 (condicion -> NOT expresion .)
    LISTOF          reduce using rule 60 (condicion -> NOT expresion .)
    MUTABLELISTOF   reduce using rule 60 (condicion -> NOT expresion .)
    MAPOF           reduce using rule 60 (condicion -> NOT expresion .)
    MUTABLEMAPOF    reduce using rule 60 (condicion -> NOT expresion .)
    SETOF           reduce using rule 60 (condicion -> NOT expresion .)
    MUTABLESETOF    reduce using rule 60 (condicion -> NOT expresion .)
    FOR             reduce using rule 60 (condicion -> NOT expresion .)
    WHILE           reduce using rule 60 (condicion -> NOT expresion .)
    IF              reduce using rule 60 (condicion -> NOT expresion .)
    VAL             reduce using rule 60 (condicion -> NOT expresion .)
    VAR             reduce using rule 60 (condicion -> NOT expresion .)
    FUN             reduce using rule 60 (condicion -> NOT expresion .)
    RETURN          reduce using rule 60 (condicion -> NOT expresion .)
    CLASS           reduce using rule 60 (condicion -> NOT expresion .)
    OPEN            reduce using rule 60 (condicion -> NOT expresion .)
    $end            reduce using rule 60 (condicion -> NOT expresion .)
    RPAREN          reduce using rule 60 (condicion -> NOT expresion .)
    LLLAVE          reduce using rule 60 (condicion -> NOT expresion .)
    RLLAVE          reduce using rule 60 (condicion -> NOT expresion .)
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 60 (condicion -> NOT expresion .) ]
  ! MINUS           [ reduce using rule 60 (condicion -> NOT expresion .) ]
  ! TIMES           [ reduce using rule 60 (condicion -> NOT expresion .) ]
  ! DIVIDE          [ reduce using rule 60 (condicion -> NOT expresion .) ]
  ! MOD             [ reduce using rule 60 (condicion -> NOT expresion .) ]
  ! GREATER         [ reduce using rule 60 (condicion -> NOT expresion .) ]
  ! LESS            [ reduce using rule 60 (condicion -> NOT expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 60 (condicion -> NOT expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 60 (condicion -> NOT expresion .) ]
  ! EQUALS          [ reduce using rule 60 (condicion -> NOT expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 60 (condicion -> NOT expresion .) ]


state 60

    (61) condicion -> TRUE .
    (47) expresion -> TRUE .

  ! reduce/reduce conflict for AND resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for OR resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for PRINT resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for NOT resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for SETOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for WHILE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for VAL resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for VAR resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for FUN resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for RETURN resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for CLASS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for OPEN resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for PLUS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MINUS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for TIMES resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MOD resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for GREATER resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 47 (expresion -> TRUE .)
    AND             reduce using rule 47 (expresion -> TRUE .)
    OR              reduce using rule 47 (expresion -> TRUE .)
    VARIABLE        reduce using rule 47 (expresion -> TRUE .)
    PRINT           reduce using rule 47 (expresion -> TRUE .)
    LPAREN          reduce using rule 47 (expresion -> TRUE .)
    NUMBER          reduce using rule 47 (expresion -> TRUE .)
    FLOAT           reduce using rule 47 (expresion -> TRUE .)
    TRUE            reduce using rule 47 (expresion -> TRUE .)
    FALSE           reduce using rule 47 (expresion -> TRUE .)
    NOT             reduce using rule 47 (expresion -> TRUE .)
    LISTOF          reduce using rule 47 (expresion -> TRUE .)
    MUTABLELISTOF   reduce using rule 47 (expresion -> TRUE .)
    MAPOF           reduce using rule 47 (expresion -> TRUE .)
    MUTABLEMAPOF    reduce using rule 47 (expresion -> TRUE .)
    SETOF           reduce using rule 47 (expresion -> TRUE .)
    MUTABLESETOF    reduce using rule 47 (expresion -> TRUE .)
    FOR             reduce using rule 47 (expresion -> TRUE .)
    WHILE           reduce using rule 47 (expresion -> TRUE .)
    IF              reduce using rule 47 (expresion -> TRUE .)
    VAL             reduce using rule 47 (expresion -> TRUE .)
    VAR             reduce using rule 47 (expresion -> TRUE .)
    FUN             reduce using rule 47 (expresion -> TRUE .)
    RETURN          reduce using rule 47 (expresion -> TRUE .)
    CLASS           reduce using rule 47 (expresion -> TRUE .)
    OPEN            reduce using rule 47 (expresion -> TRUE .)
    $end            reduce using rule 47 (expresion -> TRUE .)
    PLUS            reduce using rule 47 (expresion -> TRUE .)
    MINUS           reduce using rule 47 (expresion -> TRUE .)
    TIMES           reduce using rule 47 (expresion -> TRUE .)
    DIVIDE          reduce using rule 47 (expresion -> TRUE .)
    MOD             reduce using rule 47 (expresion -> TRUE .)
    GREATER         reduce using rule 47 (expresion -> TRUE .)
    LESS            reduce using rule 47 (expresion -> TRUE .)
    GREATER_EQUALS  reduce using rule 47 (expresion -> TRUE .)
    LESS_EQUALS     reduce using rule 47 (expresion -> TRUE .)
    EQUALS          reduce using rule 47 (expresion -> TRUE .)
    NOT_EQUALS      reduce using rule 47 (expresion -> TRUE .)
    RPAREN          reduce using rule 47 (expresion -> TRUE .)
    LLLAVE          reduce using rule 47 (expresion -> TRUE .)
    RLLAVE          reduce using rule 47 (expresion -> TRUE .)

  ! AND             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! OR              [ reduce using rule 61 (condicion -> TRUE .) ]
  ! VARIABLE        [ reduce using rule 61 (condicion -> TRUE .) ]
  ! PRINT           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LPAREN          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! NUMBER          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FLOAT           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! TRUE            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FALSE           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! NOT             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LISTOF          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MUTABLELISTOF   [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MAPOF           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 61 (condicion -> TRUE .) ]
  ! SETOF           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MUTABLESETOF    [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FOR             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! WHILE           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! IF              [ reduce using rule 61 (condicion -> TRUE .) ]
  ! VAL             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! VAR             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FUN             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! RETURN          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! CLASS           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! OPEN            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! $end            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! PLUS            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MINUS           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! TIMES           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! DIVIDE          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MOD             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! GREATER         [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LESS            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! GREATER_EQUALS  [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LESS_EQUALS     [ reduce using rule 61 (condicion -> TRUE .) ]
  ! EQUALS          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! NOT_EQUALS      [ reduce using rule 61 (condicion -> TRUE .) ]
  ! RPAREN          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LLLAVE          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! RLLAVE          [ reduce using rule 61 (condicion -> TRUE .) ]


state 61

    (62) condicion -> FALSE .
    (48) expresion -> FALSE .

  ! reduce/reduce conflict for AND resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for OR resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for PRINT resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for NOT resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for SETOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for WHILE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for VAL resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for VAR resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for FUN resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for RETURN resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for CLASS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for OPEN resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for PLUS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MINUS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for TIMES resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MOD resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for GREATER resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 48 (expresion -> FALSE .)
    AND             reduce using rule 48 (expresion -> FALSE .)
    OR              reduce using rule 48 (expresion -> FALSE .)
    VARIABLE        reduce using rule 48 (expresion -> FALSE .)
    PRINT           reduce using rule 48 (expresion -> FALSE .)
    LPAREN          reduce using rule 48 (expresion -> FALSE .)
    NUMBER          reduce using rule 48 (expresion -> FALSE .)
    FLOAT           reduce using rule 48 (expresion -> FALSE .)
    TRUE            reduce using rule 48 (expresion -> FALSE .)
    FALSE           reduce using rule 48 (expresion -> FALSE .)
    NOT             reduce using rule 48 (expresion -> FALSE .)
    LISTOF          reduce using rule 48 (expresion -> FALSE .)
    MUTABLELISTOF   reduce using rule 48 (expresion -> FALSE .)
    MAPOF           reduce using rule 48 (expresion -> FALSE .)
    MUTABLEMAPOF    reduce using rule 48 (expresion -> FALSE .)
    SETOF           reduce using rule 48 (expresion -> FALSE .)
    MUTABLESETOF    reduce using rule 48 (expresion -> FALSE .)
    FOR             reduce using rule 48 (expresion -> FALSE .)
    WHILE           reduce using rule 48 (expresion -> FALSE .)
    IF              reduce using rule 48 (expresion -> FALSE .)
    VAL             reduce using rule 48 (expresion -> FALSE .)
    VAR             reduce using rule 48 (expresion -> FALSE .)
    FUN             reduce using rule 48 (expresion -> FALSE .)
    RETURN          reduce using rule 48 (expresion -> FALSE .)
    CLASS           reduce using rule 48 (expresion -> FALSE .)
    OPEN            reduce using rule 48 (expresion -> FALSE .)
    $end            reduce using rule 48 (expresion -> FALSE .)
    PLUS            reduce using rule 48 (expresion -> FALSE .)
    MINUS           reduce using rule 48 (expresion -> FALSE .)
    TIMES           reduce using rule 48 (expresion -> FALSE .)
    DIVIDE          reduce using rule 48 (expresion -> FALSE .)
    MOD             reduce using rule 48 (expresion -> FALSE .)
    GREATER         reduce using rule 48 (expresion -> FALSE .)
    LESS            reduce using rule 48 (expresion -> FALSE .)
    GREATER_EQUALS  reduce using rule 48 (expresion -> FALSE .)
    LESS_EQUALS     reduce using rule 48 (expresion -> FALSE .)
    EQUALS          reduce using rule 48 (expresion -> FALSE .)
    NOT_EQUALS      reduce using rule 48 (expresion -> FALSE .)
    RPAREN          reduce using rule 48 (expresion -> FALSE .)
    LLLAVE          reduce using rule 48 (expresion -> FALSE .)
    RLLAVE          reduce using rule 48 (expresion -> FALSE .)

  ! AND             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! OR              [ reduce using rule 62 (condicion -> FALSE .) ]
  ! VARIABLE        [ reduce using rule 62 (condicion -> FALSE .) ]
  ! PRINT           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LPAREN          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! NUMBER          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FLOAT           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! TRUE            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FALSE           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! NOT             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LISTOF          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MUTABLELISTOF   [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MAPOF           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 62 (condicion -> FALSE .) ]
  ! SETOF           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MUTABLESETOF    [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FOR             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! WHILE           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! IF              [ reduce using rule 62 (condicion -> FALSE .) ]
  ! VAL             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! VAR             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FUN             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! RETURN          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! CLASS           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! OPEN            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! $end            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! PLUS            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MINUS           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! TIMES           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! DIVIDE          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MOD             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! GREATER         [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LESS            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! GREATER_EQUALS  [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LESS_EQUALS     [ reduce using rule 62 (condicion -> FALSE .) ]
  ! EQUALS          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! NOT_EQUALS      [ reduce using rule 62 (condicion -> FALSE .) ]
  ! RPAREN          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LLLAVE          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! RLLAVE          [ reduce using rule 62 (condicion -> FALSE .) ]


state 62

    (63) condicion -> LPAREN . condicion RPAREN
    (44) expresion -> LPAREN . expresion RPAREN
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE

    NOT             shift and go to state 23
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LPAREN          shift and go to state 62
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    VARIABLE        shift and go to state 57

    condicion                      shift and go to state 119
    expresion                      shift and go to state 120

state 63

    (64) estructura -> LISTOF LPAREN . repiteValores RPAREN
    (65) estructura -> LISTOF LPAREN . RPAREN
    (36) repiteValores -> . valor COMMA repiteValores
    (37) repiteValores -> . valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    RPAREN          shift and go to state 122
    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    repiteValores                  shift and go to state 121
    valor                          shift and go to state 111

state 64

    (66) estructura -> MUTABLELISTOF LPAREN . repiteValores RPAREN
    (67) estructura -> MUTABLELISTOF LPAREN . RPAREN
    (36) repiteValores -> . valor COMMA repiteValores
    (37) repiteValores -> . valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    RPAREN          shift and go to state 124
    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    repiteValores                  shift and go to state 123
    valor                          shift and go to state 111

state 65

    (68) estructura -> MAPOF LPAREN . pareskv_mapa RPAREN
    (70) pareskv_mapa -> . valor TO_FROM_KV valor COMMA pareskv_mapa
    (71) pareskv_mapa -> . valor TO_FROM_KV valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    pareskv_mapa                   shift and go to state 125
    valor                          shift and go to state 126

state 66

    (69) estructura -> MUTABLEMAPOF LPAREN . pareskv_mapa RPAREN
    (70) pareskv_mapa -> . valor TO_FROM_KV valor COMMA pareskv_mapa
    (71) pareskv_mapa -> . valor TO_FROM_KV valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    pareskv_mapa                   shift and go to state 127
    valor                          shift and go to state 126

state 67

    (72) estructura -> SETOF LPAREN . repiteValores RPAREN
    (73) estructura -> SETOF LPAREN . RPAREN
    (36) repiteValores -> . valor COMMA repiteValores
    (37) repiteValores -> . valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    RPAREN          shift and go to state 129
    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    repiteValores                  shift and go to state 128
    valor                          shift and go to state 111

state 68

    (74) estructura -> MUTABLESETOF LPAREN . repiteValores RPAREN
    (75) estructura -> MUTABLESETOF LPAREN . RPAREN
    (36) repiteValores -> . valor COMMA repiteValores
    (37) repiteValores -> . valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    RPAREN          shift and go to state 131
    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    repiteValores                  shift and go to state 130
    valor                          shift and go to state 111

state 69

    (84) estructura -> FOR LPAREN . VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE

    VARIABLE        shift and go to state 132


state 70

    (85) estructura -> WHILE condicion . LLLAVE sentencias RLLAVE
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion
    (49) expresion -> condicion .

    LLLAVE          shift and go to state 133
    AND             shift and go to state 51
    OR              shift and go to state 52
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)


state 71

    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion

    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 72

    (86) estructura -> IF condicion . LLLAVE sentencias RLLAVE
    (87) estructura -> IF condicion . LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> IF condicion . LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> IF condicion . LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion
    (49) expresion -> condicion .

    LLLAVE          shift and go to state 134
    AND             shift and go to state 51
    OR              shift and go to state 52
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)


state 73

    (17) declaracion_variable -> VAL VARIABLE . ASIGN valor
    (19) declaracion_variable -> VAL VARIABLE . ASIGN estructura
    (21) declaracion_variable -> VAL VARIABLE . ASIGN creacionObjeto

    ASIGN           shift and go to state 135


state 74

    (18) declaracion_variable -> VAR VARIABLE . ASIGN valor
    (20) declaracion_variable -> VAR VARIABLE . ASIGN estructura
    (22) declaracion_variable -> VAR VARIABLE . ASIGN creacionObjeto

    ASIGN           shift and go to state 136


state 75

    (97) funcion -> FUN VARIABLE . LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> FUN VARIABLE . LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> FUN VARIABLE . LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias

    LPAREN          shift and go to state 137


state 76

    (76) retorno -> RETURN objetoRetorno .

    VARIABLE        reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    PRINT           reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    LPAREN          reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    NUMBER          reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    FLOAT           reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    TRUE            reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    FALSE           reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    NOT             reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    LISTOF          reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    MUTABLELISTOF   reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    MAPOF           reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    MUTABLEMAPOF    reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    SETOF           reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    MUTABLESETOF    reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    FOR             reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    WHILE           reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    IF              reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    VAL             reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    VAR             reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    FUN             reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    RETURN          reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    CLASS           reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    OPEN            reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    $end            reduce using rule 76 (retorno -> RETURN objetoRetorno .)
    RLLAVE          reduce using rule 76 (retorno -> RETURN objetoRetorno .)


state 77

    (77) objetoRetorno -> valor .

    VARIABLE        reduce using rule 77 (objetoRetorno -> valor .)
    PRINT           reduce using rule 77 (objetoRetorno -> valor .)
    LPAREN          reduce using rule 77 (objetoRetorno -> valor .)
    NUMBER          reduce using rule 77 (objetoRetorno -> valor .)
    FLOAT           reduce using rule 77 (objetoRetorno -> valor .)
    TRUE            reduce using rule 77 (objetoRetorno -> valor .)
    FALSE           reduce using rule 77 (objetoRetorno -> valor .)
    NOT             reduce using rule 77 (objetoRetorno -> valor .)
    LISTOF          reduce using rule 77 (objetoRetorno -> valor .)
    MUTABLELISTOF   reduce using rule 77 (objetoRetorno -> valor .)
    MAPOF           reduce using rule 77 (objetoRetorno -> valor .)
    MUTABLEMAPOF    reduce using rule 77 (objetoRetorno -> valor .)
    SETOF           reduce using rule 77 (objetoRetorno -> valor .)
    MUTABLESETOF    reduce using rule 77 (objetoRetorno -> valor .)
    FOR             reduce using rule 77 (objetoRetorno -> valor .)
    WHILE           reduce using rule 77 (objetoRetorno -> valor .)
    IF              reduce using rule 77 (objetoRetorno -> valor .)
    VAL             reduce using rule 77 (objetoRetorno -> valor .)
    VAR             reduce using rule 77 (objetoRetorno -> valor .)
    FUN             reduce using rule 77 (objetoRetorno -> valor .)
    RETURN          reduce using rule 77 (objetoRetorno -> valor .)
    CLASS           reduce using rule 77 (objetoRetorno -> valor .)
    OPEN            reduce using rule 77 (objetoRetorno -> valor .)
    $end            reduce using rule 77 (objetoRetorno -> valor .)
    RLLAVE          reduce using rule 77 (objetoRetorno -> valor .)


state 78

    (78) objetoRetorno -> condicion .
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion
    (49) expresion -> condicion .

  ! reduce/reduce conflict for VARIABLE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for PRINT resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for LPAREN resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for NUMBER resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for TRUE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for FALSE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for NOT resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for LISTOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MAPOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for SETOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for FOR resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for WHILE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for IF resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for VAL resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for VAR resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for FUN resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for RETURN resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for CLASS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for OPEN resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for $end resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 49 (expresion -> condicion .)
    AND             shift and go to state 51
    OR              shift and go to state 52
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)
    VARIABLE        reduce using rule 49 (expresion -> condicion .)
    PRINT           reduce using rule 49 (expresion -> condicion .)
    LPAREN          reduce using rule 49 (expresion -> condicion .)
    NUMBER          reduce using rule 49 (expresion -> condicion .)
    FLOAT           reduce using rule 49 (expresion -> condicion .)
    TRUE            reduce using rule 49 (expresion -> condicion .)
    FALSE           reduce using rule 49 (expresion -> condicion .)
    NOT             reduce using rule 49 (expresion -> condicion .)
    LISTOF          reduce using rule 49 (expresion -> condicion .)
    MUTABLELISTOF   reduce using rule 49 (expresion -> condicion .)
    MAPOF           reduce using rule 49 (expresion -> condicion .)
    MUTABLEMAPOF    reduce using rule 49 (expresion -> condicion .)
    SETOF           reduce using rule 49 (expresion -> condicion .)
    MUTABLESETOF    reduce using rule 49 (expresion -> condicion .)
    FOR             reduce using rule 49 (expresion -> condicion .)
    WHILE           reduce using rule 49 (expresion -> condicion .)
    IF              reduce using rule 49 (expresion -> condicion .)
    VAL             reduce using rule 49 (expresion -> condicion .)
    VAR             reduce using rule 49 (expresion -> condicion .)
    FUN             reduce using rule 49 (expresion -> condicion .)
    RETURN          reduce using rule 49 (expresion -> condicion .)
    CLASS           reduce using rule 49 (expresion -> condicion .)
    OPEN            reduce using rule 49 (expresion -> condicion .)
    $end            reduce using rule 49 (expresion -> condicion .)
    RLLAVE          reduce using rule 49 (expresion -> condicion .)

  ! VARIABLE        [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! PRINT           [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! LPAREN          [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! NUMBER          [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! FLOAT           [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! TRUE            [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! FALSE           [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! NOT             [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! LISTOF          [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! MUTABLELISTOF   [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! MAPOF           [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! MUTABLEMAPOF    [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! SETOF           [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! MUTABLESETOF    [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! FOR             [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! WHILE           [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! IF              [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! VAL             [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! VAR             [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! FUN             [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! RETURN          [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! CLASS           [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! OPEN            [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! $end            [ reduce using rule 78 (objetoRetorno -> condicion .) ]
  ! RLLAVE          [ reduce using rule 78 (objetoRetorno -> condicion .) ]


state 79

    (79) objetoRetorno -> expresion .
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion

    VARIABLE        reduce using rule 79 (objetoRetorno -> expresion .)
    PRINT           reduce using rule 79 (objetoRetorno -> expresion .)
    LPAREN          reduce using rule 79 (objetoRetorno -> expresion .)
    NUMBER          reduce using rule 79 (objetoRetorno -> expresion .)
    FLOAT           reduce using rule 79 (objetoRetorno -> expresion .)
    TRUE            reduce using rule 79 (objetoRetorno -> expresion .)
    FALSE           reduce using rule 79 (objetoRetorno -> expresion .)
    NOT             reduce using rule 79 (objetoRetorno -> expresion .)
    LISTOF          reduce using rule 79 (objetoRetorno -> expresion .)
    MUTABLELISTOF   reduce using rule 79 (objetoRetorno -> expresion .)
    MAPOF           reduce using rule 79 (objetoRetorno -> expresion .)
    MUTABLEMAPOF    reduce using rule 79 (objetoRetorno -> expresion .)
    SETOF           reduce using rule 79 (objetoRetorno -> expresion .)
    MUTABLESETOF    reduce using rule 79 (objetoRetorno -> expresion .)
    FOR             reduce using rule 79 (objetoRetorno -> expresion .)
    WHILE           reduce using rule 79 (objetoRetorno -> expresion .)
    IF              reduce using rule 79 (objetoRetorno -> expresion .)
    VAL             reduce using rule 79 (objetoRetorno -> expresion .)
    VAR             reduce using rule 79 (objetoRetorno -> expresion .)
    FUN             reduce using rule 79 (objetoRetorno -> expresion .)
    RETURN          reduce using rule 79 (objetoRetorno -> expresion .)
    CLASS           reduce using rule 79 (objetoRetorno -> expresion .)
    OPEN            reduce using rule 79 (objetoRetorno -> expresion .)
    $end            reduce using rule 79 (objetoRetorno -> expresion .)
    RLLAVE          reduce using rule 79 (objetoRetorno -> expresion .)
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 80

    (80) objetoRetorno -> TRUE .
    (34) valor -> TRUE .
    (61) condicion -> TRUE .
    (47) expresion -> TRUE .

  ! reduce/reduce conflict for VARIABLE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for PRINT resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for NOT resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for SETOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for WHILE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for VAL resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for VAR resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FUN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for RETURN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for CLASS resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for OPEN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for PRINT resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for NOT resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for SETOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for WHILE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for VAL resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for VAR resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FUN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for RETURN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for CLASS resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for OPEN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for GREATER resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for PLUS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MINUS resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for TIMES resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for MOD resolved using rule 47 (expresion -> TRUE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for PRINT resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for TRUE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FALSE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for NOT resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for SETOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FOR resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for WHILE resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for IF resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for VAL resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for VAR resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for FUN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for RETURN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for CLASS resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for OPEN resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for $end resolved using rule 34 (valor -> TRUE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 34 (valor -> TRUE .)
    VARIABLE        reduce using rule 34 (valor -> TRUE .)
    PRINT           reduce using rule 34 (valor -> TRUE .)
    LPAREN          reduce using rule 34 (valor -> TRUE .)
    NUMBER          reduce using rule 34 (valor -> TRUE .)
    FLOAT           reduce using rule 34 (valor -> TRUE .)
    TRUE            reduce using rule 34 (valor -> TRUE .)
    FALSE           reduce using rule 34 (valor -> TRUE .)
    NOT             reduce using rule 34 (valor -> TRUE .)
    LISTOF          reduce using rule 34 (valor -> TRUE .)
    MUTABLELISTOF   reduce using rule 34 (valor -> TRUE .)
    MAPOF           reduce using rule 34 (valor -> TRUE .)
    MUTABLEMAPOF    reduce using rule 34 (valor -> TRUE .)
    SETOF           reduce using rule 34 (valor -> TRUE .)
    MUTABLESETOF    reduce using rule 34 (valor -> TRUE .)
    FOR             reduce using rule 34 (valor -> TRUE .)
    WHILE           reduce using rule 34 (valor -> TRUE .)
    IF              reduce using rule 34 (valor -> TRUE .)
    VAL             reduce using rule 34 (valor -> TRUE .)
    VAR             reduce using rule 34 (valor -> TRUE .)
    FUN             reduce using rule 34 (valor -> TRUE .)
    RETURN          reduce using rule 34 (valor -> TRUE .)
    CLASS           reduce using rule 34 (valor -> TRUE .)
    OPEN            reduce using rule 34 (valor -> TRUE .)
    $end            reduce using rule 34 (valor -> TRUE .)
    RLLAVE          reduce using rule 34 (valor -> TRUE .)
    AND             reduce using rule 61 (condicion -> TRUE .)
    OR              reduce using rule 61 (condicion -> TRUE .)
    GREATER         reduce using rule 47 (expresion -> TRUE .)
    LESS            reduce using rule 47 (expresion -> TRUE .)
    GREATER_EQUALS  reduce using rule 47 (expresion -> TRUE .)
    LESS_EQUALS     reduce using rule 47 (expresion -> TRUE .)
    EQUALS          reduce using rule 47 (expresion -> TRUE .)
    NOT_EQUALS      reduce using rule 47 (expresion -> TRUE .)
    PLUS            reduce using rule 47 (expresion -> TRUE .)
    MINUS           reduce using rule 47 (expresion -> TRUE .)
    TIMES           reduce using rule 47 (expresion -> TRUE .)
    DIVIDE          reduce using rule 47 (expresion -> TRUE .)
    MOD             reduce using rule 47 (expresion -> TRUE .)

  ! VARIABLE        [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! PRINT           [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! LPAREN          [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! NUMBER          [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! FLOAT           [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! TRUE            [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! FALSE           [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! NOT             [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! LISTOF          [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! MUTABLELISTOF   [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! MAPOF           [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! SETOF           [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! MUTABLESETOF    [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! FOR             [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! WHILE           [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! IF              [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! VAL             [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! VAR             [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! FUN             [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! RETURN          [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! CLASS           [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! OPEN            [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! $end            [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! RLLAVE          [ reduce using rule 80 (objetoRetorno -> TRUE .) ]
  ! VARIABLE        [ reduce using rule 61 (condicion -> TRUE .) ]
  ! PRINT           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LPAREN          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! NUMBER          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FLOAT           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! TRUE            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FALSE           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! NOT             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LISTOF          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MUTABLELISTOF   [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MAPOF           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 61 (condicion -> TRUE .) ]
  ! SETOF           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MUTABLESETOF    [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FOR             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! WHILE           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! IF              [ reduce using rule 61 (condicion -> TRUE .) ]
  ! VAL             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! VAR             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! FUN             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! RETURN          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! CLASS           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! OPEN            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! $end            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! RLLAVE          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! GREATER         [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LESS            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! GREATER_EQUALS  [ reduce using rule 61 (condicion -> TRUE .) ]
  ! LESS_EQUALS     [ reduce using rule 61 (condicion -> TRUE .) ]
  ! EQUALS          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! NOT_EQUALS      [ reduce using rule 61 (condicion -> TRUE .) ]
  ! PLUS            [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MINUS           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! TIMES           [ reduce using rule 61 (condicion -> TRUE .) ]
  ! DIVIDE          [ reduce using rule 61 (condicion -> TRUE .) ]
  ! MOD             [ reduce using rule 61 (condicion -> TRUE .) ]
  ! VARIABLE        [ reduce using rule 47 (expresion -> TRUE .) ]
  ! PRINT           [ reduce using rule 47 (expresion -> TRUE .) ]
  ! LPAREN          [ reduce using rule 47 (expresion -> TRUE .) ]
  ! NUMBER          [ reduce using rule 47 (expresion -> TRUE .) ]
  ! FLOAT           [ reduce using rule 47 (expresion -> TRUE .) ]
  ! TRUE            [ reduce using rule 47 (expresion -> TRUE .) ]
  ! FALSE           [ reduce using rule 47 (expresion -> TRUE .) ]
  ! NOT             [ reduce using rule 47 (expresion -> TRUE .) ]
  ! LISTOF          [ reduce using rule 47 (expresion -> TRUE .) ]
  ! MUTABLELISTOF   [ reduce using rule 47 (expresion -> TRUE .) ]
  ! MAPOF           [ reduce using rule 47 (expresion -> TRUE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 47 (expresion -> TRUE .) ]
  ! SETOF           [ reduce using rule 47 (expresion -> TRUE .) ]
  ! MUTABLESETOF    [ reduce using rule 47 (expresion -> TRUE .) ]
  ! FOR             [ reduce using rule 47 (expresion -> TRUE .) ]
  ! WHILE           [ reduce using rule 47 (expresion -> TRUE .) ]
  ! IF              [ reduce using rule 47 (expresion -> TRUE .) ]
  ! VAL             [ reduce using rule 47 (expresion -> TRUE .) ]
  ! VAR             [ reduce using rule 47 (expresion -> TRUE .) ]
  ! FUN             [ reduce using rule 47 (expresion -> TRUE .) ]
  ! RETURN          [ reduce using rule 47 (expresion -> TRUE .) ]
  ! CLASS           [ reduce using rule 47 (expresion -> TRUE .) ]
  ! OPEN            [ reduce using rule 47 (expresion -> TRUE .) ]
  ! $end            [ reduce using rule 47 (expresion -> TRUE .) ]
  ! RLLAVE          [ reduce using rule 47 (expresion -> TRUE .) ]


state 81

    (81) objetoRetorno -> FALSE .
    (35) valor -> FALSE .
    (62) condicion -> FALSE .
    (48) expresion -> FALSE .

  ! reduce/reduce conflict for VARIABLE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for PRINT resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for NOT resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for SETOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for WHILE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for VAL resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for VAR resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FUN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for RETURN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for CLASS resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for OPEN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for PRINT resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for NOT resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for SETOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for WHILE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for VAL resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for VAR resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FUN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for RETURN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for CLASS resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for OPEN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for GREATER resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for PLUS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MINUS resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for TIMES resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for MOD resolved using rule 48 (expresion -> FALSE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for PRINT resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for TRUE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FALSE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for NOT resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for SETOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FOR resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for WHILE resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for IF resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for VAL resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for VAR resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for FUN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for RETURN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for CLASS resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for OPEN resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for $end resolved using rule 35 (valor -> FALSE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 35 (valor -> FALSE .)
    VARIABLE        reduce using rule 35 (valor -> FALSE .)
    PRINT           reduce using rule 35 (valor -> FALSE .)
    LPAREN          reduce using rule 35 (valor -> FALSE .)
    NUMBER          reduce using rule 35 (valor -> FALSE .)
    FLOAT           reduce using rule 35 (valor -> FALSE .)
    TRUE            reduce using rule 35 (valor -> FALSE .)
    FALSE           reduce using rule 35 (valor -> FALSE .)
    NOT             reduce using rule 35 (valor -> FALSE .)
    LISTOF          reduce using rule 35 (valor -> FALSE .)
    MUTABLELISTOF   reduce using rule 35 (valor -> FALSE .)
    MAPOF           reduce using rule 35 (valor -> FALSE .)
    MUTABLEMAPOF    reduce using rule 35 (valor -> FALSE .)
    SETOF           reduce using rule 35 (valor -> FALSE .)
    MUTABLESETOF    reduce using rule 35 (valor -> FALSE .)
    FOR             reduce using rule 35 (valor -> FALSE .)
    WHILE           reduce using rule 35 (valor -> FALSE .)
    IF              reduce using rule 35 (valor -> FALSE .)
    VAL             reduce using rule 35 (valor -> FALSE .)
    VAR             reduce using rule 35 (valor -> FALSE .)
    FUN             reduce using rule 35 (valor -> FALSE .)
    RETURN          reduce using rule 35 (valor -> FALSE .)
    CLASS           reduce using rule 35 (valor -> FALSE .)
    OPEN            reduce using rule 35 (valor -> FALSE .)
    $end            reduce using rule 35 (valor -> FALSE .)
    RLLAVE          reduce using rule 35 (valor -> FALSE .)
    AND             reduce using rule 62 (condicion -> FALSE .)
    OR              reduce using rule 62 (condicion -> FALSE .)
    GREATER         reduce using rule 48 (expresion -> FALSE .)
    LESS            reduce using rule 48 (expresion -> FALSE .)
    GREATER_EQUALS  reduce using rule 48 (expresion -> FALSE .)
    LESS_EQUALS     reduce using rule 48 (expresion -> FALSE .)
    EQUALS          reduce using rule 48 (expresion -> FALSE .)
    NOT_EQUALS      reduce using rule 48 (expresion -> FALSE .)
    PLUS            reduce using rule 48 (expresion -> FALSE .)
    MINUS           reduce using rule 48 (expresion -> FALSE .)
    TIMES           reduce using rule 48 (expresion -> FALSE .)
    DIVIDE          reduce using rule 48 (expresion -> FALSE .)
    MOD             reduce using rule 48 (expresion -> FALSE .)

  ! VARIABLE        [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! PRINT           [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! LPAREN          [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! NUMBER          [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! FLOAT           [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! TRUE            [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! FALSE           [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! NOT             [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! LISTOF          [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! MUTABLELISTOF   [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! MAPOF           [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! SETOF           [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! MUTABLESETOF    [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! FOR             [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! WHILE           [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! IF              [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! VAL             [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! VAR             [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! FUN             [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! RETURN          [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! CLASS           [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! OPEN            [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! $end            [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! RLLAVE          [ reduce using rule 81 (objetoRetorno -> FALSE .) ]
  ! VARIABLE        [ reduce using rule 62 (condicion -> FALSE .) ]
  ! PRINT           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LPAREN          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! NUMBER          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FLOAT           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! TRUE            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FALSE           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! NOT             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LISTOF          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MUTABLELISTOF   [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MAPOF           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 62 (condicion -> FALSE .) ]
  ! SETOF           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MUTABLESETOF    [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FOR             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! WHILE           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! IF              [ reduce using rule 62 (condicion -> FALSE .) ]
  ! VAL             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! VAR             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! FUN             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! RETURN          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! CLASS           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! OPEN            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! $end            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! RLLAVE          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! GREATER         [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LESS            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! GREATER_EQUALS  [ reduce using rule 62 (condicion -> FALSE .) ]
  ! LESS_EQUALS     [ reduce using rule 62 (condicion -> FALSE .) ]
  ! EQUALS          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! NOT_EQUALS      [ reduce using rule 62 (condicion -> FALSE .) ]
  ! PLUS            [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MINUS           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! TIMES           [ reduce using rule 62 (condicion -> FALSE .) ]
  ! DIVIDE          [ reduce using rule 62 (condicion -> FALSE .) ]
  ! MOD             [ reduce using rule 62 (condicion -> FALSE .) ]
  ! VARIABLE        [ reduce using rule 48 (expresion -> FALSE .) ]
  ! PRINT           [ reduce using rule 48 (expresion -> FALSE .) ]
  ! LPAREN          [ reduce using rule 48 (expresion -> FALSE .) ]
  ! NUMBER          [ reduce using rule 48 (expresion -> FALSE .) ]
  ! FLOAT           [ reduce using rule 48 (expresion -> FALSE .) ]
  ! TRUE            [ reduce using rule 48 (expresion -> FALSE .) ]
  ! FALSE           [ reduce using rule 48 (expresion -> FALSE .) ]
  ! NOT             [ reduce using rule 48 (expresion -> FALSE .) ]
  ! LISTOF          [ reduce using rule 48 (expresion -> FALSE .) ]
  ! MUTABLELISTOF   [ reduce using rule 48 (expresion -> FALSE .) ]
  ! MAPOF           [ reduce using rule 48 (expresion -> FALSE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 48 (expresion -> FALSE .) ]
  ! SETOF           [ reduce using rule 48 (expresion -> FALSE .) ]
  ! MUTABLESETOF    [ reduce using rule 48 (expresion -> FALSE .) ]
  ! FOR             [ reduce using rule 48 (expresion -> FALSE .) ]
  ! WHILE           [ reduce using rule 48 (expresion -> FALSE .) ]
  ! IF              [ reduce using rule 48 (expresion -> FALSE .) ]
  ! VAL             [ reduce using rule 48 (expresion -> FALSE .) ]
  ! VAR             [ reduce using rule 48 (expresion -> FALSE .) ]
  ! FUN             [ reduce using rule 48 (expresion -> FALSE .) ]
  ! RETURN          [ reduce using rule 48 (expresion -> FALSE .) ]
  ! CLASS           [ reduce using rule 48 (expresion -> FALSE .) ]
  ! OPEN            [ reduce using rule 48 (expresion -> FALSE .) ]
  ! $end            [ reduce using rule 48 (expresion -> FALSE .) ]
  ! RLLAVE          [ reduce using rule 48 (expresion -> FALSE .) ]


state 82

    (82) objetoRetorno -> estructura .

    VARIABLE        reduce using rule 82 (objetoRetorno -> estructura .)
    PRINT           reduce using rule 82 (objetoRetorno -> estructura .)
    LPAREN          reduce using rule 82 (objetoRetorno -> estructura .)
    NUMBER          reduce using rule 82 (objetoRetorno -> estructura .)
    FLOAT           reduce using rule 82 (objetoRetorno -> estructura .)
    TRUE            reduce using rule 82 (objetoRetorno -> estructura .)
    FALSE           reduce using rule 82 (objetoRetorno -> estructura .)
    NOT             reduce using rule 82 (objetoRetorno -> estructura .)
    LISTOF          reduce using rule 82 (objetoRetorno -> estructura .)
    MUTABLELISTOF   reduce using rule 82 (objetoRetorno -> estructura .)
    MAPOF           reduce using rule 82 (objetoRetorno -> estructura .)
    MUTABLEMAPOF    reduce using rule 82 (objetoRetorno -> estructura .)
    SETOF           reduce using rule 82 (objetoRetorno -> estructura .)
    MUTABLESETOF    reduce using rule 82 (objetoRetorno -> estructura .)
    FOR             reduce using rule 82 (objetoRetorno -> estructura .)
    WHILE           reduce using rule 82 (objetoRetorno -> estructura .)
    IF              reduce using rule 82 (objetoRetorno -> estructura .)
    VAL             reduce using rule 82 (objetoRetorno -> estructura .)
    VAR             reduce using rule 82 (objetoRetorno -> estructura .)
    FUN             reduce using rule 82 (objetoRetorno -> estructura .)
    RETURN          reduce using rule 82 (objetoRetorno -> estructura .)
    CLASS           reduce using rule 82 (objetoRetorno -> estructura .)
    OPEN            reduce using rule 82 (objetoRetorno -> estructura .)
    $end            reduce using rule 82 (objetoRetorno -> estructura .)
    RLLAVE          reduce using rule 82 (objetoRetorno -> estructura .)


state 83

    (83) objetoRetorno -> empty .

    VARIABLE        reduce using rule 83 (objetoRetorno -> empty .)
    PRINT           reduce using rule 83 (objetoRetorno -> empty .)
    LPAREN          reduce using rule 83 (objetoRetorno -> empty .)
    NUMBER          reduce using rule 83 (objetoRetorno -> empty .)
    FLOAT           reduce using rule 83 (objetoRetorno -> empty .)
    TRUE            reduce using rule 83 (objetoRetorno -> empty .)
    FALSE           reduce using rule 83 (objetoRetorno -> empty .)
    NOT             reduce using rule 83 (objetoRetorno -> empty .)
    LISTOF          reduce using rule 83 (objetoRetorno -> empty .)
    MUTABLELISTOF   reduce using rule 83 (objetoRetorno -> empty .)
    MAPOF           reduce using rule 83 (objetoRetorno -> empty .)
    MUTABLEMAPOF    reduce using rule 83 (objetoRetorno -> empty .)
    SETOF           reduce using rule 83 (objetoRetorno -> empty .)
    MUTABLESETOF    reduce using rule 83 (objetoRetorno -> empty .)
    FOR             reduce using rule 83 (objetoRetorno -> empty .)
    WHILE           reduce using rule 83 (objetoRetorno -> empty .)
    IF              reduce using rule 83 (objetoRetorno -> empty .)
    VAL             reduce using rule 83 (objetoRetorno -> empty .)
    VAR             reduce using rule 83 (objetoRetorno -> empty .)
    FUN             reduce using rule 83 (objetoRetorno -> empty .)
    RETURN          reduce using rule 83 (objetoRetorno -> empty .)
    CLASS           reduce using rule 83 (objetoRetorno -> empty .)
    OPEN            reduce using rule 83 (objetoRetorno -> empty .)
    $end            reduce using rule 83 (objetoRetorno -> empty .)
    RLLAVE          reduce using rule 83 (objetoRetorno -> empty .)


state 84

    (30) valor -> NUMBER .
    (45) expresion -> NUMBER .

  ! reduce/reduce conflict for VARIABLE resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for FLOAT resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for TRUE resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for FALSE resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for NOT resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for LISTOF resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for MAPOF resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for SETOF resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for WHILE resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for IF resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for VAL resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for VAR resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for FUN resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for RETURN resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for CLASS resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for OPEN resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for $end resolved using rule 30 (valor -> NUMBER .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 30 (valor -> NUMBER .)
    VARIABLE        reduce using rule 30 (valor -> NUMBER .)
    PRINT           reduce using rule 30 (valor -> NUMBER .)
    LPAREN          reduce using rule 30 (valor -> NUMBER .)
    NUMBER          reduce using rule 30 (valor -> NUMBER .)
    FLOAT           reduce using rule 30 (valor -> NUMBER .)
    TRUE            reduce using rule 30 (valor -> NUMBER .)
    FALSE           reduce using rule 30 (valor -> NUMBER .)
    NOT             reduce using rule 30 (valor -> NUMBER .)
    LISTOF          reduce using rule 30 (valor -> NUMBER .)
    MUTABLELISTOF   reduce using rule 30 (valor -> NUMBER .)
    MAPOF           reduce using rule 30 (valor -> NUMBER .)
    MUTABLEMAPOF    reduce using rule 30 (valor -> NUMBER .)
    SETOF           reduce using rule 30 (valor -> NUMBER .)
    MUTABLESETOF    reduce using rule 30 (valor -> NUMBER .)
    FOR             reduce using rule 30 (valor -> NUMBER .)
    WHILE           reduce using rule 30 (valor -> NUMBER .)
    IF              reduce using rule 30 (valor -> NUMBER .)
    VAL             reduce using rule 30 (valor -> NUMBER .)
    VAR             reduce using rule 30 (valor -> NUMBER .)
    FUN             reduce using rule 30 (valor -> NUMBER .)
    RETURN          reduce using rule 30 (valor -> NUMBER .)
    CLASS           reduce using rule 30 (valor -> NUMBER .)
    OPEN            reduce using rule 30 (valor -> NUMBER .)
    $end            reduce using rule 30 (valor -> NUMBER .)
    RLLAVE          reduce using rule 30 (valor -> NUMBER .)
    GREATER         reduce using rule 45 (expresion -> NUMBER .)
    LESS            reduce using rule 45 (expresion -> NUMBER .)
    GREATER_EQUALS  reduce using rule 45 (expresion -> NUMBER .)
    LESS_EQUALS     reduce using rule 45 (expresion -> NUMBER .)
    EQUALS          reduce using rule 45 (expresion -> NUMBER .)
    NOT_EQUALS      reduce using rule 45 (expresion -> NUMBER .)
    PLUS            reduce using rule 45 (expresion -> NUMBER .)
    MINUS           reduce using rule 45 (expresion -> NUMBER .)
    TIMES           reduce using rule 45 (expresion -> NUMBER .)
    DIVIDE          reduce using rule 45 (expresion -> NUMBER .)
    MOD             reduce using rule 45 (expresion -> NUMBER .)

  ! VARIABLE        [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! PRINT           [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! LPAREN          [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! NUMBER          [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! FLOAT           [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! TRUE            [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! FALSE           [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! NOT             [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! LISTOF          [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! MUTABLELISTOF   [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! MAPOF           [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! MUTABLEMAPOF    [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! SETOF           [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! MUTABLESETOF    [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! FOR             [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! WHILE           [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! IF              [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! VAL             [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! VAR             [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! FUN             [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! RETURN          [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! CLASS           [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! OPEN            [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! $end            [ reduce using rule 45 (expresion -> NUMBER .) ]
  ! RLLAVE          [ reduce using rule 45 (expresion -> NUMBER .) ]


state 85

    (31) valor -> FLOAT .
    (46) expresion -> FLOAT .

  ! reduce/reduce conflict for VARIABLE resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for PRINT resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for LPAREN resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for NUMBER resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for FLOAT resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for TRUE resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for FALSE resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for NOT resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for LISTOF resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for MAPOF resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for SETOF resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for FOR resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for WHILE resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for IF resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for VAL resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for VAR resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for FUN resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for RETURN resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for CLASS resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for OPEN resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for $end resolved using rule 31 (valor -> FLOAT .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 31 (valor -> FLOAT .)
    VARIABLE        reduce using rule 31 (valor -> FLOAT .)
    PRINT           reduce using rule 31 (valor -> FLOAT .)
    LPAREN          reduce using rule 31 (valor -> FLOAT .)
    NUMBER          reduce using rule 31 (valor -> FLOAT .)
    FLOAT           reduce using rule 31 (valor -> FLOAT .)
    TRUE            reduce using rule 31 (valor -> FLOAT .)
    FALSE           reduce using rule 31 (valor -> FLOAT .)
    NOT             reduce using rule 31 (valor -> FLOAT .)
    LISTOF          reduce using rule 31 (valor -> FLOAT .)
    MUTABLELISTOF   reduce using rule 31 (valor -> FLOAT .)
    MAPOF           reduce using rule 31 (valor -> FLOAT .)
    MUTABLEMAPOF    reduce using rule 31 (valor -> FLOAT .)
    SETOF           reduce using rule 31 (valor -> FLOAT .)
    MUTABLESETOF    reduce using rule 31 (valor -> FLOAT .)
    FOR             reduce using rule 31 (valor -> FLOAT .)
    WHILE           reduce using rule 31 (valor -> FLOAT .)
    IF              reduce using rule 31 (valor -> FLOAT .)
    VAL             reduce using rule 31 (valor -> FLOAT .)
    VAR             reduce using rule 31 (valor -> FLOAT .)
    FUN             reduce using rule 31 (valor -> FLOAT .)
    RETURN          reduce using rule 31 (valor -> FLOAT .)
    CLASS           reduce using rule 31 (valor -> FLOAT .)
    OPEN            reduce using rule 31 (valor -> FLOAT .)
    $end            reduce using rule 31 (valor -> FLOAT .)
    RLLAVE          reduce using rule 31 (valor -> FLOAT .)
    GREATER         reduce using rule 46 (expresion -> FLOAT .)
    LESS            reduce using rule 46 (expresion -> FLOAT .)
    GREATER_EQUALS  reduce using rule 46 (expresion -> FLOAT .)
    LESS_EQUALS     reduce using rule 46 (expresion -> FLOAT .)
    EQUALS          reduce using rule 46 (expresion -> FLOAT .)
    NOT_EQUALS      reduce using rule 46 (expresion -> FLOAT .)
    PLUS            reduce using rule 46 (expresion -> FLOAT .)
    MINUS           reduce using rule 46 (expresion -> FLOAT .)
    TIMES           reduce using rule 46 (expresion -> FLOAT .)
    DIVIDE          reduce using rule 46 (expresion -> FLOAT .)
    MOD             reduce using rule 46 (expresion -> FLOAT .)

  ! VARIABLE        [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! PRINT           [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! LPAREN          [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! NUMBER          [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! FLOAT           [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! TRUE            [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! FALSE           [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! NOT             [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! LISTOF          [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! MUTABLELISTOF   [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! MAPOF           [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! MUTABLEMAPOF    [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! SETOF           [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! MUTABLESETOF    [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! FOR             [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! WHILE           [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! IF              [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! VAL             [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! VAR             [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! FUN             [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! RETURN          [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! CLASS           [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! OPEN            [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! $end            [ reduce using rule 46 (expresion -> FLOAT .) ]
  ! RLLAVE          [ reduce using rule 46 (expresion -> FLOAT .) ]


state 86

    (32) valor -> VARIABLE .
    (50) expresion -> VARIABLE .

  ! reduce/reduce conflict for VARIABLE resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for TRUE resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FALSE resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SETOF resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FOR resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAL resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUN resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RETURN resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for CLASS resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for OPEN resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 32 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 32 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 32 (valor -> VARIABLE .)
    PRINT           reduce using rule 32 (valor -> VARIABLE .)
    LPAREN          reduce using rule 32 (valor -> VARIABLE .)
    NUMBER          reduce using rule 32 (valor -> VARIABLE .)
    FLOAT           reduce using rule 32 (valor -> VARIABLE .)
    TRUE            reduce using rule 32 (valor -> VARIABLE .)
    FALSE           reduce using rule 32 (valor -> VARIABLE .)
    NOT             reduce using rule 32 (valor -> VARIABLE .)
    LISTOF          reduce using rule 32 (valor -> VARIABLE .)
    MUTABLELISTOF   reduce using rule 32 (valor -> VARIABLE .)
    MAPOF           reduce using rule 32 (valor -> VARIABLE .)
    MUTABLEMAPOF    reduce using rule 32 (valor -> VARIABLE .)
    SETOF           reduce using rule 32 (valor -> VARIABLE .)
    MUTABLESETOF    reduce using rule 32 (valor -> VARIABLE .)
    FOR             reduce using rule 32 (valor -> VARIABLE .)
    WHILE           reduce using rule 32 (valor -> VARIABLE .)
    IF              reduce using rule 32 (valor -> VARIABLE .)
    VAL             reduce using rule 32 (valor -> VARIABLE .)
    VAR             reduce using rule 32 (valor -> VARIABLE .)
    FUN             reduce using rule 32 (valor -> VARIABLE .)
    RETURN          reduce using rule 32 (valor -> VARIABLE .)
    CLASS           reduce using rule 32 (valor -> VARIABLE .)
    OPEN            reduce using rule 32 (valor -> VARIABLE .)
    $end            reduce using rule 32 (valor -> VARIABLE .)
    RLLAVE          reduce using rule 32 (valor -> VARIABLE .)
    GREATER         reduce using rule 50 (expresion -> VARIABLE .)
    LESS            reduce using rule 50 (expresion -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 50 (expresion -> VARIABLE .)
    LESS_EQUALS     reduce using rule 50 (expresion -> VARIABLE .)
    EQUALS          reduce using rule 50 (expresion -> VARIABLE .)
    NOT_EQUALS      reduce using rule 50 (expresion -> VARIABLE .)
    PLUS            reduce using rule 50 (expresion -> VARIABLE .)
    MINUS           reduce using rule 50 (expresion -> VARIABLE .)
    TIMES           reduce using rule 50 (expresion -> VARIABLE .)
    DIVIDE          reduce using rule 50 (expresion -> VARIABLE .)
    MOD             reduce using rule 50 (expresion -> VARIABLE .)

  ! VARIABLE        [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! LPAREN          [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! NUMBER          [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! FLOAT           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! TRUE            [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! FALSE           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! NOT             [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! LISTOF          [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! MUTABLELISTOF   [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! MAPOF           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! SETOF           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! MUTABLESETOF    [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! FOR             [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! IF              [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! VAL             [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! VAR             [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! FUN             [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! RETURN          [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! CLASS           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! OPEN            [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! $end            [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! RLLAVE          [ reduce using rule 50 (expresion -> VARIABLE .) ]


state 87

    (33) valor -> STRING .

    VARIABLE        reduce using rule 33 (valor -> STRING .)
    PRINT           reduce using rule 33 (valor -> STRING .)
    LPAREN          reduce using rule 33 (valor -> STRING .)
    NUMBER          reduce using rule 33 (valor -> STRING .)
    FLOAT           reduce using rule 33 (valor -> STRING .)
    TRUE            reduce using rule 33 (valor -> STRING .)
    FALSE           reduce using rule 33 (valor -> STRING .)
    NOT             reduce using rule 33 (valor -> STRING .)
    LISTOF          reduce using rule 33 (valor -> STRING .)
    MUTABLELISTOF   reduce using rule 33 (valor -> STRING .)
    MAPOF           reduce using rule 33 (valor -> STRING .)
    MUTABLEMAPOF    reduce using rule 33 (valor -> STRING .)
    SETOF           reduce using rule 33 (valor -> STRING .)
    MUTABLESETOF    reduce using rule 33 (valor -> STRING .)
    FOR             reduce using rule 33 (valor -> STRING .)
    WHILE           reduce using rule 33 (valor -> STRING .)
    IF              reduce using rule 33 (valor -> STRING .)
    VAL             reduce using rule 33 (valor -> STRING .)
    VAR             reduce using rule 33 (valor -> STRING .)
    FUN             reduce using rule 33 (valor -> STRING .)
    RETURN          reduce using rule 33 (valor -> STRING .)
    CLASS           reduce using rule 33 (valor -> STRING .)
    OPEN            reduce using rule 33 (valor -> STRING .)
    $end            reduce using rule 33 (valor -> STRING .)
    RLLAVE          reduce using rule 33 (valor -> STRING .)
    COMMA           reduce using rule 33 (valor -> STRING .)
    RPAREN          reduce using rule 33 (valor -> STRING .)
    TO_FROM_KV      reduce using rule 33 (valor -> STRING .)
    CONSTRUCTOR     reduce using rule 33 (valor -> STRING .)
    RANGE_TO        reduce using rule 33 (valor -> STRING .)
    THIS            reduce using rule 33 (valor -> STRING .)


state 88

    (107) clase -> CLASS VARIABLE . LLLAVE sentencias RLLAVE
    (108) clase -> CLASS VARIABLE . LLLAVE RLLAVE
    (111) clase -> CLASS VARIABLE . COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> CLASS VARIABLE . COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> CLASS VARIABLE . LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> CLASS VARIABLE . LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> CLASS VARIABLE . LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

    LLLAVE          shift and go to state 138
    COLON           shift and go to state 139
    LPAREN          shift and go to state 140


state 89

    (109) clase -> OPEN CLASS . VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> OPEN CLASS . VARIABLE LLLAVE RLLAVE

    VARIABLE        shift and go to state 141


state 90

    (39) expresion -> expresion PLUS expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    VARIABLE        reduce using rule 39 (expresion -> expresion PLUS expresion .)
    PRINT           reduce using rule 39 (expresion -> expresion PLUS expresion .)
    LPAREN          reduce using rule 39 (expresion -> expresion PLUS expresion .)
    NUMBER          reduce using rule 39 (expresion -> expresion PLUS expresion .)
    FLOAT           reduce using rule 39 (expresion -> expresion PLUS expresion .)
    TRUE            reduce using rule 39 (expresion -> expresion PLUS expresion .)
    FALSE           reduce using rule 39 (expresion -> expresion PLUS expresion .)
    NOT             reduce using rule 39 (expresion -> expresion PLUS expresion .)
    LISTOF          reduce using rule 39 (expresion -> expresion PLUS expresion .)
    MUTABLELISTOF   reduce using rule 39 (expresion -> expresion PLUS expresion .)
    MAPOF           reduce using rule 39 (expresion -> expresion PLUS expresion .)
    MUTABLEMAPOF    reduce using rule 39 (expresion -> expresion PLUS expresion .)
    SETOF           reduce using rule 39 (expresion -> expresion PLUS expresion .)
    MUTABLESETOF    reduce using rule 39 (expresion -> expresion PLUS expresion .)
    FOR             reduce using rule 39 (expresion -> expresion PLUS expresion .)
    WHILE           reduce using rule 39 (expresion -> expresion PLUS expresion .)
    IF              reduce using rule 39 (expresion -> expresion PLUS expresion .)
    VAL             reduce using rule 39 (expresion -> expresion PLUS expresion .)
    VAR             reduce using rule 39 (expresion -> expresion PLUS expresion .)
    FUN             reduce using rule 39 (expresion -> expresion PLUS expresion .)
    RETURN          reduce using rule 39 (expresion -> expresion PLUS expresion .)
    CLASS           reduce using rule 39 (expresion -> expresion PLUS expresion .)
    OPEN            reduce using rule 39 (expresion -> expresion PLUS expresion .)
    $end            reduce using rule 39 (expresion -> expresion PLUS expresion .)
    RPAREN          reduce using rule 39 (expresion -> expresion PLUS expresion .)
    AND             reduce using rule 39 (expresion -> expresion PLUS expresion .)
    OR              reduce using rule 39 (expresion -> expresion PLUS expresion .)
    LLLAVE          reduce using rule 39 (expresion -> expresion PLUS expresion .)
    RLLAVE          reduce using rule 39 (expresion -> expresion PLUS expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50

  ! PLUS            [ reduce using rule 39 (expresion -> expresion PLUS expresion .) ]
  ! MINUS           [ reduce using rule 39 (expresion -> expresion PLUS expresion .) ]
  ! TIMES           [ reduce using rule 39 (expresion -> expresion PLUS expresion .) ]
  ! DIVIDE          [ reduce using rule 39 (expresion -> expresion PLUS expresion .) ]
  ! MOD             [ reduce using rule 39 (expresion -> expresion PLUS expresion .) ]
  ! GREATER         [ reduce using rule 39 (expresion -> expresion PLUS expresion .) ]
  ! LESS            [ reduce using rule 39 (expresion -> expresion PLUS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 39 (expresion -> expresion PLUS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 39 (expresion -> expresion PLUS expresion .) ]
  ! EQUALS          [ reduce using rule 39 (expresion -> expresion PLUS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 39 (expresion -> expresion PLUS expresion .) ]


state 91

    (49) expresion -> condicion .
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    VARIABLE        reduce using rule 49 (expresion -> condicion .)
    PRINT           reduce using rule 49 (expresion -> condicion .)
    LPAREN          reduce using rule 49 (expresion -> condicion .)
    NUMBER          reduce using rule 49 (expresion -> condicion .)
    FLOAT           reduce using rule 49 (expresion -> condicion .)
    TRUE            reduce using rule 49 (expresion -> condicion .)
    FALSE           reduce using rule 49 (expresion -> condicion .)
    NOT             reduce using rule 49 (expresion -> condicion .)
    LISTOF          reduce using rule 49 (expresion -> condicion .)
    MUTABLELISTOF   reduce using rule 49 (expresion -> condicion .)
    MAPOF           reduce using rule 49 (expresion -> condicion .)
    MUTABLEMAPOF    reduce using rule 49 (expresion -> condicion .)
    SETOF           reduce using rule 49 (expresion -> condicion .)
    MUTABLESETOF    reduce using rule 49 (expresion -> condicion .)
    FOR             reduce using rule 49 (expresion -> condicion .)
    WHILE           reduce using rule 49 (expresion -> condicion .)
    IF              reduce using rule 49 (expresion -> condicion .)
    VAL             reduce using rule 49 (expresion -> condicion .)
    VAR             reduce using rule 49 (expresion -> condicion .)
    FUN             reduce using rule 49 (expresion -> condicion .)
    RETURN          reduce using rule 49 (expresion -> condicion .)
    CLASS           reduce using rule 49 (expresion -> condicion .)
    OPEN            reduce using rule 49 (expresion -> condicion .)
    $end            reduce using rule 49 (expresion -> condicion .)
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    RPAREN          reduce using rule 49 (expresion -> condicion .)
    LLLAVE          reduce using rule 49 (expresion -> condicion .)
    RLLAVE          reduce using rule 49 (expresion -> condicion .)
    AND             shift and go to state 51
    OR              shift and go to state 52

  ! AND             [ reduce using rule 49 (expresion -> condicion .) ]
  ! OR              [ reduce using rule 49 (expresion -> condicion .) ]


state 92

    (40) expresion -> expresion MINUS expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    VARIABLE        reduce using rule 40 (expresion -> expresion MINUS expresion .)
    PRINT           reduce using rule 40 (expresion -> expresion MINUS expresion .)
    LPAREN          reduce using rule 40 (expresion -> expresion MINUS expresion .)
    NUMBER          reduce using rule 40 (expresion -> expresion MINUS expresion .)
    FLOAT           reduce using rule 40 (expresion -> expresion MINUS expresion .)
    TRUE            reduce using rule 40 (expresion -> expresion MINUS expresion .)
    FALSE           reduce using rule 40 (expresion -> expresion MINUS expresion .)
    NOT             reduce using rule 40 (expresion -> expresion MINUS expresion .)
    LISTOF          reduce using rule 40 (expresion -> expresion MINUS expresion .)
    MUTABLELISTOF   reduce using rule 40 (expresion -> expresion MINUS expresion .)
    MAPOF           reduce using rule 40 (expresion -> expresion MINUS expresion .)
    MUTABLEMAPOF    reduce using rule 40 (expresion -> expresion MINUS expresion .)
    SETOF           reduce using rule 40 (expresion -> expresion MINUS expresion .)
    MUTABLESETOF    reduce using rule 40 (expresion -> expresion MINUS expresion .)
    FOR             reduce using rule 40 (expresion -> expresion MINUS expresion .)
    WHILE           reduce using rule 40 (expresion -> expresion MINUS expresion .)
    IF              reduce using rule 40 (expresion -> expresion MINUS expresion .)
    VAL             reduce using rule 40 (expresion -> expresion MINUS expresion .)
    VAR             reduce using rule 40 (expresion -> expresion MINUS expresion .)
    FUN             reduce using rule 40 (expresion -> expresion MINUS expresion .)
    RETURN          reduce using rule 40 (expresion -> expresion MINUS expresion .)
    CLASS           reduce using rule 40 (expresion -> expresion MINUS expresion .)
    OPEN            reduce using rule 40 (expresion -> expresion MINUS expresion .)
    $end            reduce using rule 40 (expresion -> expresion MINUS expresion .)
    RPAREN          reduce using rule 40 (expresion -> expresion MINUS expresion .)
    AND             reduce using rule 40 (expresion -> expresion MINUS expresion .)
    OR              reduce using rule 40 (expresion -> expresion MINUS expresion .)
    LLLAVE          reduce using rule 40 (expresion -> expresion MINUS expresion .)
    RLLAVE          reduce using rule 40 (expresion -> expresion MINUS expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50

  ! PLUS            [ reduce using rule 40 (expresion -> expresion MINUS expresion .) ]
  ! MINUS           [ reduce using rule 40 (expresion -> expresion MINUS expresion .) ]
  ! TIMES           [ reduce using rule 40 (expresion -> expresion MINUS expresion .) ]
  ! DIVIDE          [ reduce using rule 40 (expresion -> expresion MINUS expresion .) ]
  ! MOD             [ reduce using rule 40 (expresion -> expresion MINUS expresion .) ]
  ! GREATER         [ reduce using rule 40 (expresion -> expresion MINUS expresion .) ]
  ! LESS            [ reduce using rule 40 (expresion -> expresion MINUS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 40 (expresion -> expresion MINUS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 40 (expresion -> expresion MINUS expresion .) ]
  ! EQUALS          [ reduce using rule 40 (expresion -> expresion MINUS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 40 (expresion -> expresion MINUS expresion .) ]


state 93

    (41) expresion -> expresion TIMES expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    VARIABLE        reduce using rule 41 (expresion -> expresion TIMES expresion .)
    PRINT           reduce using rule 41 (expresion -> expresion TIMES expresion .)
    LPAREN          reduce using rule 41 (expresion -> expresion TIMES expresion .)
    NUMBER          reduce using rule 41 (expresion -> expresion TIMES expresion .)
    FLOAT           reduce using rule 41 (expresion -> expresion TIMES expresion .)
    TRUE            reduce using rule 41 (expresion -> expresion TIMES expresion .)
    FALSE           reduce using rule 41 (expresion -> expresion TIMES expresion .)
    NOT             reduce using rule 41 (expresion -> expresion TIMES expresion .)
    LISTOF          reduce using rule 41 (expresion -> expresion TIMES expresion .)
    MUTABLELISTOF   reduce using rule 41 (expresion -> expresion TIMES expresion .)
    MAPOF           reduce using rule 41 (expresion -> expresion TIMES expresion .)
    MUTABLEMAPOF    reduce using rule 41 (expresion -> expresion TIMES expresion .)
    SETOF           reduce using rule 41 (expresion -> expresion TIMES expresion .)
    MUTABLESETOF    reduce using rule 41 (expresion -> expresion TIMES expresion .)
    FOR             reduce using rule 41 (expresion -> expresion TIMES expresion .)
    WHILE           reduce using rule 41 (expresion -> expresion TIMES expresion .)
    IF              reduce using rule 41 (expresion -> expresion TIMES expresion .)
    VAL             reduce using rule 41 (expresion -> expresion TIMES expresion .)
    VAR             reduce using rule 41 (expresion -> expresion TIMES expresion .)
    FUN             reduce using rule 41 (expresion -> expresion TIMES expresion .)
    RETURN          reduce using rule 41 (expresion -> expresion TIMES expresion .)
    CLASS           reduce using rule 41 (expresion -> expresion TIMES expresion .)
    OPEN            reduce using rule 41 (expresion -> expresion TIMES expresion .)
    $end            reduce using rule 41 (expresion -> expresion TIMES expresion .)
    RPAREN          reduce using rule 41 (expresion -> expresion TIMES expresion .)
    AND             reduce using rule 41 (expresion -> expresion TIMES expresion .)
    OR              reduce using rule 41 (expresion -> expresion TIMES expresion .)
    LLLAVE          reduce using rule 41 (expresion -> expresion TIMES expresion .)
    RLLAVE          reduce using rule 41 (expresion -> expresion TIMES expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50

  ! PLUS            [ reduce using rule 41 (expresion -> expresion TIMES expresion .) ]
  ! MINUS           [ reduce using rule 41 (expresion -> expresion TIMES expresion .) ]
  ! TIMES           [ reduce using rule 41 (expresion -> expresion TIMES expresion .) ]
  ! DIVIDE          [ reduce using rule 41 (expresion -> expresion TIMES expresion .) ]
  ! MOD             [ reduce using rule 41 (expresion -> expresion TIMES expresion .) ]
  ! GREATER         [ reduce using rule 41 (expresion -> expresion TIMES expresion .) ]
  ! LESS            [ reduce using rule 41 (expresion -> expresion TIMES expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 41 (expresion -> expresion TIMES expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 41 (expresion -> expresion TIMES expresion .) ]
  ! EQUALS          [ reduce using rule 41 (expresion -> expresion TIMES expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 41 (expresion -> expresion TIMES expresion .) ]


state 94

    (42) expresion -> expresion DIVIDE expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    VARIABLE        reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    PRINT           reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    LPAREN          reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    NUMBER          reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    FLOAT           reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    TRUE            reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    FALSE           reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    NOT             reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    LISTOF          reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    MUTABLELISTOF   reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    MAPOF           reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    MUTABLEMAPOF    reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    SETOF           reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    MUTABLESETOF    reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    FOR             reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    WHILE           reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    IF              reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    VAL             reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    VAR             reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    FUN             reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    RETURN          reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    CLASS           reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    OPEN            reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    $end            reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    RPAREN          reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    AND             reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    OR              reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    LLLAVE          reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    RLLAVE          reduce using rule 42 (expresion -> expresion DIVIDE expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50

  ! PLUS            [ reduce using rule 42 (expresion -> expresion DIVIDE expresion .) ]
  ! MINUS           [ reduce using rule 42 (expresion -> expresion DIVIDE expresion .) ]
  ! TIMES           [ reduce using rule 42 (expresion -> expresion DIVIDE expresion .) ]
  ! DIVIDE          [ reduce using rule 42 (expresion -> expresion DIVIDE expresion .) ]
  ! MOD             [ reduce using rule 42 (expresion -> expresion DIVIDE expresion .) ]
  ! GREATER         [ reduce using rule 42 (expresion -> expresion DIVIDE expresion .) ]
  ! LESS            [ reduce using rule 42 (expresion -> expresion DIVIDE expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 42 (expresion -> expresion DIVIDE expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 42 (expresion -> expresion DIVIDE expresion .) ]
  ! EQUALS          [ reduce using rule 42 (expresion -> expresion DIVIDE expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 42 (expresion -> expresion DIVIDE expresion .) ]


state 95

    (43) expresion -> expresion MOD expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    VARIABLE        reduce using rule 43 (expresion -> expresion MOD expresion .)
    PRINT           reduce using rule 43 (expresion -> expresion MOD expresion .)
    LPAREN          reduce using rule 43 (expresion -> expresion MOD expresion .)
    NUMBER          reduce using rule 43 (expresion -> expresion MOD expresion .)
    FLOAT           reduce using rule 43 (expresion -> expresion MOD expresion .)
    TRUE            reduce using rule 43 (expresion -> expresion MOD expresion .)
    FALSE           reduce using rule 43 (expresion -> expresion MOD expresion .)
    NOT             reduce using rule 43 (expresion -> expresion MOD expresion .)
    LISTOF          reduce using rule 43 (expresion -> expresion MOD expresion .)
    MUTABLELISTOF   reduce using rule 43 (expresion -> expresion MOD expresion .)
    MAPOF           reduce using rule 43 (expresion -> expresion MOD expresion .)
    MUTABLEMAPOF    reduce using rule 43 (expresion -> expresion MOD expresion .)
    SETOF           reduce using rule 43 (expresion -> expresion MOD expresion .)
    MUTABLESETOF    reduce using rule 43 (expresion -> expresion MOD expresion .)
    FOR             reduce using rule 43 (expresion -> expresion MOD expresion .)
    WHILE           reduce using rule 43 (expresion -> expresion MOD expresion .)
    IF              reduce using rule 43 (expresion -> expresion MOD expresion .)
    VAL             reduce using rule 43 (expresion -> expresion MOD expresion .)
    VAR             reduce using rule 43 (expresion -> expresion MOD expresion .)
    FUN             reduce using rule 43 (expresion -> expresion MOD expresion .)
    RETURN          reduce using rule 43 (expresion -> expresion MOD expresion .)
    CLASS           reduce using rule 43 (expresion -> expresion MOD expresion .)
    OPEN            reduce using rule 43 (expresion -> expresion MOD expresion .)
    $end            reduce using rule 43 (expresion -> expresion MOD expresion .)
    RPAREN          reduce using rule 43 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 43 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 43 (expresion -> expresion MOD expresion .)
    LLLAVE          reduce using rule 43 (expresion -> expresion MOD expresion .)
    RLLAVE          reduce using rule 43 (expresion -> expresion MOD expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50

  ! PLUS            [ reduce using rule 43 (expresion -> expresion MOD expresion .) ]
  ! MINUS           [ reduce using rule 43 (expresion -> expresion MOD expresion .) ]
  ! TIMES           [ reduce using rule 43 (expresion -> expresion MOD expresion .) ]
  ! DIVIDE          [ reduce using rule 43 (expresion -> expresion MOD expresion .) ]
  ! MOD             [ reduce using rule 43 (expresion -> expresion MOD expresion .) ]
  ! GREATER         [ reduce using rule 43 (expresion -> expresion MOD expresion .) ]
  ! LESS            [ reduce using rule 43 (expresion -> expresion MOD expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 43 (expresion -> expresion MOD expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 43 (expresion -> expresion MOD expresion .) ]
  ! EQUALS          [ reduce using rule 43 (expresion -> expresion MOD expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 43 (expresion -> expresion MOD expresion .) ]


state 96

    (51) condicion -> expresion GREATER expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 51 (condicion -> expresion GREATER expresion .)
    OR              reduce using rule 51 (condicion -> expresion GREATER expresion .)
    VARIABLE        reduce using rule 51 (condicion -> expresion GREATER expresion .)
    PRINT           reduce using rule 51 (condicion -> expresion GREATER expresion .)
    LPAREN          reduce using rule 51 (condicion -> expresion GREATER expresion .)
    NUMBER          reduce using rule 51 (condicion -> expresion GREATER expresion .)
    FLOAT           reduce using rule 51 (condicion -> expresion GREATER expresion .)
    TRUE            reduce using rule 51 (condicion -> expresion GREATER expresion .)
    FALSE           reduce using rule 51 (condicion -> expresion GREATER expresion .)
    NOT             reduce using rule 51 (condicion -> expresion GREATER expresion .)
    LISTOF          reduce using rule 51 (condicion -> expresion GREATER expresion .)
    MUTABLELISTOF   reduce using rule 51 (condicion -> expresion GREATER expresion .)
    MAPOF           reduce using rule 51 (condicion -> expresion GREATER expresion .)
    MUTABLEMAPOF    reduce using rule 51 (condicion -> expresion GREATER expresion .)
    SETOF           reduce using rule 51 (condicion -> expresion GREATER expresion .)
    MUTABLESETOF    reduce using rule 51 (condicion -> expresion GREATER expresion .)
    FOR             reduce using rule 51 (condicion -> expresion GREATER expresion .)
    WHILE           reduce using rule 51 (condicion -> expresion GREATER expresion .)
    IF              reduce using rule 51 (condicion -> expresion GREATER expresion .)
    VAL             reduce using rule 51 (condicion -> expresion GREATER expresion .)
    VAR             reduce using rule 51 (condicion -> expresion GREATER expresion .)
    FUN             reduce using rule 51 (condicion -> expresion GREATER expresion .)
    RETURN          reduce using rule 51 (condicion -> expresion GREATER expresion .)
    CLASS           reduce using rule 51 (condicion -> expresion GREATER expresion .)
    OPEN            reduce using rule 51 (condicion -> expresion GREATER expresion .)
    $end            reduce using rule 51 (condicion -> expresion GREATER expresion .)
    RPAREN          reduce using rule 51 (condicion -> expresion GREATER expresion .)
    LLLAVE          reduce using rule 51 (condicion -> expresion GREATER expresion .)
    RLLAVE          reduce using rule 51 (condicion -> expresion GREATER expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50

  ! PLUS            [ reduce using rule 51 (condicion -> expresion GREATER expresion .) ]
  ! MINUS           [ reduce using rule 51 (condicion -> expresion GREATER expresion .) ]
  ! TIMES           [ reduce using rule 51 (condicion -> expresion GREATER expresion .) ]
  ! DIVIDE          [ reduce using rule 51 (condicion -> expresion GREATER expresion .) ]
  ! MOD             [ reduce using rule 51 (condicion -> expresion GREATER expresion .) ]
  ! GREATER         [ reduce using rule 51 (condicion -> expresion GREATER expresion .) ]
  ! LESS            [ reduce using rule 51 (condicion -> expresion GREATER expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 51 (condicion -> expresion GREATER expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 51 (condicion -> expresion GREATER expresion .) ]
  ! EQUALS          [ reduce using rule 51 (condicion -> expresion GREATER expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 51 (condicion -> expresion GREATER expresion .) ]


state 97

    (52) condicion -> expresion LESS expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 52 (condicion -> expresion LESS expresion .)
    OR              reduce using rule 52 (condicion -> expresion LESS expresion .)
    VARIABLE        reduce using rule 52 (condicion -> expresion LESS expresion .)
    PRINT           reduce using rule 52 (condicion -> expresion LESS expresion .)
    LPAREN          reduce using rule 52 (condicion -> expresion LESS expresion .)
    NUMBER          reduce using rule 52 (condicion -> expresion LESS expresion .)
    FLOAT           reduce using rule 52 (condicion -> expresion LESS expresion .)
    TRUE            reduce using rule 52 (condicion -> expresion LESS expresion .)
    FALSE           reduce using rule 52 (condicion -> expresion LESS expresion .)
    NOT             reduce using rule 52 (condicion -> expresion LESS expresion .)
    LISTOF          reduce using rule 52 (condicion -> expresion LESS expresion .)
    MUTABLELISTOF   reduce using rule 52 (condicion -> expresion LESS expresion .)
    MAPOF           reduce using rule 52 (condicion -> expresion LESS expresion .)
    MUTABLEMAPOF    reduce using rule 52 (condicion -> expresion LESS expresion .)
    SETOF           reduce using rule 52 (condicion -> expresion LESS expresion .)
    MUTABLESETOF    reduce using rule 52 (condicion -> expresion LESS expresion .)
    FOR             reduce using rule 52 (condicion -> expresion LESS expresion .)
    WHILE           reduce using rule 52 (condicion -> expresion LESS expresion .)
    IF              reduce using rule 52 (condicion -> expresion LESS expresion .)
    VAL             reduce using rule 52 (condicion -> expresion LESS expresion .)
    VAR             reduce using rule 52 (condicion -> expresion LESS expresion .)
    FUN             reduce using rule 52 (condicion -> expresion LESS expresion .)
    RETURN          reduce using rule 52 (condicion -> expresion LESS expresion .)
    CLASS           reduce using rule 52 (condicion -> expresion LESS expresion .)
    OPEN            reduce using rule 52 (condicion -> expresion LESS expresion .)
    $end            reduce using rule 52 (condicion -> expresion LESS expresion .)
    RPAREN          reduce using rule 52 (condicion -> expresion LESS expresion .)
    LLLAVE          reduce using rule 52 (condicion -> expresion LESS expresion .)
    RLLAVE          reduce using rule 52 (condicion -> expresion LESS expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50

  ! PLUS            [ reduce using rule 52 (condicion -> expresion LESS expresion .) ]
  ! MINUS           [ reduce using rule 52 (condicion -> expresion LESS expresion .) ]
  ! TIMES           [ reduce using rule 52 (condicion -> expresion LESS expresion .) ]
  ! DIVIDE          [ reduce using rule 52 (condicion -> expresion LESS expresion .) ]
  ! MOD             [ reduce using rule 52 (condicion -> expresion LESS expresion .) ]
  ! GREATER         [ reduce using rule 52 (condicion -> expresion LESS expresion .) ]
  ! LESS            [ reduce using rule 52 (condicion -> expresion LESS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 52 (condicion -> expresion LESS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 52 (condicion -> expresion LESS expresion .) ]
  ! EQUALS          [ reduce using rule 52 (condicion -> expresion LESS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 52 (condicion -> expresion LESS expresion .) ]


state 98

    (53) condicion -> expresion GREATER_EQUALS expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    OR              reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    VARIABLE        reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    PRINT           reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    LPAREN          reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    NUMBER          reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    FLOAT           reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    TRUE            reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    FALSE           reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    NOT             reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    LISTOF          reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    MUTABLELISTOF   reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    MAPOF           reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    MUTABLEMAPOF    reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    SETOF           reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    MUTABLESETOF    reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    FOR             reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    WHILE           reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    IF              reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    VAL             reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    VAR             reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    FUN             reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    RETURN          reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    CLASS           reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    OPEN            reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    $end            reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    RPAREN          reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    LLLAVE          reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    RLLAVE          reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50

  ! PLUS            [ reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! MINUS           [ reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! TIMES           [ reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! DIVIDE          [ reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! MOD             [ reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! GREATER         [ reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! LESS            [ reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! EQUALS          [ reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 53 (condicion -> expresion GREATER_EQUALS expresion .) ]


state 99

    (54) condicion -> expresion LESS_EQUALS expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    OR              reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    VARIABLE        reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    PRINT           reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    LPAREN          reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    NUMBER          reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    FLOAT           reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    TRUE            reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    FALSE           reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    NOT             reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    LISTOF          reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    MUTABLELISTOF   reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    MAPOF           reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    MUTABLEMAPOF    reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    SETOF           reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    MUTABLESETOF    reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    FOR             reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    WHILE           reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    IF              reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    VAL             reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    VAR             reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    FUN             reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    RETURN          reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    CLASS           reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    OPEN            reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    $end            reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    RPAREN          reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    LLLAVE          reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    RLLAVE          reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50

  ! PLUS            [ reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! MINUS           [ reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! TIMES           [ reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! DIVIDE          [ reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! MOD             [ reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! GREATER         [ reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! LESS            [ reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! EQUALS          [ reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 54 (condicion -> expresion LESS_EQUALS expresion .) ]


state 100

    (55) condicion -> expresion EQUALS expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    OR              reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    VARIABLE        reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    PRINT           reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    LPAREN          reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    NUMBER          reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    FLOAT           reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    TRUE            reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    FALSE           reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    NOT             reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    LISTOF          reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    MUTABLELISTOF   reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    MAPOF           reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    MUTABLEMAPOF    reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    SETOF           reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    MUTABLESETOF    reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    FOR             reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    WHILE           reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    IF              reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    VAL             reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    VAR             reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    FUN             reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    RETURN          reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    CLASS           reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    OPEN            reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    $end            reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    RPAREN          reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    LLLAVE          reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    RLLAVE          reduce using rule 55 (condicion -> expresion EQUALS expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50

  ! PLUS            [ reduce using rule 55 (condicion -> expresion EQUALS expresion .) ]
  ! MINUS           [ reduce using rule 55 (condicion -> expresion EQUALS expresion .) ]
  ! TIMES           [ reduce using rule 55 (condicion -> expresion EQUALS expresion .) ]
  ! DIVIDE          [ reduce using rule 55 (condicion -> expresion EQUALS expresion .) ]
  ! MOD             [ reduce using rule 55 (condicion -> expresion EQUALS expresion .) ]
  ! GREATER         [ reduce using rule 55 (condicion -> expresion EQUALS expresion .) ]
  ! LESS            [ reduce using rule 55 (condicion -> expresion EQUALS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 55 (condicion -> expresion EQUALS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 55 (condicion -> expresion EQUALS expresion .) ]
  ! EQUALS          [ reduce using rule 55 (condicion -> expresion EQUALS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 55 (condicion -> expresion EQUALS expresion .) ]


state 101

    (56) condicion -> expresion NOT_EQUALS expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
    AND             reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    OR              reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    VARIABLE        reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    PRINT           reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    LPAREN          reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    NUMBER          reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    FLOAT           reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    TRUE            reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    FALSE           reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    NOT             reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    LISTOF          reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    MUTABLELISTOF   reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    MAPOF           reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    MUTABLEMAPOF    reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    SETOF           reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    MUTABLESETOF    reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    FOR             reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    WHILE           reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    IF              reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    VAL             reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    VAR             reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    FUN             reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    RETURN          reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    CLASS           reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    OPEN            reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    $end            reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    RPAREN          reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    LLLAVE          reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    RLLAVE          reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50

  ! PLUS            [ reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! MINUS           [ reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! TIMES           [ reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! DIVIDE          [ reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! MOD             [ reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! GREATER         [ reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! LESS            [ reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! GREATER_EQUALS  [ reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! LESS_EQUALS     [ reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! EQUALS          [ reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .) ]
  ! NOT_EQUALS      [ reduce using rule 56 (condicion -> expresion NOT_EQUALS expresion .) ]


state 102

    (57) condicion -> condicion AND condicion .
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion
    (49) expresion -> condicion .

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! reduce/reduce conflict for GREATER resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for PLUS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for TIMES resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MOD resolved using rule 49 (expresion -> condicion .)
    VARIABLE        reduce using rule 57 (condicion -> condicion AND condicion .)
    PRINT           reduce using rule 57 (condicion -> condicion AND condicion .)
    LPAREN          reduce using rule 57 (condicion -> condicion AND condicion .)
    NUMBER          reduce using rule 57 (condicion -> condicion AND condicion .)
    FLOAT           reduce using rule 57 (condicion -> condicion AND condicion .)
    TRUE            reduce using rule 57 (condicion -> condicion AND condicion .)
    FALSE           reduce using rule 57 (condicion -> condicion AND condicion .)
    NOT             reduce using rule 57 (condicion -> condicion AND condicion .)
    LISTOF          reduce using rule 57 (condicion -> condicion AND condicion .)
    MUTABLELISTOF   reduce using rule 57 (condicion -> condicion AND condicion .)
    MAPOF           reduce using rule 57 (condicion -> condicion AND condicion .)
    MUTABLEMAPOF    reduce using rule 57 (condicion -> condicion AND condicion .)
    SETOF           reduce using rule 57 (condicion -> condicion AND condicion .)
    MUTABLESETOF    reduce using rule 57 (condicion -> condicion AND condicion .)
    FOR             reduce using rule 57 (condicion -> condicion AND condicion .)
    WHILE           reduce using rule 57 (condicion -> condicion AND condicion .)
    IF              reduce using rule 57 (condicion -> condicion AND condicion .)
    VAL             reduce using rule 57 (condicion -> condicion AND condicion .)
    VAR             reduce using rule 57 (condicion -> condicion AND condicion .)
    FUN             reduce using rule 57 (condicion -> condicion AND condicion .)
    RETURN          reduce using rule 57 (condicion -> condicion AND condicion .)
    CLASS           reduce using rule 57 (condicion -> condicion AND condicion .)
    OPEN            reduce using rule 57 (condicion -> condicion AND condicion .)
    $end            reduce using rule 57 (condicion -> condicion AND condicion .)
    RPAREN          reduce using rule 57 (condicion -> condicion AND condicion .)
    LLLAVE          reduce using rule 57 (condicion -> condicion AND condicion .)
    RLLAVE          reduce using rule 57 (condicion -> condicion AND condicion .)
    AND             shift and go to state 51
    OR              shift and go to state 52
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)

  ! AND             [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! OR              [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! PLUS            [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! MINUS           [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! TIMES           [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! DIVIDE          [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! MOD             [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! GREATER         [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! LESS            [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! GREATER_EQUALS  [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! LESS_EQUALS     [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! EQUALS          [ reduce using rule 57 (condicion -> condicion AND condicion .) ]
  ! NOT_EQUALS      [ reduce using rule 57 (condicion -> condicion AND condicion .) ]


state 103

    (58) condicion -> condicion OR condicion .
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion
    (49) expresion -> condicion .

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! reduce/reduce conflict for GREATER resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for GREATER_EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for LESS_EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for PLUS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for TIMES resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 49 (expresion -> condicion .)
  ! reduce/reduce conflict for MOD resolved using rule 49 (expresion -> condicion .)
    VARIABLE        reduce using rule 58 (condicion -> condicion OR condicion .)
    PRINT           reduce using rule 58 (condicion -> condicion OR condicion .)
    LPAREN          reduce using rule 58 (condicion -> condicion OR condicion .)
    NUMBER          reduce using rule 58 (condicion -> condicion OR condicion .)
    FLOAT           reduce using rule 58 (condicion -> condicion OR condicion .)
    TRUE            reduce using rule 58 (condicion -> condicion OR condicion .)
    FALSE           reduce using rule 58 (condicion -> condicion OR condicion .)
    NOT             reduce using rule 58 (condicion -> condicion OR condicion .)
    LISTOF          reduce using rule 58 (condicion -> condicion OR condicion .)
    MUTABLELISTOF   reduce using rule 58 (condicion -> condicion OR condicion .)
    MAPOF           reduce using rule 58 (condicion -> condicion OR condicion .)
    MUTABLEMAPOF    reduce using rule 58 (condicion -> condicion OR condicion .)
    SETOF           reduce using rule 58 (condicion -> condicion OR condicion .)
    MUTABLESETOF    reduce using rule 58 (condicion -> condicion OR condicion .)
    FOR             reduce using rule 58 (condicion -> condicion OR condicion .)
    WHILE           reduce using rule 58 (condicion -> condicion OR condicion .)
    IF              reduce using rule 58 (condicion -> condicion OR condicion .)
    VAL             reduce using rule 58 (condicion -> condicion OR condicion .)
    VAR             reduce using rule 58 (condicion -> condicion OR condicion .)
    FUN             reduce using rule 58 (condicion -> condicion OR condicion .)
    RETURN          reduce using rule 58 (condicion -> condicion OR condicion .)
    CLASS           reduce using rule 58 (condicion -> condicion OR condicion .)
    OPEN            reduce using rule 58 (condicion -> condicion OR condicion .)
    $end            reduce using rule 58 (condicion -> condicion OR condicion .)
    RPAREN          reduce using rule 58 (condicion -> condicion OR condicion .)
    LLLAVE          reduce using rule 58 (condicion -> condicion OR condicion .)
    RLLAVE          reduce using rule 58 (condicion -> condicion OR condicion .)
    AND             shift and go to state 51
    OR              shift and go to state 52
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)

  ! AND             [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! OR              [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! PLUS            [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! MINUS           [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! TIMES           [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! DIVIDE          [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! MOD             [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! GREATER         [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! LESS            [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! GREATER_EQUALS  [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! LESS_EQUALS     [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! EQUALS          [ reduce using rule 58 (condicion -> condicion OR condicion .) ]
  ! NOT_EQUALS      [ reduce using rule 58 (condicion -> condicion OR condicion .) ]


state 104

    (23) asignacion -> VARIABLE ASIGN VARIABLE .
    (50) expresion -> VARIABLE .
    (105) creacionObjeto -> VARIABLE . LPAREN RPAREN
    (106) creacionObjeto -> VARIABLE . LPAREN repiteValores RPAREN

  ! reduce/reduce conflict for VARIABLE resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for LISTOF resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for MAPOF resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for SETOF resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for FOR resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for VAL resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for FUN resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for CLASS resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for OPEN resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
  ! shift/reduce conflict for LPAREN resolved as shift
    VARIABLE        reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    PRINT           reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    NUMBER          reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    FLOAT           reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    TRUE            reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    FALSE           reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    NOT             reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    LISTOF          reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    MUTABLELISTOF   reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    MAPOF           reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    MUTABLEMAPOF    reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    SETOF           reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    MUTABLESETOF    reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    FOR             reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    WHILE           reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    IF              reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    VAL             reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    VAR             reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    FUN             reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    RETURN          reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    CLASS           reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    OPEN            reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    $end            reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    RLLAVE          reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .)
    PLUS            reduce using rule 50 (expresion -> VARIABLE .)
    MINUS           reduce using rule 50 (expresion -> VARIABLE .)
    TIMES           reduce using rule 50 (expresion -> VARIABLE .)
    DIVIDE          reduce using rule 50 (expresion -> VARIABLE .)
    MOD             reduce using rule 50 (expresion -> VARIABLE .)
    GREATER         reduce using rule 50 (expresion -> VARIABLE .)
    LESS            reduce using rule 50 (expresion -> VARIABLE .)
    GREATER_EQUALS  reduce using rule 50 (expresion -> VARIABLE .)
    LESS_EQUALS     reduce using rule 50 (expresion -> VARIABLE .)
    EQUALS          reduce using rule 50 (expresion -> VARIABLE .)
    NOT_EQUALS      reduce using rule 50 (expresion -> VARIABLE .)
    LPAREN          shift and go to state 142

  ! LPAREN          [ reduce using rule 23 (asignacion -> VARIABLE ASIGN VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! LPAREN          [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! NUMBER          [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! FLOAT           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! TRUE            [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! FALSE           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! NOT             [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! LISTOF          [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! MUTABLELISTOF   [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! MAPOF           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! MUTABLEMAPOF    [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! SETOF           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! MUTABLESETOF    [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! FOR             [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! IF              [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! VAL             [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! VAR             [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! FUN             [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! RETURN          [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! CLASS           [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! OPEN            [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! $end            [ reduce using rule 50 (expresion -> VARIABLE .) ]
  ! RLLAVE          [ reduce using rule 50 (expresion -> VARIABLE .) ]


state 105

    (24) asignacion -> VARIABLE ASIGN expresion .
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion

    VARIABLE        reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    PRINT           reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    LPAREN          reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    NUMBER          reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    FLOAT           reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    TRUE            reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    FALSE           reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    NOT             reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    LISTOF          reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    MUTABLELISTOF   reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    MAPOF           reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    MUTABLEMAPOF    reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    SETOF           reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    MUTABLESETOF    reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    FOR             reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    WHILE           reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    IF              reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    VAL             reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    VAR             reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    FUN             reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    RETURN          reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    CLASS           reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    OPEN            reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    $end            reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    RLLAVE          reduce using rule 24 (asignacion -> VARIABLE ASIGN expresion .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50


state 106

    (25) asignacion -> VARIABLE ASIGN condicion .
    (49) expresion -> condicion .
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion

  ! reduce/reduce conflict for VARIABLE resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for PRINT resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for LPAREN resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for NUMBER resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for TRUE resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for FALSE resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for NOT resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for LISTOF resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for MUTABLELISTOF resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for MAPOF resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for MUTABLEMAPOF resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for SETOF resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for MUTABLESETOF resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for FOR resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for WHILE resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for IF resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for VAL resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for VAR resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for FUN resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for RETURN resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for CLASS resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for OPEN resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for $end resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    VARIABLE        reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    PRINT           reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    LPAREN          reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    NUMBER          reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    FLOAT           reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    TRUE            reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    FALSE           reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    NOT             reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    LISTOF          reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    MUTABLELISTOF   reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    MAPOF           reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    MUTABLEMAPOF    reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    SETOF           reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    MUTABLESETOF    reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    FOR             reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    WHILE           reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    IF              reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    VAL             reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    VAR             reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    FUN             reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    RETURN          reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    CLASS           reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    OPEN            reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    $end            reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    RLLAVE          reduce using rule 25 (asignacion -> VARIABLE ASIGN condicion .)
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    AND             shift and go to state 51
    OR              shift and go to state 52

  ! VARIABLE        [ reduce using rule 49 (expresion -> condicion .) ]
  ! PRINT           [ reduce using rule 49 (expresion -> condicion .) ]
  ! LPAREN          [ reduce using rule 49 (expresion -> condicion .) ]
  ! NUMBER          [ reduce using rule 49 (expresion -> condicion .) ]
  ! FLOAT           [ reduce using rule 49 (expresion -> condicion .) ]
  ! TRUE            [ reduce using rule 49 (expresion -> condicion .) ]
  ! FALSE           [ reduce using rule 49 (expresion -> condicion .) ]
  ! NOT             [ reduce using rule 49 (expresion -> condicion .) ]
  ! LISTOF          [ reduce using rule 49 (expresion -> condicion .) ]
  ! MUTABLELISTOF   [ reduce using rule 49 (expresion -> condicion .) ]
  ! MAPOF           [ reduce using rule 49 (expresion -> condicion .) ]
  ! MUTABLEMAPOF    [ reduce using rule 49 (expresion -> condicion .) ]
  ! SETOF           [ reduce using rule 49 (expresion -> condicion .) ]
  ! MUTABLESETOF    [ reduce using rule 49 (expresion -> condicion .) ]
  ! FOR             [ reduce using rule 49 (expresion -> condicion .) ]
  ! WHILE           [ reduce using rule 49 (expresion -> condicion .) ]
  ! IF              [ reduce using rule 49 (expresion -> condicion .) ]
  ! VAL             [ reduce using rule 49 (expresion -> condicion .) ]
  ! VAR             [ reduce using rule 49 (expresion -> condicion .) ]
  ! FUN             [ reduce using rule 49 (expresion -> condicion .) ]
  ! RETURN          [ reduce using rule 49 (expresion -> condicion .) ]
  ! CLASS           [ reduce using rule 49 (expresion -> condicion .) ]
  ! OPEN            [ reduce using rule 49 (expresion -> condicion .) ]
  ! $end            [ reduce using rule 49 (expresion -> condicion .) ]
  ! RLLAVE          [ reduce using rule 49 (expresion -> condicion .) ]


state 107

    (26) asignacion -> VARIABLE ASIGN estructura .

    VARIABLE        reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    PRINT           reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    LPAREN          reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    NUMBER          reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    FLOAT           reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    TRUE            reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    FALSE           reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    NOT             reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    LISTOF          reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    MUTABLELISTOF   reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    MAPOF           reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    MUTABLEMAPOF    reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    SETOF           reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    MUTABLESETOF    reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    FOR             reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    WHILE           reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    IF              reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    VAL             reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    VAR             reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    FUN             reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    RETURN          reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    CLASS           reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    OPEN            reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    $end            reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)
    RLLAVE          reduce using rule 26 (asignacion -> VARIABLE ASIGN estructura .)


state 108

    (27) asignacion -> VARIABLE ASIGN creacionObjeto .

    VARIABLE        reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    PRINT           reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    LPAREN          reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    NUMBER          reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    FLOAT           reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    TRUE            reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    FALSE           reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    NOT             reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    LISTOF          reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    MUTABLELISTOF   reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    MAPOF           reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    MUTABLEMAPOF    reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    SETOF           reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    MUTABLESETOF    reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    FOR             reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    WHILE           reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    IF              reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    VAL             reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    VAR             reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    FUN             reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    RETURN          reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    CLASS           reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    OPEN            reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    $end            reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)
    RLLAVE          reduce using rule 27 (asignacion -> VARIABLE ASIGN creacionObjeto .)


state 109

    (29) impresion -> PRINT LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 143


state 110

    (28) impresion_vacia -> PRINT LPAREN RPAREN .

    VARIABLE        reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    PRINT           reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    LPAREN          reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    NUMBER          reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    FLOAT           reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    TRUE            reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    FALSE           reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    NOT             reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    LISTOF          reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    MAPOF           reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    SETOF           reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    FOR             reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    WHILE           reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    IF              reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    VAL             reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    VAR             reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    FUN             reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    RETURN          reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    CLASS           reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    OPEN            reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    $end            reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)
    RLLAVE          reduce using rule 28 (impresion_vacia -> PRINT LPAREN RPAREN .)


state 111

    (36) repiteValores -> valor . COMMA repiteValores
    (37) repiteValores -> valor .

    COMMA           shift and go to state 144
    RPAREN          reduce using rule 37 (repiteValores -> valor .)


state 112

    (30) valor -> NUMBER .

    COMMA           reduce using rule 30 (valor -> NUMBER .)
    RPAREN          reduce using rule 30 (valor -> NUMBER .)
    TO_FROM_KV      reduce using rule 30 (valor -> NUMBER .)
    VARIABLE        reduce using rule 30 (valor -> NUMBER .)
    PRINT           reduce using rule 30 (valor -> NUMBER .)
    LPAREN          reduce using rule 30 (valor -> NUMBER .)
    NUMBER          reduce using rule 30 (valor -> NUMBER .)
    FLOAT           reduce using rule 30 (valor -> NUMBER .)
    TRUE            reduce using rule 30 (valor -> NUMBER .)
    FALSE           reduce using rule 30 (valor -> NUMBER .)
    NOT             reduce using rule 30 (valor -> NUMBER .)
    LISTOF          reduce using rule 30 (valor -> NUMBER .)
    MUTABLELISTOF   reduce using rule 30 (valor -> NUMBER .)
    MAPOF           reduce using rule 30 (valor -> NUMBER .)
    MUTABLEMAPOF    reduce using rule 30 (valor -> NUMBER .)
    SETOF           reduce using rule 30 (valor -> NUMBER .)
    MUTABLESETOF    reduce using rule 30 (valor -> NUMBER .)
    FOR             reduce using rule 30 (valor -> NUMBER .)
    WHILE           reduce using rule 30 (valor -> NUMBER .)
    IF              reduce using rule 30 (valor -> NUMBER .)
    VAL             reduce using rule 30 (valor -> NUMBER .)
    VAR             reduce using rule 30 (valor -> NUMBER .)
    FUN             reduce using rule 30 (valor -> NUMBER .)
    RETURN          reduce using rule 30 (valor -> NUMBER .)
    CLASS           reduce using rule 30 (valor -> NUMBER .)
    OPEN            reduce using rule 30 (valor -> NUMBER .)
    $end            reduce using rule 30 (valor -> NUMBER .)
    RLLAVE          reduce using rule 30 (valor -> NUMBER .)
    CONSTRUCTOR     reduce using rule 30 (valor -> NUMBER .)
    RANGE_TO        reduce using rule 30 (valor -> NUMBER .)
    THIS            reduce using rule 30 (valor -> NUMBER .)


state 113

    (31) valor -> FLOAT .

    COMMA           reduce using rule 31 (valor -> FLOAT .)
    RPAREN          reduce using rule 31 (valor -> FLOAT .)
    TO_FROM_KV      reduce using rule 31 (valor -> FLOAT .)
    VARIABLE        reduce using rule 31 (valor -> FLOAT .)
    PRINT           reduce using rule 31 (valor -> FLOAT .)
    LPAREN          reduce using rule 31 (valor -> FLOAT .)
    NUMBER          reduce using rule 31 (valor -> FLOAT .)
    FLOAT           reduce using rule 31 (valor -> FLOAT .)
    TRUE            reduce using rule 31 (valor -> FLOAT .)
    FALSE           reduce using rule 31 (valor -> FLOAT .)
    NOT             reduce using rule 31 (valor -> FLOAT .)
    LISTOF          reduce using rule 31 (valor -> FLOAT .)
    MUTABLELISTOF   reduce using rule 31 (valor -> FLOAT .)
    MAPOF           reduce using rule 31 (valor -> FLOAT .)
    MUTABLEMAPOF    reduce using rule 31 (valor -> FLOAT .)
    SETOF           reduce using rule 31 (valor -> FLOAT .)
    MUTABLESETOF    reduce using rule 31 (valor -> FLOAT .)
    FOR             reduce using rule 31 (valor -> FLOAT .)
    WHILE           reduce using rule 31 (valor -> FLOAT .)
    IF              reduce using rule 31 (valor -> FLOAT .)
    VAL             reduce using rule 31 (valor -> FLOAT .)
    VAR             reduce using rule 31 (valor -> FLOAT .)
    FUN             reduce using rule 31 (valor -> FLOAT .)
    RETURN          reduce using rule 31 (valor -> FLOAT .)
    CLASS           reduce using rule 31 (valor -> FLOAT .)
    OPEN            reduce using rule 31 (valor -> FLOAT .)
    $end            reduce using rule 31 (valor -> FLOAT .)
    RLLAVE          reduce using rule 31 (valor -> FLOAT .)
    CONSTRUCTOR     reduce using rule 31 (valor -> FLOAT .)
    RANGE_TO        reduce using rule 31 (valor -> FLOAT .)
    THIS            reduce using rule 31 (valor -> FLOAT .)


state 114

    (32) valor -> VARIABLE .

    COMMA           reduce using rule 32 (valor -> VARIABLE .)
    RPAREN          reduce using rule 32 (valor -> VARIABLE .)
    TO_FROM_KV      reduce using rule 32 (valor -> VARIABLE .)
    RANGE_TO        reduce using rule 32 (valor -> VARIABLE .)
    THIS            reduce using rule 32 (valor -> VARIABLE .)
    RLLAVE          reduce using rule 32 (valor -> VARIABLE .)


state 115

    (34) valor -> TRUE .

    COMMA           reduce using rule 34 (valor -> TRUE .)
    RPAREN          reduce using rule 34 (valor -> TRUE .)
    TO_FROM_KV      reduce using rule 34 (valor -> TRUE .)
    VARIABLE        reduce using rule 34 (valor -> TRUE .)
    PRINT           reduce using rule 34 (valor -> TRUE .)
    LPAREN          reduce using rule 34 (valor -> TRUE .)
    NUMBER          reduce using rule 34 (valor -> TRUE .)
    FLOAT           reduce using rule 34 (valor -> TRUE .)
    TRUE            reduce using rule 34 (valor -> TRUE .)
    FALSE           reduce using rule 34 (valor -> TRUE .)
    NOT             reduce using rule 34 (valor -> TRUE .)
    LISTOF          reduce using rule 34 (valor -> TRUE .)
    MUTABLELISTOF   reduce using rule 34 (valor -> TRUE .)
    MAPOF           reduce using rule 34 (valor -> TRUE .)
    MUTABLEMAPOF    reduce using rule 34 (valor -> TRUE .)
    SETOF           reduce using rule 34 (valor -> TRUE .)
    MUTABLESETOF    reduce using rule 34 (valor -> TRUE .)
    FOR             reduce using rule 34 (valor -> TRUE .)
    WHILE           reduce using rule 34 (valor -> TRUE .)
    IF              reduce using rule 34 (valor -> TRUE .)
    VAL             reduce using rule 34 (valor -> TRUE .)
    VAR             reduce using rule 34 (valor -> TRUE .)
    FUN             reduce using rule 34 (valor -> TRUE .)
    RETURN          reduce using rule 34 (valor -> TRUE .)
    CLASS           reduce using rule 34 (valor -> TRUE .)
    OPEN            reduce using rule 34 (valor -> TRUE .)
    $end            reduce using rule 34 (valor -> TRUE .)
    RLLAVE          reduce using rule 34 (valor -> TRUE .)
    CONSTRUCTOR     reduce using rule 34 (valor -> TRUE .)
    RANGE_TO        reduce using rule 34 (valor -> TRUE .)
    THIS            reduce using rule 34 (valor -> TRUE .)


state 116

    (35) valor -> FALSE .

    COMMA           reduce using rule 35 (valor -> FALSE .)
    RPAREN          reduce using rule 35 (valor -> FALSE .)
    TO_FROM_KV      reduce using rule 35 (valor -> FALSE .)
    VARIABLE        reduce using rule 35 (valor -> FALSE .)
    PRINT           reduce using rule 35 (valor -> FALSE .)
    LPAREN          reduce using rule 35 (valor -> FALSE .)
    NUMBER          reduce using rule 35 (valor -> FALSE .)
    FLOAT           reduce using rule 35 (valor -> FALSE .)
    TRUE            reduce using rule 35 (valor -> FALSE .)
    FALSE           reduce using rule 35 (valor -> FALSE .)
    NOT             reduce using rule 35 (valor -> FALSE .)
    LISTOF          reduce using rule 35 (valor -> FALSE .)
    MUTABLELISTOF   reduce using rule 35 (valor -> FALSE .)
    MAPOF           reduce using rule 35 (valor -> FALSE .)
    MUTABLEMAPOF    reduce using rule 35 (valor -> FALSE .)
    SETOF           reduce using rule 35 (valor -> FALSE .)
    MUTABLESETOF    reduce using rule 35 (valor -> FALSE .)
    FOR             reduce using rule 35 (valor -> FALSE .)
    WHILE           reduce using rule 35 (valor -> FALSE .)
    IF              reduce using rule 35 (valor -> FALSE .)
    VAL             reduce using rule 35 (valor -> FALSE .)
    VAR             reduce using rule 35 (valor -> FALSE .)
    FUN             reduce using rule 35 (valor -> FALSE .)
    RETURN          reduce using rule 35 (valor -> FALSE .)
    CLASS           reduce using rule 35 (valor -> FALSE .)
    OPEN            reduce using rule 35 (valor -> FALSE .)
    $end            reduce using rule 35 (valor -> FALSE .)
    RLLAVE          reduce using rule 35 (valor -> FALSE .)
    CONSTRUCTOR     reduce using rule 35 (valor -> FALSE .)
    RANGE_TO        reduce using rule 35 (valor -> FALSE .)
    THIS            reduce using rule 35 (valor -> FALSE .)


state 117

    (44) expresion -> LPAREN expresion RPAREN .

    PLUS            reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    MOD             reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    GREATER_EQUALS  reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    LESS_EQUALS     reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    EQUALS          reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    NOT_EQUALS      reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    VARIABLE        reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    NUMBER          reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    FLOAT           reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    TRUE            reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    FALSE           reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    NOT             reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    LISTOF          reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    MUTABLELISTOF   reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    MAPOF           reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    MUTABLEMAPOF    reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    SETOF           reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    MUTABLESETOF    reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    IF              reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    VAL             reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    VAR             reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    FUN             reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    CLASS           reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    OPEN            reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    $end            reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    AND             reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    OR              reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    LLLAVE          reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)
    RLLAVE          reduce using rule 44 (expresion -> LPAREN expresion RPAREN .)


state 118

    (63) condicion -> LPAREN condicion RPAREN .

    AND             reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    OR              reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    VARIABLE        reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    PRINT           reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    LPAREN          reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    NUMBER          reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    FLOAT           reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    TRUE            reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    FALSE           reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    NOT             reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    LISTOF          reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    MUTABLELISTOF   reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    MAPOF           reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    MUTABLEMAPOF    reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    SETOF           reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    MUTABLESETOF    reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    FOR             reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    WHILE           reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    IF              reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    VAL             reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    VAR             reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    FUN             reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    RETURN          reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    CLASS           reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    OPEN            reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    $end            reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    PLUS            reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    MINUS           reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    TIMES           reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    DIVIDE          reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    MOD             reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    GREATER         reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    LESS            reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    GREATER_EQUALS  reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    LESS_EQUALS     reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    EQUALS          reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    NOT_EQUALS      reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    RPAREN          reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    LLLAVE          reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)
    RLLAVE          reduce using rule 63 (condicion -> LPAREN condicion RPAREN .)


state 119

    (63) condicion -> LPAREN condicion . RPAREN
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion
    (49) expresion -> condicion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 118
    AND             shift and go to state 51
    OR              shift and go to state 52
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)

  ! RPAREN          [ reduce using rule 49 (expresion -> condicion .) ]


state 120

    (44) expresion -> LPAREN expresion . RPAREN
    (51) condicion -> expresion . GREATER expresion
    (52) condicion -> expresion . LESS expresion
    (53) condicion -> expresion . GREATER_EQUALS expresion
    (54) condicion -> expresion . LESS_EQUALS expresion
    (55) condicion -> expresion . EQUALS expresion
    (56) condicion -> expresion . NOT_EQUALS expresion
    (39) expresion -> expresion . PLUS expresion
    (40) expresion -> expresion . MINUS expresion
    (41) expresion -> expresion . TIMES expresion
    (42) expresion -> expresion . DIVIDE expresion
    (43) expresion -> expresion . MOD expresion

    RPAREN          shift and go to state 117
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATER_EQUALS  shift and go to state 47
    LESS_EQUALS     shift and go to state 48
    EQUALS          shift and go to state 49
    NOT_EQUALS      shift and go to state 50
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44


state 121

    (64) estructura -> LISTOF LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 145


state 122

    (65) estructura -> LISTOF LPAREN RPAREN .

    VARIABLE        reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    PRINT           reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    LPAREN          reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    NUMBER          reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    FLOAT           reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    TRUE            reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    FALSE           reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    NOT             reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    LISTOF          reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    MAPOF           reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    SETOF           reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    FOR             reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    WHILE           reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    IF              reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    VAL             reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    VAR             reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    FUN             reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    RETURN          reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    CLASS           reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    OPEN            reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    $end            reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    RLLAVE          reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)
    CONSTRUCTOR     reduce using rule 65 (estructura -> LISTOF LPAREN RPAREN .)


state 123

    (66) estructura -> MUTABLELISTOF LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 146


state 124

    (67) estructura -> MUTABLELISTOF LPAREN RPAREN .

    VARIABLE        reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    PRINT           reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    LPAREN          reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    NUMBER          reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    FLOAT           reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    TRUE            reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    FALSE           reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    NOT             reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    LISTOF          reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    MAPOF           reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    SETOF           reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    FOR             reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    WHILE           reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    IF              reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    VAL             reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    VAR             reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    FUN             reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    RETURN          reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    CLASS           reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    OPEN            reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    $end            reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    RLLAVE          reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)
    CONSTRUCTOR     reduce using rule 67 (estructura -> MUTABLELISTOF LPAREN RPAREN .)


state 125

    (68) estructura -> MAPOF LPAREN pareskv_mapa . RPAREN

    RPAREN          shift and go to state 147


state 126

    (70) pareskv_mapa -> valor . TO_FROM_KV valor COMMA pareskv_mapa
    (71) pareskv_mapa -> valor . TO_FROM_KV valor

    TO_FROM_KV      shift and go to state 148


state 127

    (69) estructura -> MUTABLEMAPOF LPAREN pareskv_mapa . RPAREN

    RPAREN          shift and go to state 149


state 128

    (72) estructura -> SETOF LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 150


state 129

    (73) estructura -> SETOF LPAREN RPAREN .

    VARIABLE        reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    PRINT           reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    LPAREN          reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    NUMBER          reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    FLOAT           reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    TRUE            reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    FALSE           reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    NOT             reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    LISTOF          reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    MAPOF           reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    SETOF           reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    FOR             reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    WHILE           reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    IF              reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    VAL             reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    VAR             reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    FUN             reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    RETURN          reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    CLASS           reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    OPEN            reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    $end            reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    RLLAVE          reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)
    CONSTRUCTOR     reduce using rule 73 (estructura -> SETOF LPAREN RPAREN .)


state 130

    (74) estructura -> MUTABLESETOF LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 151


state 131

    (75) estructura -> MUTABLESETOF LPAREN RPAREN .

    VARIABLE        reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    PRINT           reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    LPAREN          reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    NUMBER          reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    FLOAT           reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    TRUE            reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    FALSE           reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    NOT             reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    LISTOF          reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    MAPOF           reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    SETOF           reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    FOR             reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    WHILE           reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    IF              reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    VAL             reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    VAR             reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    FUN             reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    RETURN          reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    CLASS           reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    OPEN            reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    $end            reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    RLLAVE          reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)
    CONSTRUCTOR     reduce using rule 75 (estructura -> MUTABLESETOF LPAREN RPAREN .)


state 132

    (84) estructura -> FOR LPAREN VARIABLE . IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE

    IN              shift and go to state 152


state 133

    (85) estructura -> WHILE condicion LLLAVE . sentencias RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencias                     shift and go to state 153
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 134

    (86) estructura -> IF condicion LLLAVE . sentencias RLLAVE
    (87) estructura -> IF condicion LLLAVE . sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> IF condicion LLLAVE . sentencias RLLAVE repetirElseIf
    (89) estructura -> IF condicion LLLAVE . sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencias                     shift and go to state 154
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 135

    (17) declaracion_variable -> VAL VARIABLE ASIGN . valor
    (19) declaracion_variable -> VAL VARIABLE ASIGN . estructura
    (21) declaracion_variable -> VAL VARIABLE ASIGN . creacionObjeto
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (105) creacionObjeto -> . VARIABLE LPAREN RPAREN
    (106) creacionObjeto -> . VARIABLE LPAREN repiteValores RPAREN

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 155
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32

    valor                          shift and go to state 156
    estructura                     shift and go to state 157
    creacionObjeto                 shift and go to state 158

state 136

    (18) declaracion_variable -> VAR VARIABLE ASIGN . valor
    (20) declaracion_variable -> VAR VARIABLE ASIGN . estructura
    (22) declaracion_variable -> VAR VARIABLE ASIGN . creacionObjeto
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (105) creacionObjeto -> . VARIABLE LPAREN RPAREN
    (106) creacionObjeto -> . VARIABLE LPAREN repiteValores RPAREN

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 155
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32

    valor                          shift and go to state 159
    estructura                     shift and go to state 160
    creacionObjeto                 shift and go to state 161

state 137

    (97) funcion -> FUN VARIABLE LPAREN . parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> FUN VARIABLE LPAREN . parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> FUN VARIABLE LPAREN . parametros RPAREN COLON VARIABLE ASIGN sentencias
    (92) parametros -> . VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
    (93) parametros -> . VARIABLE COLON VARIABLE ASIGN valor
    (94) parametros -> . VARIABLE COLON VARIABLE COMMA parametros
    (95) parametros -> . VARIABLE COLON VARIABLE
    (96) parametros -> . empty
    (4) empty -> .

    VARIABLE        shift and go to state 162
    RPAREN          reduce using rule 4 (empty -> .)

    parametros                     shift and go to state 163
    empty                          shift and go to state 164

state 138

    (107) clase -> CLASS VARIABLE LLLAVE . sentencias RLLAVE
    (108) clase -> CLASS VARIABLE LLLAVE . RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 166
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 165
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 139

    (111) clase -> CLASS VARIABLE COLON . VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> CLASS VARIABLE COLON . VARIABLE LPAREN RPAREN LLLAVE RLLAVE

    VARIABLE        shift and go to state 167


state 140

    (113) constructorPri -> CLASS VARIABLE LPAREN . parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> CLASS VARIABLE LPAREN . parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> CLASS VARIABLE LPAREN . parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE
    (92) parametros -> . VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
    (93) parametros -> . VARIABLE COLON VARIABLE ASIGN valor
    (94) parametros -> . VARIABLE COLON VARIABLE COMMA parametros
    (95) parametros -> . VARIABLE COLON VARIABLE
    (96) parametros -> . empty
    (4) empty -> .

    VARIABLE        shift and go to state 162
    RPAREN          reduce using rule 4 (empty -> .)

    parametros                     shift and go to state 168
    empty                          shift and go to state 164

state 141

    (109) clase -> OPEN CLASS VARIABLE . LLLAVE sentencias RLLAVE
    (110) clase -> OPEN CLASS VARIABLE . LLLAVE RLLAVE

    LLLAVE          shift and go to state 169


state 142

    (105) creacionObjeto -> VARIABLE LPAREN . RPAREN
    (106) creacionObjeto -> VARIABLE LPAREN . repiteValores RPAREN
    (36) repiteValores -> . valor COMMA repiteValores
    (37) repiteValores -> . valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    RPAREN          shift and go to state 170
    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    repiteValores                  shift and go to state 171
    valor                          shift and go to state 111

state 143

    (29) impresion -> PRINT LPAREN repiteValores RPAREN .

    VARIABLE        reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    IF              reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    $end            reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 29 (impresion -> PRINT LPAREN repiteValores RPAREN .)


state 144

    (36) repiteValores -> valor COMMA . repiteValores
    (36) repiteValores -> . valor COMMA repiteValores
    (37) repiteValores -> . valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    valor                          shift and go to state 111
    repiteValores                  shift and go to state 172

state 145

    (64) estructura -> LISTOF LPAREN repiteValores RPAREN .

    VARIABLE        reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    IF              reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    $end            reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)
    CONSTRUCTOR     reduce using rule 64 (estructura -> LISTOF LPAREN repiteValores RPAREN .)


state 146

    (66) estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .

    VARIABLE        reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    IF              reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    $end            reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)
    CONSTRUCTOR     reduce using rule 66 (estructura -> MUTABLELISTOF LPAREN repiteValores RPAREN .)


state 147

    (68) estructura -> MAPOF LPAREN pareskv_mapa RPAREN .

    VARIABLE        reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    PRINT           reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    LPAREN          reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    NUMBER          reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    FLOAT           reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    TRUE            reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    FALSE           reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    NOT             reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    LISTOF          reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLELISTOF   reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    MAPOF           reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLEMAPOF    reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    SETOF           reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLESETOF    reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    FOR             reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    WHILE           reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    IF              reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    VAL             reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    VAR             reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    FUN             reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    RETURN          reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    CLASS           reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    OPEN            reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    $end            reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    RLLAVE          reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)
    CONSTRUCTOR     reduce using rule 68 (estructura -> MAPOF LPAREN pareskv_mapa RPAREN .)


state 148

    (70) pareskv_mapa -> valor TO_FROM_KV . valor COMMA pareskv_mapa
    (71) pareskv_mapa -> valor TO_FROM_KV . valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    valor                          shift and go to state 173

state 149

    (69) estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .

    VARIABLE        reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    PRINT           reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    LPAREN          reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    NUMBER          reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    FLOAT           reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    TRUE            reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    FALSE           reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    NOT             reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    LISTOF          reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLELISTOF   reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    MAPOF           reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLEMAPOF    reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    SETOF           reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    MUTABLESETOF    reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    FOR             reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    WHILE           reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    IF              reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    VAL             reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    VAR             reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    FUN             reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    RETURN          reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    CLASS           reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    OPEN            reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    $end            reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    RLLAVE          reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)
    CONSTRUCTOR     reduce using rule 69 (estructura -> MUTABLEMAPOF LPAREN pareskv_mapa RPAREN .)


state 150

    (72) estructura -> SETOF LPAREN repiteValores RPAREN .

    VARIABLE        reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    IF              reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    $end            reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)
    CONSTRUCTOR     reduce using rule 72 (estructura -> SETOF LPAREN repiteValores RPAREN .)


state 151

    (74) estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .

    VARIABLE        reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    IF              reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    $end            reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)
    CONSTRUCTOR     reduce using rule 74 (estructura -> MUTABLESETOF LPAREN repiteValores RPAREN .)


state 152

    (84) estructura -> FOR LPAREN VARIABLE IN . valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    valor                          shift and go to state 174

state 153

    (85) estructura -> WHILE condicion LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 175
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 154

    (86) estructura -> IF condicion LLLAVE sentencias . RLLAVE
    (87) estructura -> IF condicion LLLAVE sentencias . RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> IF condicion LLLAVE sentencias . RLLAVE repetirElseIf
    (89) estructura -> IF condicion LLLAVE sentencias . RLLAVE ELSE LLLAVE sentencias RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 176
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 155

    (32) valor -> VARIABLE .
    (105) creacionObjeto -> VARIABLE . LPAREN RPAREN
    (106) creacionObjeto -> VARIABLE . LPAREN repiteValores RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    VARIABLE        reduce using rule 32 (valor -> VARIABLE .)
    PRINT           reduce using rule 32 (valor -> VARIABLE .)
    NUMBER          reduce using rule 32 (valor -> VARIABLE .)
    FLOAT           reduce using rule 32 (valor -> VARIABLE .)
    TRUE            reduce using rule 32 (valor -> VARIABLE .)
    FALSE           reduce using rule 32 (valor -> VARIABLE .)
    NOT             reduce using rule 32 (valor -> VARIABLE .)
    LISTOF          reduce using rule 32 (valor -> VARIABLE .)
    MUTABLELISTOF   reduce using rule 32 (valor -> VARIABLE .)
    MAPOF           reduce using rule 32 (valor -> VARIABLE .)
    MUTABLEMAPOF    reduce using rule 32 (valor -> VARIABLE .)
    SETOF           reduce using rule 32 (valor -> VARIABLE .)
    MUTABLESETOF    reduce using rule 32 (valor -> VARIABLE .)
    FOR             reduce using rule 32 (valor -> VARIABLE .)
    WHILE           reduce using rule 32 (valor -> VARIABLE .)
    IF              reduce using rule 32 (valor -> VARIABLE .)
    VAL             reduce using rule 32 (valor -> VARIABLE .)
    VAR             reduce using rule 32 (valor -> VARIABLE .)
    FUN             reduce using rule 32 (valor -> VARIABLE .)
    RETURN          reduce using rule 32 (valor -> VARIABLE .)
    CLASS           reduce using rule 32 (valor -> VARIABLE .)
    OPEN            reduce using rule 32 (valor -> VARIABLE .)
    $end            reduce using rule 32 (valor -> VARIABLE .)
    RLLAVE          reduce using rule 32 (valor -> VARIABLE .)
    CONSTRUCTOR     reduce using rule 32 (valor -> VARIABLE .)
    LPAREN          shift and go to state 142

  ! LPAREN          [ reduce using rule 32 (valor -> VARIABLE .) ]


state 156

    (17) declaracion_variable -> VAL VARIABLE ASIGN valor .

    VARIABLE        reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    PRINT           reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    LPAREN          reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    NUMBER          reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    FLOAT           reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    TRUE            reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    FALSE           reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    NOT             reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    LISTOF          reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    MUTABLELISTOF   reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    MAPOF           reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    MUTABLEMAPOF    reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    SETOF           reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    MUTABLESETOF    reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    FOR             reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    WHILE           reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    IF              reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    VAL             reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    VAR             reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    FUN             reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    RETURN          reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    CLASS           reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    OPEN            reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    $end            reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    RLLAVE          reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)
    CONSTRUCTOR     reduce using rule 17 (declaracion_variable -> VAL VARIABLE ASIGN valor .)


state 157

    (19) declaracion_variable -> VAL VARIABLE ASIGN estructura .

    VARIABLE        reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    PRINT           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    LPAREN          reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    NUMBER          reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    FLOAT           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    TRUE            reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    FALSE           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    NOT             reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    LISTOF          reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    MUTABLELISTOF   reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    MAPOF           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    MUTABLEMAPOF    reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    SETOF           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    MUTABLESETOF    reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    FOR             reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    WHILE           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    IF              reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    VAL             reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    VAR             reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    FUN             reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    RETURN          reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    CLASS           reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    OPEN            reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    $end            reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    RLLAVE          reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)
    CONSTRUCTOR     reduce using rule 19 (declaracion_variable -> VAL VARIABLE ASIGN estructura .)


state 158

    (21) declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .

    VARIABLE        reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    PRINT           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    LPAREN          reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    NUMBER          reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    FLOAT           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    TRUE            reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    FALSE           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    NOT             reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    LISTOF          reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    MUTABLELISTOF   reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    MAPOF           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    MUTABLEMAPOF    reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    SETOF           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    MUTABLESETOF    reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    FOR             reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    WHILE           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    IF              reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    VAL             reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    VAR             reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    FUN             reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    RETURN          reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    CLASS           reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    OPEN            reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    $end            reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    RLLAVE          reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)
    CONSTRUCTOR     reduce using rule 21 (declaracion_variable -> VAL VARIABLE ASIGN creacionObjeto .)


state 159

    (18) declaracion_variable -> VAR VARIABLE ASIGN valor .

    VARIABLE        reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    PRINT           reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    LPAREN          reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    NUMBER          reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    FLOAT           reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    TRUE            reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    FALSE           reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    NOT             reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    LISTOF          reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    MUTABLELISTOF   reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    MAPOF           reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    MUTABLEMAPOF    reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    SETOF           reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    MUTABLESETOF    reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    FOR             reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    WHILE           reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    IF              reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    VAL             reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    VAR             reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    FUN             reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    RETURN          reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    CLASS           reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    OPEN            reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    $end            reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    RLLAVE          reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)
    CONSTRUCTOR     reduce using rule 18 (declaracion_variable -> VAR VARIABLE ASIGN valor .)


state 160

    (20) declaracion_variable -> VAR VARIABLE ASIGN estructura .

    VARIABLE        reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    PRINT           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    LPAREN          reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    NUMBER          reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    FLOAT           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    TRUE            reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    FALSE           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    NOT             reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    LISTOF          reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    MUTABLELISTOF   reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    MAPOF           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    MUTABLEMAPOF    reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    SETOF           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    MUTABLESETOF    reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    FOR             reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    WHILE           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    IF              reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    VAL             reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    VAR             reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    FUN             reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    RETURN          reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    CLASS           reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    OPEN            reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    $end            reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    RLLAVE          reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)
    CONSTRUCTOR     reduce using rule 20 (declaracion_variable -> VAR VARIABLE ASIGN estructura .)


state 161

    (22) declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .

    VARIABLE        reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    PRINT           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    LPAREN          reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    NUMBER          reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    FLOAT           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    TRUE            reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    FALSE           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    NOT             reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    LISTOF          reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    MUTABLELISTOF   reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    MAPOF           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    MUTABLEMAPOF    reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    SETOF           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    MUTABLESETOF    reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    FOR             reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    WHILE           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    IF              reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    VAL             reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    VAR             reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    FUN             reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    RETURN          reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    CLASS           reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    OPEN            reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    $end            reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    RLLAVE          reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)
    CONSTRUCTOR     reduce using rule 22 (declaracion_variable -> VAR VARIABLE ASIGN creacionObjeto .)


state 162

    (92) parametros -> VARIABLE . COLON VARIABLE ASIGN valor COMMA parametros
    (93) parametros -> VARIABLE . COLON VARIABLE ASIGN valor
    (94) parametros -> VARIABLE . COLON VARIABLE COMMA parametros
    (95) parametros -> VARIABLE . COLON VARIABLE

    COLON           shift and go to state 177


state 163

    (97) funcion -> FUN VARIABLE LPAREN parametros . RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> FUN VARIABLE LPAREN parametros . RPAREN LLLAVE empty RLLAVE
    (99) funcion -> FUN VARIABLE LPAREN parametros . RPAREN COLON VARIABLE ASIGN sentencias

    RPAREN          shift and go to state 178


state 164

    (96) parametros -> empty .

    RPAREN          reduce using rule 96 (parametros -> empty .)


state 165

    (107) clase -> CLASS VARIABLE LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 179
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 166

    (108) clase -> CLASS VARIABLE LLLAVE RLLAVE .

    VARIABLE        reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    PRINT           reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    LPAREN          reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    NUMBER          reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    FLOAT           reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    TRUE            reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    FALSE           reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    NOT             reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    LISTOF          reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLELISTOF   reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    MAPOF           reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLEMAPOF    reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    SETOF           reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLESETOF    reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    FOR             reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    WHILE           reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    IF              reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    VAL             reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    VAR             reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    FUN             reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    RETURN          reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    CLASS           reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    OPEN            reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    $end            reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)
    RLLAVE          reduce using rule 108 (clase -> CLASS VARIABLE LLLAVE RLLAVE .)


state 167

    (111) clase -> CLASS VARIABLE COLON VARIABLE . LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> CLASS VARIABLE COLON VARIABLE . LPAREN RPAREN LLLAVE RLLAVE

    LPAREN          shift and go to state 180


state 168

    (113) constructorPri -> CLASS VARIABLE LPAREN parametros . RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> CLASS VARIABLE LPAREN parametros . RPAREN LLLAVE RLLAVE
    (115) constructorPri -> CLASS VARIABLE LPAREN parametros . RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

    RPAREN          shift and go to state 181


state 169

    (109) clase -> OPEN CLASS VARIABLE LLLAVE . sentencias RLLAVE
    (110) clase -> OPEN CLASS VARIABLE LLLAVE . RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 183
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 182
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 170

    (105) creacionObjeto -> VARIABLE LPAREN RPAREN .

    VARIABLE        reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    PRINT           reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    LPAREN          reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    NUMBER          reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    FLOAT           reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    TRUE            reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    FALSE           reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    NOT             reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    LISTOF          reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    MUTABLELISTOF   reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    MAPOF           reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    MUTABLEMAPOF    reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    SETOF           reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    MUTABLESETOF    reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    FOR             reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    WHILE           reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    IF              reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    VAL             reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    VAR             reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    FUN             reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    RETURN          reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    CLASS           reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    OPEN            reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    $end            reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    RLLAVE          reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)
    CONSTRUCTOR     reduce using rule 105 (creacionObjeto -> VARIABLE LPAREN RPAREN .)


state 171

    (106) creacionObjeto -> VARIABLE LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 184


state 172

    (36) repiteValores -> valor COMMA repiteValores .

    RPAREN          reduce using rule 36 (repiteValores -> valor COMMA repiteValores .)


state 173

    (70) pareskv_mapa -> valor TO_FROM_KV valor . COMMA pareskv_mapa
    (71) pareskv_mapa -> valor TO_FROM_KV valor .

    COMMA           shift and go to state 185
    RPAREN          reduce using rule 71 (pareskv_mapa -> valor TO_FROM_KV valor .)


state 174

    (84) estructura -> FOR LPAREN VARIABLE IN valor . RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE

    RANGE_TO        shift and go to state 186


state 175

    (85) estructura -> WHILE condicion LLLAVE sentencias RLLAVE .

    VARIABLE        reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 85 (estructura -> WHILE condicion LLLAVE sentencias RLLAVE .)


state 176

    (86) estructura -> IF condicion LLLAVE sentencias RLLAVE .
    (87) estructura -> IF condicion LLLAVE sentencias RLLAVE . repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> IF condicion LLLAVE sentencias RLLAVE . repetirElseIf
    (89) estructura -> IF condicion LLLAVE sentencias RLLAVE . ELSE LLLAVE sentencias RLLAVE
    (90) repetirElseIf -> . ELSE IF condicion LLLAVE sentencias RLLAVE
    (91) repetirElseIf -> . ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf

    VARIABLE        reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 86 (estructura -> IF condicion LLLAVE sentencias RLLAVE .)
    ELSE            shift and go to state 188

    repetirElseIf                  shift and go to state 187

state 177

    (92) parametros -> VARIABLE COLON . VARIABLE ASIGN valor COMMA parametros
    (93) parametros -> VARIABLE COLON . VARIABLE ASIGN valor
    (94) parametros -> VARIABLE COLON . VARIABLE COMMA parametros
    (95) parametros -> VARIABLE COLON . VARIABLE

    VARIABLE        shift and go to state 189


state 178

    (97) funcion -> FUN VARIABLE LPAREN parametros RPAREN . COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> FUN VARIABLE LPAREN parametros RPAREN . LLLAVE empty RLLAVE
    (99) funcion -> FUN VARIABLE LPAREN parametros RPAREN . COLON VARIABLE ASIGN sentencias

    COLON           shift and go to state 190
    LLLAVE          shift and go to state 191


state 179

    (107) clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .

    VARIABLE        reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 107 (clase -> CLASS VARIABLE LLLAVE sentencias RLLAVE .)


state 180

    (111) clase -> CLASS VARIABLE COLON VARIABLE LPAREN . RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> CLASS VARIABLE COLON VARIABLE LPAREN . RPAREN LLLAVE RLLAVE

    RPAREN          shift and go to state 192


state 181

    (113) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN . LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN . LLLAVE RLLAVE
    (115) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN . LLLAVE repetirDeclaracion constructorSec RLLAVE

    LLLAVE          shift and go to state 193


state 182

    (109) clase -> OPEN CLASS VARIABLE LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 194
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 183

    (110) clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .

    VARIABLE        reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    PRINT           reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    LPAREN          reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    NUMBER          reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    FLOAT           reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    TRUE            reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    FALSE           reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    NOT             reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    LISTOF          reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLELISTOF   reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    MAPOF           reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLEMAPOF    reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    SETOF           reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    MUTABLESETOF    reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    FOR             reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    WHILE           reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    IF              reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    VAL             reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    VAR             reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    FUN             reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    RETURN          reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    CLASS           reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    OPEN            reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    $end            reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)
    RLLAVE          reduce using rule 110 (clase -> OPEN CLASS VARIABLE LLLAVE RLLAVE .)


state 184

    (106) creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .

    VARIABLE        reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    PRINT           reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    LPAREN          reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    NUMBER          reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    FLOAT           reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    TRUE            reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    FALSE           reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    NOT             reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    LISTOF          reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    MUTABLELISTOF   reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    MAPOF           reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    MUTABLEMAPOF    reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    SETOF           reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    MUTABLESETOF    reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    FOR             reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    WHILE           reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    IF              reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    VAL             reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    VAR             reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    FUN             reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    RETURN          reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    CLASS           reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    OPEN            reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    $end            reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    RLLAVE          reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)
    CONSTRUCTOR     reduce using rule 106 (creacionObjeto -> VARIABLE LPAREN repiteValores RPAREN .)


state 185

    (70) pareskv_mapa -> valor TO_FROM_KV valor COMMA . pareskv_mapa
    (70) pareskv_mapa -> . valor TO_FROM_KV valor COMMA pareskv_mapa
    (71) pareskv_mapa -> . valor TO_FROM_KV valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    valor                          shift and go to state 126
    pareskv_mapa                   shift and go to state 195

state 186

    (84) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO . valor RPAREN LLLAVE sentencias RLLAVE
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    valor                          shift and go to state 196

state 187

    (87) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf . ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .

    ELSE            shift and go to state 197
    VARIABLE        reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    PRINT           reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    LPAREN          reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    NUMBER          reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FLOAT           reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    TRUE            reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FALSE           reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    NOT             reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    LISTOF          reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLELISTOF   reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MAPOF           reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLEMAPOF    reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    SETOF           reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLESETOF    reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FOR             reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    WHILE           reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    IF              reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    VAL             reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    VAR             reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FUN             reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    RETURN          reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    CLASS           reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    OPEN            reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    $end            reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    RLLAVE          reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    CONSTRUCTOR     reduce using rule 88 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)


state 188

    (89) estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE . LLLAVE sentencias RLLAVE
    (90) repetirElseIf -> ELSE . IF condicion LLLAVE sentencias RLLAVE
    (91) repetirElseIf -> ELSE . IF condicion LLLAVE sentencias RLLAVE repetirElseIf

    LLLAVE          shift and go to state 199
    IF              shift and go to state 198


state 189

    (92) parametros -> VARIABLE COLON VARIABLE . ASIGN valor COMMA parametros
    (93) parametros -> VARIABLE COLON VARIABLE . ASIGN valor
    (94) parametros -> VARIABLE COLON VARIABLE . COMMA parametros
    (95) parametros -> VARIABLE COLON VARIABLE .

    ASIGN           shift and go to state 200
    COMMA           shift and go to state 201
    RPAREN          reduce using rule 95 (parametros -> VARIABLE COLON VARIABLE .)


state 190

    (97) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON . VARIABLE LLLAVE sentencias RLLAVE
    (99) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON . VARIABLE ASIGN sentencias

    VARIABLE        shift and go to state 202


state 191

    (98) funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE . empty RLLAVE
    (4) empty -> .

    RLLAVE          reduce using rule 4 (empty -> .)

    empty                          shift and go to state 203

state 192

    (111) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN . LLLAVE sentencias RLLAVE
    (112) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN . LLLAVE RLLAVE

    LLLAVE          shift and go to state 204


state 193

    (113) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE . repetirDeclaracion RLLAVE
    (114) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE . RLLAVE
    (115) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE . repetirDeclaracion constructorSec RLLAVE
    (103) repetirDeclaracion -> . declaracion_variable repetirDeclaracion
    (104) repetirDeclaracion -> . declaracion_variable
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto

    RLLAVE          shift and go to state 206
    VAL             shift and go to state 33
    VAR             shift and go to state 34

    repetirDeclaracion             shift and go to state 205
    declaracion_variable           shift and go to state 207

state 194

    (109) clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .

    VARIABLE        reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 109 (clase -> OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE .)


state 195

    (70) pareskv_mapa -> valor TO_FROM_KV valor COMMA pareskv_mapa .

    RPAREN          reduce using rule 70 (pareskv_mapa -> valor TO_FROM_KV valor COMMA pareskv_mapa .)


state 196

    (84) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 208


state 197

    (87) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 209


state 198

    (90) repetirElseIf -> ELSE IF . condicion LLLAVE sentencias RLLAVE
    (91) repetirElseIf -> ELSE IF . condicion LLLAVE sentencias RLLAVE repetirElseIf
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE

    NOT             shift and go to state 23
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    LPAREN          shift and go to state 62
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    VARIABLE        shift and go to state 57

    condicion                      shift and go to state 210
    expresion                      shift and go to state 71

state 199

    (89) estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencias                     shift and go to state 211
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 200

    (92) parametros -> VARIABLE COLON VARIABLE ASIGN . valor COMMA parametros
    (93) parametros -> VARIABLE COLON VARIABLE ASIGN . valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    valor                          shift and go to state 212

state 201

    (94) parametros -> VARIABLE COLON VARIABLE COMMA . parametros
    (92) parametros -> . VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
    (93) parametros -> . VARIABLE COLON VARIABLE ASIGN valor
    (94) parametros -> . VARIABLE COLON VARIABLE COMMA parametros
    (95) parametros -> . VARIABLE COLON VARIABLE
    (96) parametros -> . empty
    (4) empty -> .

    VARIABLE        shift and go to state 162
    RPAREN          reduce using rule 4 (empty -> .)

    parametros                     shift and go to state 213
    empty                          shift and go to state 164

state 202

    (97) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE . LLLAVE sentencias RLLAVE
    (99) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE . ASIGN sentencias

    LLLAVE          shift and go to state 214
    ASIGN           shift and go to state 215


state 203

    (98) funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty . RLLAVE

    RLLAVE          shift and go to state 216


state 204

    (111) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE . sentencias RLLAVE
    (112) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE . RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 218
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 217
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 205

    (113) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion . RLLAVE
    (115) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion . constructorSec RLLAVE
    (116) constructorSec -> . CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE
    (117) constructorSec -> . CONSTRUCTOR LPAREN parametros RPAREN COLON LLLAVE repetirThis RLLAVE
    (118) constructorSec -> . CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE RLLAVE
    (119) constructorSec -> . CONSTRUCTOR LPAREN parametros RPAREN COLON LLLAVE RLLAVE

    RLLAVE          shift and go to state 219
    CONSTRUCTOR     shift and go to state 221

    constructorSec                 shift and go to state 220

state 206

    (114) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .

    VARIABLE        reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    PRINT           reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    LPAREN          reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    NUMBER          reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    FLOAT           reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    TRUE            reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    FALSE           reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    NOT             reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    LISTOF          reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    MUTABLELISTOF   reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    MAPOF           reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    MUTABLEMAPOF    reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    SETOF           reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    MUTABLESETOF    reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    FOR             reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    WHILE           reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    IF              reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    VAL             reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    VAR             reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    FUN             reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    RETURN          reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    CLASS           reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    OPEN            reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    $end            reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)
    RLLAVE          reduce using rule 114 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE .)


state 207

    (103) repetirDeclaracion -> declaracion_variable . repetirDeclaracion
    (104) repetirDeclaracion -> declaracion_variable .
    (103) repetirDeclaracion -> . declaracion_variable repetirDeclaracion
    (104) repetirDeclaracion -> . declaracion_variable
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto

    RLLAVE          reduce using rule 104 (repetirDeclaracion -> declaracion_variable .)
    CONSTRUCTOR     reduce using rule 104 (repetirDeclaracion -> declaracion_variable .)
    VAL             shift and go to state 33
    VAR             shift and go to state 34

    declaracion_variable           shift and go to state 207
    repetirDeclaracion             shift and go to state 222

state 208

    (84) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 223


state 209

    (87) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencias                     shift and go to state 224
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 210

    (90) repetirElseIf -> ELSE IF condicion . LLLAVE sentencias RLLAVE
    (91) repetirElseIf -> ELSE IF condicion . LLLAVE sentencias RLLAVE repetirElseIf
    (57) condicion -> condicion . AND condicion
    (58) condicion -> condicion . OR condicion
    (49) expresion -> condicion .

    LLLAVE          shift and go to state 225
    AND             shift and go to state 51
    OR              shift and go to state 52
    GREATER         reduce using rule 49 (expresion -> condicion .)
    LESS            reduce using rule 49 (expresion -> condicion .)
    GREATER_EQUALS  reduce using rule 49 (expresion -> condicion .)
    LESS_EQUALS     reduce using rule 49 (expresion -> condicion .)
    EQUALS          reduce using rule 49 (expresion -> condicion .)
    NOT_EQUALS      reduce using rule 49 (expresion -> condicion .)
    PLUS            reduce using rule 49 (expresion -> condicion .)
    MINUS           reduce using rule 49 (expresion -> condicion .)
    TIMES           reduce using rule 49 (expresion -> condicion .)
    DIVIDE          reduce using rule 49 (expresion -> condicion .)
    MOD             reduce using rule 49 (expresion -> condicion .)


state 211

    (89) estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 226
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 212

    (92) parametros -> VARIABLE COLON VARIABLE ASIGN valor . COMMA parametros
    (93) parametros -> VARIABLE COLON VARIABLE ASIGN valor .

    COMMA           shift and go to state 227
    RPAREN          reduce using rule 93 (parametros -> VARIABLE COLON VARIABLE ASIGN valor .)


state 213

    (94) parametros -> VARIABLE COLON VARIABLE COMMA parametros .

    RPAREN          reduce using rule 94 (parametros -> VARIABLE COLON VARIABLE COMMA parametros .)


state 214

    (97) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 228
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 215

    (99) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN . sentencias
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    $end            reduce using rule 4 (empty -> .)
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 229
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 216

    (98) funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .

    VARIABLE        reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    PRINT           reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    LPAREN          reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    NUMBER          reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    FLOAT           reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    TRUE            reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    FALSE           reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    NOT             reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    LISTOF          reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    MUTABLELISTOF   reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    MAPOF           reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    MUTABLEMAPOF    reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    SETOF           reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    MUTABLESETOF    reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    FOR             reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    WHILE           reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    IF              reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    VAL             reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    VAR             reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    FUN             reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    RETURN          reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    CLASS           reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    OPEN            reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    $end            reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)
    RLLAVE          reduce using rule 98 (funcion -> FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE .)


state 217

    (111) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 230
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 218

    (112) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .

    VARIABLE        reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    PRINT           reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    LPAREN          reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    NUMBER          reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    FLOAT           reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    TRUE            reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    FALSE           reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    NOT             reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    LISTOF          reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    MUTABLELISTOF   reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    MAPOF           reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    MUTABLEMAPOF    reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    SETOF           reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    MUTABLESETOF    reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    FOR             reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    WHILE           reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    IF              reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    VAL             reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    VAR             reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    FUN             reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    RETURN          reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    CLASS           reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    OPEN            reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    $end            reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)
    RLLAVE          reduce using rule 112 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE .)


state 219

    (113) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .

    VARIABLE        reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    PRINT           reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    LPAREN          reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    NUMBER          reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    FLOAT           reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    TRUE            reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    FALSE           reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    NOT             reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    LISTOF          reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    MUTABLELISTOF   reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    MAPOF           reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    MUTABLEMAPOF    reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    SETOF           reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    MUTABLESETOF    reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    FOR             reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    WHILE           reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    IF              reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    VAL             reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    VAR             reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    FUN             reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    RETURN          reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    CLASS           reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    OPEN            reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    $end            reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)
    RLLAVE          reduce using rule 113 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE .)


state 220

    (115) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec . RLLAVE

    RLLAVE          shift and go to state 231


state 221

    (116) constructorSec -> CONSTRUCTOR . LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE
    (117) constructorSec -> CONSTRUCTOR . LPAREN parametros RPAREN COLON LLLAVE repetirThis RLLAVE
    (118) constructorSec -> CONSTRUCTOR . LPAREN parametros RPAREN COLON formarThis LLLAVE RLLAVE
    (119) constructorSec -> CONSTRUCTOR . LPAREN parametros RPAREN COLON LLLAVE RLLAVE

    LPAREN          shift and go to state 232


state 222

    (103) repetirDeclaracion -> declaracion_variable repetirDeclaracion .

    RLLAVE          reduce using rule 103 (repetirDeclaracion -> declaracion_variable repetirDeclaracion .)
    CONSTRUCTOR     reduce using rule 103 (repetirDeclaracion -> declaracion_variable repetirDeclaracion .)


state 223

    (84) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE . sentencias RLLAVE
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencias                     shift and go to state 233
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 224

    (87) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 234
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 225

    (90) repetirElseIf -> ELSE IF condicion LLLAVE . sentencias RLLAVE
    (91) repetirElseIf -> ELSE IF condicion LLLAVE . sentencias RLLAVE repetirElseIf
    (2) sentencias -> . sentencia
    (3) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencias                     shift and go to state 235
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 226

    (89) estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .

    VARIABLE        reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 89 (estructura -> IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)


state 227

    (92) parametros -> VARIABLE COLON VARIABLE ASIGN valor COMMA . parametros
    (92) parametros -> . VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
    (93) parametros -> . VARIABLE COLON VARIABLE ASIGN valor
    (94) parametros -> . VARIABLE COLON VARIABLE COMMA parametros
    (95) parametros -> . VARIABLE COLON VARIABLE
    (96) parametros -> . empty
    (4) empty -> .

    VARIABLE        shift and go to state 162
    RPAREN          reduce using rule 4 (empty -> .)

    parametros                     shift and go to state 236
    empty                          shift and go to state 164

state 228

    (97) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 237
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 229

    (99) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! reduce/reduce conflict for RETURN resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for CLASS resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for OPEN resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for $end resolved using rule 4 (empty -> .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 4 (empty -> .)
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    $end            reduce using rule 4 (empty -> .)
    RLLAVE          reduce using rule 4 (empty -> .)
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! VARIABLE        [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! PRINT           [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! LPAREN          [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! NUMBER          [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! FLOAT           [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! TRUE            [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! FALSE           [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! NOT             [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! LISTOF          [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! MUTABLELISTOF   [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! MAPOF           [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! MUTABLEMAPOF    [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! SETOF           [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! MUTABLESETOF    [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! FOR             [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! WHILE           [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! IF              [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! VAL             [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! VAR             [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! FUN             [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! RETURN          [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! CLASS           [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! OPEN            [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! $end            [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! RLLAVE          [ reduce using rule 99 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 230

    (111) clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .

    VARIABLE        reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 111 (clase -> CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE .)


state 231

    (115) constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .

    VARIABLE        reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    PRINT           reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    LPAREN          reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    NUMBER          reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    FLOAT           reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    TRUE            reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    FALSE           reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    NOT             reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    LISTOF          reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    MUTABLELISTOF   reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    MAPOF           reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    MUTABLEMAPOF    reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    SETOF           reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    MUTABLESETOF    reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    FOR             reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    WHILE           reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    IF              reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    VAL             reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    VAR             reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    FUN             reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    RETURN          reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    CLASS           reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    OPEN            reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    $end            reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)
    RLLAVE          reduce using rule 115 (constructorPri -> CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE .)


state 232

    (116) constructorSec -> CONSTRUCTOR LPAREN . parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE
    (117) constructorSec -> CONSTRUCTOR LPAREN . parametros RPAREN COLON LLLAVE repetirThis RLLAVE
    (118) constructorSec -> CONSTRUCTOR LPAREN . parametros RPAREN COLON formarThis LLLAVE RLLAVE
    (119) constructorSec -> CONSTRUCTOR LPAREN . parametros RPAREN COLON LLLAVE RLLAVE
    (92) parametros -> . VARIABLE COLON VARIABLE ASIGN valor COMMA parametros
    (93) parametros -> . VARIABLE COLON VARIABLE ASIGN valor
    (94) parametros -> . VARIABLE COLON VARIABLE COMMA parametros
    (95) parametros -> . VARIABLE COLON VARIABLE
    (96) parametros -> . empty
    (4) empty -> .

    VARIABLE        shift and go to state 162
    RPAREN          reduce using rule 4 (empty -> .)

    parametros                     shift and go to state 238
    empty                          shift and go to state 164

state 233

    (84) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias . RLLAVE
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 239
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    condicion                      shift and go to state 8
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 234

    (87) estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .

    VARIABLE        reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 87 (estructura -> IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE .)


state 235

    (90) repetirElseIf -> ELSE IF condicion LLLAVE sentencias . RLLAVE
    (91) repetirElseIf -> ELSE IF condicion LLLAVE sentencias . RLLAVE repetirElseIf
    (3) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . impresion
    (7) sentencia -> . impresion_vacia
    (8) sentencia -> . expresion
    (9) sentencia -> . condicion
    (10) sentencia -> . estructura
    (11) sentencia -> . declaracion_variable
    (12) sentencia -> . funcion
    (13) sentencia -> . empty
    (14) sentencia -> . retorno
    (15) sentencia -> . clase
    (16) sentencia -> . constructorPri
    (23) asignacion -> . VARIABLE ASIGN VARIABLE
    (24) asignacion -> . VARIABLE ASIGN expresion
    (25) asignacion -> . VARIABLE ASIGN condicion
    (26) asignacion -> . VARIABLE ASIGN estructura
    (27) asignacion -> . VARIABLE ASIGN creacionObjeto
    (29) impresion -> . PRINT LPAREN repiteValores RPAREN
    (28) impresion_vacia -> . PRINT LPAREN RPAREN
    (39) expresion -> . expresion PLUS expresion
    (40) expresion -> . expresion MINUS expresion
    (41) expresion -> . expresion TIMES expresion
    (42) expresion -> . expresion DIVIDE expresion
    (43) expresion -> . expresion MOD expresion
    (44) expresion -> . LPAREN expresion RPAREN
    (45) expresion -> . NUMBER
    (46) expresion -> . FLOAT
    (47) expresion -> . TRUE
    (48) expresion -> . FALSE
    (49) expresion -> . condicion
    (50) expresion -> . VARIABLE
    (51) condicion -> . expresion GREATER expresion
    (52) condicion -> . expresion LESS expresion
    (53) condicion -> . expresion GREATER_EQUALS expresion
    (54) condicion -> . expresion LESS_EQUALS expresion
    (55) condicion -> . expresion EQUALS expresion
    (56) condicion -> . expresion NOT_EQUALS expresion
    (57) condicion -> . condicion AND condicion
    (58) condicion -> . condicion OR condicion
    (59) condicion -> . NOT condicion
    (60) condicion -> . NOT expresion
    (61) condicion -> . TRUE
    (62) condicion -> . FALSE
    (63) condicion -> . LPAREN condicion RPAREN
    (64) estructura -> . LISTOF LPAREN repiteValores RPAREN
    (65) estructura -> . LISTOF LPAREN RPAREN
    (66) estructura -> . MUTABLELISTOF LPAREN repiteValores RPAREN
    (67) estructura -> . MUTABLELISTOF LPAREN RPAREN
    (68) estructura -> . MAPOF LPAREN pareskv_mapa RPAREN
    (69) estructura -> . MUTABLEMAPOF LPAREN pareskv_mapa RPAREN
    (72) estructura -> . SETOF LPAREN repiteValores RPAREN
    (73) estructura -> . SETOF LPAREN RPAREN
    (74) estructura -> . MUTABLESETOF LPAREN repiteValores RPAREN
    (75) estructura -> . MUTABLESETOF LPAREN RPAREN
    (84) estructura -> . FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE
    (85) estructura -> . WHILE condicion LLLAVE sentencias RLLAVE
    (86) estructura -> . IF condicion LLLAVE sentencias RLLAVE
    (87) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf ELSE LLLAVE sentencias RLLAVE
    (88) estructura -> . IF condicion LLLAVE sentencias RLLAVE repetirElseIf
    (89) estructura -> . IF condicion LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (17) declaracion_variable -> . VAL VARIABLE ASIGN valor
    (18) declaracion_variable -> . VAR VARIABLE ASIGN valor
    (19) declaracion_variable -> . VAL VARIABLE ASIGN estructura
    (20) declaracion_variable -> . VAR VARIABLE ASIGN estructura
    (21) declaracion_variable -> . VAL VARIABLE ASIGN creacionObjeto
    (22) declaracion_variable -> . VAR VARIABLE ASIGN creacionObjeto
    (97) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE
    (98) funcion -> . FUN VARIABLE LPAREN parametros RPAREN LLLAVE empty RLLAVE
    (99) funcion -> . FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias
    (4) empty -> .
    (76) retorno -> . RETURN objetoRetorno
    (107) clase -> . CLASS VARIABLE LLLAVE sentencias RLLAVE
    (108) clase -> . CLASS VARIABLE LLLAVE RLLAVE
    (109) clase -> . OPEN CLASS VARIABLE LLLAVE sentencias RLLAVE
    (110) clase -> . OPEN CLASS VARIABLE LLLAVE RLLAVE
    (111) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE sentencias RLLAVE
    (112) clase -> . CLASS VARIABLE COLON VARIABLE LPAREN RPAREN LLLAVE RLLAVE
    (113) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion RLLAVE
    (114) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE RLLAVE
    (115) constructorPri -> . CLASS VARIABLE LPAREN parametros RPAREN LLLAVE repetirDeclaracion constructorSec RLLAVE

  ! shift/reduce conflict for RLLAVE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for MUTABLELISTOF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MUTABLEMAPOF resolved as shift
  ! shift/reduce conflict for SETOF resolved as shift
  ! shift/reduce conflict for MUTABLESETOF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for OPEN resolved as shift
    RLLAVE          shift and go to state 240
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 17
    LPAREN          shift and go to state 18
    NUMBER          shift and go to state 19
    FLOAT           shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    NOT             shift and go to state 23
    LISTOF          shift and go to state 24
    MUTABLELISTOF   shift and go to state 25
    MAPOF           shift and go to state 26
    MUTABLEMAPOF    shift and go to state 27
    SETOF           shift and go to state 28
    MUTABLESETOF    shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    IF              shift and go to state 32
    VAL             shift and go to state 33
    VAR             shift and go to state 34
    FUN             shift and go to state 35
    RETURN          shift and go to state 36
    CLASS           shift and go to state 37
    OPEN            shift and go to state 38

  ! RLLAVE          [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! PRINT           [ reduce using rule 4 (empty -> .) ]
  ! LPAREN          [ reduce using rule 4 (empty -> .) ]
  ! NUMBER          [ reduce using rule 4 (empty -> .) ]
  ! FLOAT           [ reduce using rule 4 (empty -> .) ]
  ! TRUE            [ reduce using rule 4 (empty -> .) ]
  ! FALSE           [ reduce using rule 4 (empty -> .) ]
  ! NOT             [ reduce using rule 4 (empty -> .) ]
  ! LISTOF          [ reduce using rule 4 (empty -> .) ]
  ! MUTABLELISTOF   [ reduce using rule 4 (empty -> .) ]
  ! MAPOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLEMAPOF    [ reduce using rule 4 (empty -> .) ]
  ! SETOF           [ reduce using rule 4 (empty -> .) ]
  ! MUTABLESETOF    [ reduce using rule 4 (empty -> .) ]
  ! FOR             [ reduce using rule 4 (empty -> .) ]
  ! WHILE           [ reduce using rule 4 (empty -> .) ]
  ! IF              [ reduce using rule 4 (empty -> .) ]
  ! VAL             [ reduce using rule 4 (empty -> .) ]
  ! VAR             [ reduce using rule 4 (empty -> .) ]
  ! FUN             [ reduce using rule 4 (empty -> .) ]
  ! RETURN          [ reduce using rule 4 (empty -> .) ]
  ! CLASS           [ reduce using rule 4 (empty -> .) ]
  ! OPEN            [ reduce using rule 4 (empty -> .) ]

    condicion                      shift and go to state 8
    sentencia                      shift and go to state 39
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresion                      shift and go to state 7
    estructura                     shift and go to state 9
    declaracion_variable           shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 12
    retorno                        shift and go to state 13
    clase                          shift and go to state 14
    constructorPri                 shift and go to state 15

state 236

    (92) parametros -> VARIABLE COLON VARIABLE ASIGN valor COMMA parametros .

    RPAREN          reduce using rule 92 (parametros -> VARIABLE COLON VARIABLE ASIGN valor COMMA parametros .)


state 237

    (97) funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .

    VARIABLE        reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 97 (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE LLLAVE sentencias RLLAVE .)


state 238

    (116) constructorSec -> CONSTRUCTOR LPAREN parametros . RPAREN COLON formarThis LLLAVE repetirThis RLLAVE
    (117) constructorSec -> CONSTRUCTOR LPAREN parametros . RPAREN COLON LLLAVE repetirThis RLLAVE
    (118) constructorSec -> CONSTRUCTOR LPAREN parametros . RPAREN COLON formarThis LLLAVE RLLAVE
    (119) constructorSec -> CONSTRUCTOR LPAREN parametros . RPAREN COLON LLLAVE RLLAVE

    RPAREN          shift and go to state 241


state 239

    (84) estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .

    VARIABLE        reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 84 (estructura -> FOR LPAREN VARIABLE IN valor RANGE_TO valor RPAREN LLLAVE sentencias RLLAVE .)


state 240

    (90) repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .
    (91) repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE . repetirElseIf
    (90) repetirElseIf -> . ELSE IF condicion LLLAVE sentencias RLLAVE
    (91) repetirElseIf -> . ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf

  ! shift/reduce conflict for ELSE resolved as shift
    VARIABLE        reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    PRINT           reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    LPAREN          reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    NUMBER          reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    FLOAT           reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    TRUE            reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    FALSE           reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    NOT             reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    LISTOF          reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLELISTOF   reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    MAPOF           reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLEMAPOF    reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    SETOF           reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    MUTABLESETOF    reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    VAL             reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    FUN             reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    CLASS           reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    OPEN            reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    CONSTRUCTOR     reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .)
    ELSE            shift and go to state 242

  ! ELSE            [ reduce using rule 90 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE .) ]

    repetirElseIf                  shift and go to state 243

state 241

    (116) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN . COLON formarThis LLLAVE repetirThis RLLAVE
    (117) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN . COLON LLLAVE repetirThis RLLAVE
    (118) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN . COLON formarThis LLLAVE RLLAVE
    (119) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN . COLON LLLAVE RLLAVE

    COLON           shift and go to state 244


state 242

    (90) repetirElseIf -> ELSE . IF condicion LLLAVE sentencias RLLAVE
    (91) repetirElseIf -> ELSE . IF condicion LLLAVE sentencias RLLAVE repetirElseIf

    IF              shift and go to state 198


state 243

    (91) repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .

    ELSE            reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    VARIABLE        reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    PRINT           reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    LPAREN          reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    NUMBER          reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FLOAT           reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    TRUE            reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FALSE           reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    NOT             reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    LISTOF          reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLELISTOF   reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MAPOF           reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLEMAPOF    reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    SETOF           reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    MUTABLESETOF    reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FOR             reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    WHILE           reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    IF              reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    VAL             reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    VAR             reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    FUN             reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    RETURN          reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    CLASS           reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    OPEN            reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    $end            reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    RLLAVE          reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)
    CONSTRUCTOR     reduce using rule 91 (repetirElseIf -> ELSE IF condicion LLLAVE sentencias RLLAVE repetirElseIf .)


state 244

    (116) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON . formarThis LLLAVE repetirThis RLLAVE
    (117) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON . LLLAVE repetirThis RLLAVE
    (118) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON . formarThis LLLAVE RLLAVE
    (119) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON . LLLAVE RLLAVE
    (102) formarThis -> . THIS LPAREN repiteValores RPAREN

    LLLAVE          shift and go to state 246
    THIS            shift and go to state 247

    formarThis                     shift and go to state 245

state 245

    (116) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis . LLLAVE repetirThis RLLAVE
    (118) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis . LLLAVE RLLAVE

    LLLAVE          shift and go to state 248


state 246

    (117) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON LLLAVE . repetirThis RLLAVE
    (119) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON LLLAVE . RLLAVE
    (100) repetirThis -> . THIS DOT VARIABLE ASIGN valor repetirThis
    (101) repetirThis -> . THIS DOT VARIABLE ASIGN valor

    RLLAVE          shift and go to state 250
    THIS            shift and go to state 251

    repetirThis                    shift and go to state 249

state 247

    (102) formarThis -> THIS . LPAREN repiteValores RPAREN

    LPAREN          shift and go to state 252


state 248

    (116) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE . repetirThis RLLAVE
    (118) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE . RLLAVE
    (100) repetirThis -> . THIS DOT VARIABLE ASIGN valor repetirThis
    (101) repetirThis -> . THIS DOT VARIABLE ASIGN valor

    RLLAVE          shift and go to state 254
    THIS            shift and go to state 251

    repetirThis                    shift and go to state 253

state 249

    (117) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON LLLAVE repetirThis . RLLAVE

    RLLAVE          shift and go to state 255


state 250

    (119) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON LLLAVE RLLAVE .

    RLLAVE          reduce using rule 119 (constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON LLLAVE RLLAVE .)


state 251

    (100) repetirThis -> THIS . DOT VARIABLE ASIGN valor repetirThis
    (101) repetirThis -> THIS . DOT VARIABLE ASIGN valor

    DOT             shift and go to state 256


state 252

    (102) formarThis -> THIS LPAREN . repiteValores RPAREN
    (36) repiteValores -> . valor COMMA repiteValores
    (37) repiteValores -> . valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    repiteValores                  shift and go to state 257
    valor                          shift and go to state 111

state 253

    (116) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis . RLLAVE

    RLLAVE          shift and go to state 258


state 254

    (118) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE RLLAVE .

    RLLAVE          reduce using rule 118 (constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE RLLAVE .)


state 255

    (117) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON LLLAVE repetirThis RLLAVE .

    RLLAVE          reduce using rule 117 (constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON LLLAVE repetirThis RLLAVE .)


state 256

    (100) repetirThis -> THIS DOT . VARIABLE ASIGN valor repetirThis
    (101) repetirThis -> THIS DOT . VARIABLE ASIGN valor

    VARIABLE        shift and go to state 259


state 257

    (102) formarThis -> THIS LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 260


state 258

    (116) constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE .

    RLLAVE          reduce using rule 116 (constructorSec -> CONSTRUCTOR LPAREN parametros RPAREN COLON formarThis LLLAVE repetirThis RLLAVE .)


state 259

    (100) repetirThis -> THIS DOT VARIABLE . ASIGN valor repetirThis
    (101) repetirThis -> THIS DOT VARIABLE . ASIGN valor

    ASIGN           shift and go to state 261


state 260

    (102) formarThis -> THIS LPAREN repiteValores RPAREN .

    LLLAVE          reduce using rule 102 (formarThis -> THIS LPAREN repiteValores RPAREN .)


state 261

    (100) repetirThis -> THIS DOT VARIABLE ASIGN . valor repetirThis
    (101) repetirThis -> THIS DOT VARIABLE ASIGN . valor
    (30) valor -> . NUMBER
    (31) valor -> . FLOAT
    (32) valor -> . VARIABLE
    (33) valor -> . STRING
    (34) valor -> . TRUE
    (35) valor -> . FALSE

    NUMBER          shift and go to state 112
    FLOAT           shift and go to state 113
    VARIABLE        shift and go to state 114
    STRING          shift and go to state 87
    TRUE            shift and go to state 115
    FALSE           shift and go to state 116

    valor                          shift and go to state 262

state 262

    (100) repetirThis -> THIS DOT VARIABLE ASIGN valor . repetirThis
    (101) repetirThis -> THIS DOT VARIABLE ASIGN valor .
    (100) repetirThis -> . THIS DOT VARIABLE ASIGN valor repetirThis
    (101) repetirThis -> . THIS DOT VARIABLE ASIGN valor

    RLLAVE          reduce using rule 101 (repetirThis -> THIS DOT VARIABLE ASIGN valor .)
    THIS            shift and go to state 251

    repetirThis                    shift and go to state 263

state 263

    (100) repetirThis -> THIS DOT VARIABLE ASIGN valor repetirThis .

    RLLAVE          reduce using rule 100 (repetirThis -> THIS DOT VARIABLE ASIGN valor repetirThis .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 0 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for NOT in state 0 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 0 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 0 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 0 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 0 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 0 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for VAL in state 0 resolved as shift
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for FUN in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 0 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 0 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 2 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 2 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 2 resolved as shift
WARNING: shift/reduce conflict for NOT in state 2 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 2 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 2 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 2 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 2 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 2 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for VAL in state 2 resolved as shift
WARNING: shift/reduce conflict for VAR in state 2 resolved as shift
WARNING: shift/reduce conflict for FUN in state 2 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 2 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 2 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 36 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 36 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 36 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 36 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 36 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 36 resolved as shift
WARNING: shift/reduce conflict for NOT in state 36 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 36 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 36 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 36 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 36 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 36 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 36 resolved as shift
WARNING: shift/reduce conflict for FOR in state 36 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 36 resolved as shift
WARNING: shift/reduce conflict for IF in state 36 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 56 resolved as shift
WARNING: shift/reduce conflict for AND in state 58 resolved as shift
WARNING: shift/reduce conflict for OR in state 58 resolved as shift
WARNING: shift/reduce conflict for AND in state 58 resolved as shift
WARNING: shift/reduce conflict for OR in state 58 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 59 resolved as shift
WARNING: shift/reduce conflict for LESS in state 59 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 59 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 59 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 59 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for MOD in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 90 resolved as shift
WARNING: shift/reduce conflict for MOD in state 90 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 90 resolved as shift
WARNING: shift/reduce conflict for LESS in state 90 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 90 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 90 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 90 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 90 resolved as shift
WARNING: shift/reduce conflict for AND in state 91 resolved as shift
WARNING: shift/reduce conflict for OR in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 92 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 92 resolved as shift
WARNING: shift/reduce conflict for MOD in state 92 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 92 resolved as shift
WARNING: shift/reduce conflict for LESS in state 92 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 92 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 92 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 92 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for MOD in state 93 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 93 resolved as shift
WARNING: shift/reduce conflict for LESS in state 93 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 93 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 93 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 93 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 94 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 94 resolved as shift
WARNING: shift/reduce conflict for MOD in state 94 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 94 resolved as shift
WARNING: shift/reduce conflict for LESS in state 94 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for MOD in state 95 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 95 resolved as shift
WARNING: shift/reduce conflict for LESS in state 95 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 95 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 95 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 95 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 96 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 96 resolved as shift
WARNING: shift/reduce conflict for MOD in state 96 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 96 resolved as shift
WARNING: shift/reduce conflict for LESS in state 96 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for MOD in state 97 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 97 resolved as shift
WARNING: shift/reduce conflict for LESS in state 97 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 98 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 98 resolved as shift
WARNING: shift/reduce conflict for MOD in state 98 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 98 resolved as shift
WARNING: shift/reduce conflict for LESS in state 98 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 98 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 98 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 98 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 99 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 99 resolved as shift
WARNING: shift/reduce conflict for MOD in state 99 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 99 resolved as shift
WARNING: shift/reduce conflict for LESS in state 99 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 99 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 99 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 99 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 100 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 100 resolved as shift
WARNING: shift/reduce conflict for MOD in state 100 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 100 resolved as shift
WARNING: shift/reduce conflict for LESS in state 100 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 100 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 100 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 100 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 101 resolved as shift
WARNING: shift/reduce conflict for MOD in state 101 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 101 resolved as shift
WARNING: shift/reduce conflict for LESS in state 101 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for AND in state 102 resolved as shift
WARNING: shift/reduce conflict for OR in state 102 resolved as shift
WARNING: shift/reduce conflict for AND in state 103 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 104 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 119 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 133 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 133 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 133 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 133 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 133 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 133 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 133 resolved as shift
WARNING: shift/reduce conflict for NOT in state 133 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 133 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 133 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 133 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 133 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 133 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 133 resolved as shift
WARNING: shift/reduce conflict for FOR in state 133 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 133 resolved as shift
WARNING: shift/reduce conflict for IF in state 133 resolved as shift
WARNING: shift/reduce conflict for VAL in state 133 resolved as shift
WARNING: shift/reduce conflict for VAR in state 133 resolved as shift
WARNING: shift/reduce conflict for FUN in state 133 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 133 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 133 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 133 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 134 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 134 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 134 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 134 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 134 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 134 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 134 resolved as shift
WARNING: shift/reduce conflict for NOT in state 134 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 134 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 134 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 134 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 134 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 134 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 134 resolved as shift
WARNING: shift/reduce conflict for FOR in state 134 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 134 resolved as shift
WARNING: shift/reduce conflict for IF in state 134 resolved as shift
WARNING: shift/reduce conflict for VAL in state 134 resolved as shift
WARNING: shift/reduce conflict for VAR in state 134 resolved as shift
WARNING: shift/reduce conflict for FUN in state 134 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 134 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 134 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 134 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 138 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 138 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 138 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 138 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 138 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 138 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 138 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 138 resolved as shift
WARNING: shift/reduce conflict for NOT in state 138 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 138 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 138 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 138 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 138 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 138 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 138 resolved as shift
WARNING: shift/reduce conflict for FOR in state 138 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 138 resolved as shift
WARNING: shift/reduce conflict for IF in state 138 resolved as shift
WARNING: shift/reduce conflict for VAL in state 138 resolved as shift
WARNING: shift/reduce conflict for VAR in state 138 resolved as shift
WARNING: shift/reduce conflict for FUN in state 138 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 138 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 138 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 138 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 153 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 153 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 153 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 153 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 153 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 153 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 153 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 153 resolved as shift
WARNING: shift/reduce conflict for NOT in state 153 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 153 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 153 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 153 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 153 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 153 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 153 resolved as shift
WARNING: shift/reduce conflict for FOR in state 153 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 153 resolved as shift
WARNING: shift/reduce conflict for IF in state 153 resolved as shift
WARNING: shift/reduce conflict for VAL in state 153 resolved as shift
WARNING: shift/reduce conflict for VAR in state 153 resolved as shift
WARNING: shift/reduce conflict for FUN in state 153 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 153 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 153 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 153 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 154 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 154 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 154 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 154 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 154 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 154 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 154 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 154 resolved as shift
WARNING: shift/reduce conflict for NOT in state 154 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 154 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 154 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 154 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 154 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 154 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 154 resolved as shift
WARNING: shift/reduce conflict for FOR in state 154 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 154 resolved as shift
WARNING: shift/reduce conflict for IF in state 154 resolved as shift
WARNING: shift/reduce conflict for VAL in state 154 resolved as shift
WARNING: shift/reduce conflict for VAR in state 154 resolved as shift
WARNING: shift/reduce conflict for FUN in state 154 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 154 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 154 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 154 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 155 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 165 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 165 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 165 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 165 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 165 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 165 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 165 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 165 resolved as shift
WARNING: shift/reduce conflict for NOT in state 165 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 165 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 165 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 165 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 165 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 165 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 165 resolved as shift
WARNING: shift/reduce conflict for FOR in state 165 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 165 resolved as shift
WARNING: shift/reduce conflict for IF in state 165 resolved as shift
WARNING: shift/reduce conflict for VAL in state 165 resolved as shift
WARNING: shift/reduce conflict for VAR in state 165 resolved as shift
WARNING: shift/reduce conflict for FUN in state 165 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 165 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 165 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 165 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 169 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 169 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 169 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 169 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 169 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 169 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 169 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 169 resolved as shift
WARNING: shift/reduce conflict for NOT in state 169 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 169 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 169 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 169 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 169 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 169 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 169 resolved as shift
WARNING: shift/reduce conflict for FOR in state 169 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 169 resolved as shift
WARNING: shift/reduce conflict for IF in state 169 resolved as shift
WARNING: shift/reduce conflict for VAL in state 169 resolved as shift
WARNING: shift/reduce conflict for VAR in state 169 resolved as shift
WARNING: shift/reduce conflict for FUN in state 169 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 169 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 169 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 169 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 182 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 182 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 182 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 182 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 182 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 182 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 182 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 182 resolved as shift
WARNING: shift/reduce conflict for NOT in state 182 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 182 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 182 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 182 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 182 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 182 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 182 resolved as shift
WARNING: shift/reduce conflict for FOR in state 182 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 182 resolved as shift
WARNING: shift/reduce conflict for IF in state 182 resolved as shift
WARNING: shift/reduce conflict for VAL in state 182 resolved as shift
WARNING: shift/reduce conflict for VAR in state 182 resolved as shift
WARNING: shift/reduce conflict for FUN in state 182 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 182 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 182 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 182 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 199 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 199 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 199 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 199 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 199 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 199 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 199 resolved as shift
WARNING: shift/reduce conflict for NOT in state 199 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 199 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 199 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 199 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 199 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 199 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 199 resolved as shift
WARNING: shift/reduce conflict for FOR in state 199 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for VAL in state 199 resolved as shift
WARNING: shift/reduce conflict for VAR in state 199 resolved as shift
WARNING: shift/reduce conflict for FUN in state 199 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 199 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 199 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 199 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 204 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 204 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 204 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 204 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 204 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 204 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 204 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 204 resolved as shift
WARNING: shift/reduce conflict for NOT in state 204 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 204 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 204 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 204 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 204 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 204 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 204 resolved as shift
WARNING: shift/reduce conflict for FOR in state 204 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 204 resolved as shift
WARNING: shift/reduce conflict for IF in state 204 resolved as shift
WARNING: shift/reduce conflict for VAL in state 204 resolved as shift
WARNING: shift/reduce conflict for VAR in state 204 resolved as shift
WARNING: shift/reduce conflict for FUN in state 204 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 204 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 204 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 204 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 209 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 209 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 209 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 209 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 209 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 209 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 209 resolved as shift
WARNING: shift/reduce conflict for NOT in state 209 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 209 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 209 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 209 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 209 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 209 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 209 resolved as shift
WARNING: shift/reduce conflict for FOR in state 209 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 209 resolved as shift
WARNING: shift/reduce conflict for IF in state 209 resolved as shift
WARNING: shift/reduce conflict for VAL in state 209 resolved as shift
WARNING: shift/reduce conflict for VAR in state 209 resolved as shift
WARNING: shift/reduce conflict for FUN in state 209 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 209 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 209 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 209 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 211 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 211 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 211 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 211 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 211 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 211 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 211 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 211 resolved as shift
WARNING: shift/reduce conflict for NOT in state 211 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 211 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 211 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 211 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 211 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 211 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 211 resolved as shift
WARNING: shift/reduce conflict for FOR in state 211 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 211 resolved as shift
WARNING: shift/reduce conflict for IF in state 211 resolved as shift
WARNING: shift/reduce conflict for VAL in state 211 resolved as shift
WARNING: shift/reduce conflict for VAR in state 211 resolved as shift
WARNING: shift/reduce conflict for FUN in state 211 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 211 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 211 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 211 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 214 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 214 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 214 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 214 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 214 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 214 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 214 resolved as shift
WARNING: shift/reduce conflict for NOT in state 214 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 214 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 214 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 214 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 214 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 214 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 214 resolved as shift
WARNING: shift/reduce conflict for FOR in state 214 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 214 resolved as shift
WARNING: shift/reduce conflict for IF in state 214 resolved as shift
WARNING: shift/reduce conflict for VAL in state 214 resolved as shift
WARNING: shift/reduce conflict for VAR in state 214 resolved as shift
WARNING: shift/reduce conflict for FUN in state 214 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 214 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 214 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 214 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 215 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 215 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 215 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 215 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 215 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 215 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 215 resolved as shift
WARNING: shift/reduce conflict for NOT in state 215 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 215 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 215 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 215 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 215 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 215 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 215 resolved as shift
WARNING: shift/reduce conflict for FOR in state 215 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 215 resolved as shift
WARNING: shift/reduce conflict for IF in state 215 resolved as shift
WARNING: shift/reduce conflict for VAL in state 215 resolved as shift
WARNING: shift/reduce conflict for VAR in state 215 resolved as shift
WARNING: shift/reduce conflict for FUN in state 215 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 215 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 215 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 215 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 217 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 217 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 217 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 217 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 217 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 217 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 217 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 217 resolved as shift
WARNING: shift/reduce conflict for NOT in state 217 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 217 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 217 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 217 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 217 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 217 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 217 resolved as shift
WARNING: shift/reduce conflict for FOR in state 217 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 217 resolved as shift
WARNING: shift/reduce conflict for IF in state 217 resolved as shift
WARNING: shift/reduce conflict for VAL in state 217 resolved as shift
WARNING: shift/reduce conflict for VAR in state 217 resolved as shift
WARNING: shift/reduce conflict for FUN in state 217 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 217 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 217 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 217 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 223 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 223 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 223 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 223 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 223 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 223 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 223 resolved as shift
WARNING: shift/reduce conflict for NOT in state 223 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 223 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 223 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 223 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 223 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 223 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 223 resolved as shift
WARNING: shift/reduce conflict for FOR in state 223 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 223 resolved as shift
WARNING: shift/reduce conflict for IF in state 223 resolved as shift
WARNING: shift/reduce conflict for VAL in state 223 resolved as shift
WARNING: shift/reduce conflict for VAR in state 223 resolved as shift
WARNING: shift/reduce conflict for FUN in state 223 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 223 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 223 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 223 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 224 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 224 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 224 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 224 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 224 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 224 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 224 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 224 resolved as shift
WARNING: shift/reduce conflict for NOT in state 224 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 224 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 224 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 224 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 224 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 224 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 224 resolved as shift
WARNING: shift/reduce conflict for FOR in state 224 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 224 resolved as shift
WARNING: shift/reduce conflict for IF in state 224 resolved as shift
WARNING: shift/reduce conflict for VAL in state 224 resolved as shift
WARNING: shift/reduce conflict for VAR in state 224 resolved as shift
WARNING: shift/reduce conflict for FUN in state 224 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 224 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 224 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 224 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 225 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 225 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 225 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 225 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 225 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 225 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 225 resolved as shift
WARNING: shift/reduce conflict for NOT in state 225 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 225 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 225 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 225 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 225 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 225 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 225 resolved as shift
WARNING: shift/reduce conflict for FOR in state 225 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 225 resolved as shift
WARNING: shift/reduce conflict for IF in state 225 resolved as shift
WARNING: shift/reduce conflict for VAL in state 225 resolved as shift
WARNING: shift/reduce conflict for VAR in state 225 resolved as shift
WARNING: shift/reduce conflict for FUN in state 225 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 225 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 225 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 225 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 228 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 228 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 228 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 228 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 228 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 228 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 228 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 228 resolved as shift
WARNING: shift/reduce conflict for NOT in state 228 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 228 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 228 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 228 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 228 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 228 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 228 resolved as shift
WARNING: shift/reduce conflict for FOR in state 228 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 228 resolved as shift
WARNING: shift/reduce conflict for IF in state 228 resolved as shift
WARNING: shift/reduce conflict for VAL in state 228 resolved as shift
WARNING: shift/reduce conflict for VAR in state 228 resolved as shift
WARNING: shift/reduce conflict for FUN in state 228 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 228 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 228 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 228 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 229 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 229 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 229 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 229 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 229 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 229 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 229 resolved as shift
WARNING: shift/reduce conflict for NOT in state 229 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 229 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 229 resolved as shift
WARNING: shift/reduce conflict for FOR in state 229 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 229 resolved as shift
WARNING: shift/reduce conflict for IF in state 229 resolved as shift
WARNING: shift/reduce conflict for VAL in state 229 resolved as shift
WARNING: shift/reduce conflict for VAR in state 229 resolved as shift
WARNING: shift/reduce conflict for FUN in state 229 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 229 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 229 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 229 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 229 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 229 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 229 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 229 resolved as shift
WARNING: shift/reduce conflict for NOT in state 229 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 229 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 229 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 229 resolved as shift
WARNING: shift/reduce conflict for FOR in state 229 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 229 resolved as shift
WARNING: shift/reduce conflict for IF in state 229 resolved as shift
WARNING: shift/reduce conflict for VAL in state 229 resolved as shift
WARNING: shift/reduce conflict for VAR in state 229 resolved as shift
WARNING: shift/reduce conflict for FUN in state 229 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 229 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 229 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 229 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 233 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 233 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 233 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 233 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 233 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 233 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 233 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 233 resolved as shift
WARNING: shift/reduce conflict for NOT in state 233 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 233 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 233 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 233 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 233 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 233 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 233 resolved as shift
WARNING: shift/reduce conflict for FOR in state 233 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 233 resolved as shift
WARNING: shift/reduce conflict for IF in state 233 resolved as shift
WARNING: shift/reduce conflict for VAL in state 233 resolved as shift
WARNING: shift/reduce conflict for VAR in state 233 resolved as shift
WARNING: shift/reduce conflict for FUN in state 233 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 233 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 233 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 233 resolved as shift
WARNING: shift/reduce conflict for RLLAVE in state 235 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 235 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 235 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 235 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 235 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 235 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 235 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 235 resolved as shift
WARNING: shift/reduce conflict for NOT in state 235 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 235 resolved as shift
WARNING: shift/reduce conflict for MUTABLELISTOF in state 235 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 235 resolved as shift
WARNING: shift/reduce conflict for MUTABLEMAPOF in state 235 resolved as shift
WARNING: shift/reduce conflict for SETOF in state 235 resolved as shift
WARNING: shift/reduce conflict for MUTABLESETOF in state 235 resolved as shift
WARNING: shift/reduce conflict for FOR in state 235 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 235 resolved as shift
WARNING: shift/reduce conflict for IF in state 235 resolved as shift
WARNING: shift/reduce conflict for VAL in state 235 resolved as shift
WARNING: shift/reduce conflict for VAR in state 235 resolved as shift
WARNING: shift/reduce conflict for FUN in state 235 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 235 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 235 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 235 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 240 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (programa -> sentencias)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 8 resolved using rule (sentencia -> condicion)
WARNING: rejected rule (expresion -> condicion) in state 8
WARNING: reduce/reduce conflict in state 21 resolved using rule (expresion -> TRUE)
WARNING: rejected rule (condicion -> TRUE) in state 21
WARNING: reduce/reduce conflict in state 22 resolved using rule (expresion -> FALSE)
WARNING: rejected rule (condicion -> FALSE) in state 22
WARNING: reduce/reduce conflict in state 58 resolved using rule (expresion -> condicion)
WARNING: rejected rule (condicion -> NOT condicion) in state 58
WARNING: reduce/reduce conflict in state 60 resolved using rule (expresion -> TRUE)
WARNING: rejected rule (condicion -> TRUE) in state 60
WARNING: reduce/reduce conflict in state 61 resolved using rule (expresion -> FALSE)
WARNING: rejected rule (condicion -> FALSE) in state 61
WARNING: reduce/reduce conflict in state 78 resolved using rule (expresion -> condicion)
WARNING: rejected rule (objetoRetorno -> condicion) in state 78
WARNING: reduce/reduce conflict in state 80 resolved using rule (valor -> TRUE)
WARNING: rejected rule (objetoRetorno -> TRUE) in state 80
WARNING: reduce/reduce conflict in state 80 resolved using rule (valor -> TRUE)
WARNING: rejected rule (condicion -> TRUE) in state 80
WARNING: reduce/reduce conflict in state 80 resolved using rule (expresion -> TRUE)
WARNING: rejected rule (condicion -> TRUE) in state 80
WARNING: reduce/reduce conflict in state 80 resolved using rule (valor -> TRUE)
WARNING: rejected rule (expresion -> TRUE) in state 80
WARNING: reduce/reduce conflict in state 81 resolved using rule (valor -> FALSE)
WARNING: rejected rule (objetoRetorno -> FALSE) in state 81
WARNING: reduce/reduce conflict in state 81 resolved using rule (valor -> FALSE)
WARNING: rejected rule (condicion -> FALSE) in state 81
WARNING: reduce/reduce conflict in state 81 resolved using rule (expresion -> FALSE)
WARNING: rejected rule (condicion -> FALSE) in state 81
WARNING: reduce/reduce conflict in state 81 resolved using rule (valor -> FALSE)
WARNING: rejected rule (expresion -> FALSE) in state 81
WARNING: reduce/reduce conflict in state 84 resolved using rule (valor -> NUMBER)
WARNING: rejected rule (expresion -> NUMBER) in state 84
WARNING: reduce/reduce conflict in state 85 resolved using rule (valor -> FLOAT)
WARNING: rejected rule (expresion -> FLOAT) in state 85
WARNING: reduce/reduce conflict in state 86 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (expresion -> VARIABLE) in state 86
WARNING: reduce/reduce conflict in state 102 resolved using rule (expresion -> condicion)
WARNING: rejected rule (condicion -> condicion AND condicion) in state 102
WARNING: reduce/reduce conflict in state 103 resolved using rule (expresion -> condicion)
WARNING: rejected rule (condicion -> condicion OR condicion) in state 103
WARNING: reduce/reduce conflict in state 104 resolved using rule (asignacion -> VARIABLE ASIGN VARIABLE)
WARNING: rejected rule (expresion -> VARIABLE) in state 104
WARNING: reduce/reduce conflict in state 106 resolved using rule (asignacion -> VARIABLE ASIGN condicion)
WARNING: rejected rule (expresion -> condicion) in state 106
WARNING: reduce/reduce conflict in state 229 resolved using rule (empty -> <empty>)
WARNING: rejected rule (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias) in state 229
WARNING: Rule (condicion -> NOT condicion) is never reduced
WARNING: Rule (objetoRetorno -> condicion) is never reduced
WARNING: Rule (objetoRetorno -> TRUE) is never reduced
WARNING: Rule (objetoRetorno -> FALSE) is never reduced
WARNING: Rule (funcion -> FUN VARIABLE LPAREN parametros RPAREN COLON VARIABLE ASIGN sentencias) is never reduced
